# ********RoostGPT********

# Test generated by RoostGPT for test testingartillerytest using AI Type Azure Open AI and AI Model roostgpt-4-32k
# 
# Test generated for /laureates_get for http method type GET in artillery framework
# RoostTestHash=ff433d7857
# 
# 

# ********RoostGPT********
config:
  target: "{{ $processEnvironment.url1_nobel_API_HOST }}"
  phases:
    - name: "Testing scenarios for non-successful API responses"
      duration: 60
      arrivalRate: 5
  payload:
    path: "laureates_get_others.csv"
    fields:
      - offset
      - limit
      - ID
      - gender
      - nobelPrizeYear
    skipHeader: true
    delimiter: "^|^"
  plugins:
    expect: {}

scenarios:
  - name: "Single failure-inducing scenario for API testing"
    flow:
      # Request 1: Invalid offset and limit values
      - log: "Testing invalid offset and limit values"
      - get:
          url: "/2.1/laureates?offset=-1&limit=-1"
          headers:
            Authorization: "{{ $processEnvironment.url1_nobel_AUTH_TOKEN }}"
          expect:
            statusCode: 400
            hasProperty: "error"
            contentType: "application/json"
      - think:
          duration: 3

      # Request 2: Invalid ID parameter with a non-integer value
      - log: "Testing invalid ID parameter with non-integer value"
      - get:
          url: "/2.1/laureates?ID=invalidID"
          headers:
            Authorization: "{{ $processEnvironment.url1_nobel_AUTH_TOKEN }}"
          expect:
            statusCode: 400
            hasProperty: "error"
            contentType: "application/json"
      - think:
          duration: 3

      # Request 3: Invalid gender parameter
      - log: "Testing invalid gender parameter with unsupported value"
      - get:
          url: "/2.1/laureates?gender=unknown"
          headers:
            Authorization: "{{ $processEnvironment.url1_nobel_AUTH_TOKEN }}"
          expect:
            statusCode: 400
            hasProperty: "error"
            contentType: "application/json"
      - think:
          duration: 3

      # Request 4: Missing mandatory query parameters when using yearTo
      - log: "Testing missing mandatory parameters when using yearTo"
      - get:
          url: "/2.1/laureates?yearTo=2020"
          headers:
            Authorization: "{{ $processEnvironment.url1_nobel_AUTH_TOKEN }}"
          expect:
            statusCode: 400
            hasProperty: "error"
            contentType: "application/json"
      - think:
          duration: 3

      # Request 5: Testing an invalid URL
      - log: "Testing an invalid URL path"
      - get:
          url: "/invalid/laureates"
          headers:
            Authorization: "{{ $processEnvironment.url1_nobel_AUTH_TOKEN }}"
          expect:
            statusCode: 404
            hasProperty: "error"
            contentType: "application/json"
      - think:
          duration: 3
