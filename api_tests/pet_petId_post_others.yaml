# ********RoostGPT********

# Test generated by RoostGPT for test artillery-test-gen using AI Type Azure Open AI and AI Model roostgpt-4-32k
# 
# Test generated for /pet/{petId}_post for http method type POST in artillery framework
# RoostTestHash=c0bc5294a0
# 
# 

# ********RoostGPT********
config:
  target: "{{ $processEnvironment.API_HOST }}"
  plugins:
    expect: {}
  environments:
    dev:
      target: "{{ $processEnvironment.API_HOST }}"
      payload:
        path: "pet_petId_post_others.csv"
        fields:
          - "petId"
          - "name"
          - "status"
        skipHeader: true
        delimiter: "^|^"
  phases:
    - duration: 1
      arrivalRate: 1
      rampTo: 1

scenarios:
  - name: API failure case simulation
    flow:
      - log: "Starting Test 1 - Simulating Invalid petId"
      - post:
          url: "/v2/pet/abcdef"
          headers:
            api_key: "{{$processEnvironment.AUTH_TOKEN}}"
          expect:
            - statusCode: 400
            - hasHeader: "content-type"
            - headerEquals: ["content-type", "application/json"]
      - think: 1
      
      - log: "Starting Test 2 - Simulating incorrect API method"
      - put:
          url: "/v2/pet/{{ petId }}"
          headers:
            api_key: "{{$processEnvironment.AUTH_TOKEN}}"
          expect:
            - statusCode: 405
            - hasHeader: "content-type"
            - headerEquals: ["content-type", "application/json"]
      - think: 1
      
      - log: "Starting Test 3 - Sending Request Without Required Header"
      - post:
          url: "/v2/pet/{{ petId }}"
          expect:
            - statusCode: 401
            - hasHeader: "content-type"
            - headerEquals: ["content-type", "application/json"]
      - think: 1
      
      - log: "Starting Test 4 - Sending Request With Invalid Payload"
      - post:
          url: "/v2/pet/{{ petId }}"
          headers:
            api_key: "{{$processEnvironment.AUTH_TOKEN}}"
          json:
            name: "@{name}"
            status: "invalidstatus"
          expect:
            - statusCode: 400
            - hasHeader: "content-type"
            - headerEquals: ["content-type", "application/json"]
      - think: 1
