# ********RoostGPT********

# Test generated by RoostGPT for test artillery-test-gen using AI Type Azure Open AI and AI Model roostgpt-4-32k
# 
# Test generated for /user_post for http method type POST in artillery framework
# RoostTestHash=d815599fc6
# 
# 

# ********RoostGPT********
config:
  target: "{{ $processEnvironment.API_HOST }}"
  plugins:
    expect: {}
  payload:
    path: "user_post_others.csv"
    fields: ["id", "username", "firstName", "lastName", "email", "password", "phone", "userStatus"]
    skipHeader: true
    delimiter: "^|^"
  headers:
    api_key: "{{ $processEnvironment.AUTH_TOKEN }}"
  phases:
    - duration: 60
      arrivalRate: 5
scenarios:
  - name: Testing failure cases for API
    flow:
      - log: "Payload with incompatible types"
      - post:
          url: "/v2/user"
          headers:
            api_key: "{{ $processEnvironment.AUTH_TOKEN }}"
          json:
            id: "{{ id }}"
            username: "{{ username }}"
            firstName: "1234"      #Wrong datatype
            lastName: "{{ lastName }}"
            email: "{{ email }}"
            password: "{{ password }}"
            phone: "{{ phone }}"
            userStatus: "{{ userStatus }}"
          expect:
            - statusCode: 400
            - hasProperty: "message"
            - equals: "Invalid login details"
      - think: 1
      - log: "POST request with missing required field"
      - post:
          url: "/v2/user"
          headers:
            api_key: "{{ $processEnvironment.AUTH_TOKEN }}"
          json:
            id: "{{ id }}"
            firstName: "{{ firstName }}"
            lastName: "{{ lastName }}"
            email: "{{ email }}"
            password: "{{ password }}"
            phone: "{{ phone }}"
            userStatus: "{{ userStatus }}"
          expect:
            - statusCode: 400
            - hasProperty: "message"
            - equals: "Missing required field: username"
      - think: 1
      - log: "POST request without authentication"
      - post:
          url: "/v2/user"
          json:
            id: "{{ id }}"
            username: "{{ username }}"
            firstName: "{{ firstName }}"
            lastName: "{{ lastName }}"
            email: "{{ email }}"
            password: "{{ password }}"
            phone: "{{ phone }}"
            userStatus: "{{ userStatus }}"
          expect:
            - statusCode: 401
            - hasProperty: "message"
            - equals: "Unauthorised"
      - think: 1
      - log: "POST request to an incorrect URL"
      - post:
          url: "/v2/fakeuser"
          headers:
            api_key: "{{ $processEnvironment.AUTH_TOKEN }}"
          json:
            id: "{{ id }}"
            username: "{{ username }}"
            firstName: "{{ firstName }}"
            lastName: "{{ lastName }}"
            email: "{{ email }}"
            password: "{{ password }}"
            phone: "{{ phone }}"
            userStatus: "{{ userStatus }}"
          expect:
            - statusCode: 404
            - hasProperty: "message"
            - equals: "Resource not found"
