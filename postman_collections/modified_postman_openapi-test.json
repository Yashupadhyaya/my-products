{
  "item": [
    {
      "id": "ad93ba2d-8235-49b1-8eaa-8d3c98023487",
      "name": "v1",
      "item": [
        {
          "id": "708d568a-ca52-4fd1-a4b9-181768889c80",
          "name": "projects",
          "item": [
            {
              "id": "7045c7fb-69ed-47cc-94a9-7a19ce0ebeda",
              "name": "Get Jira project(s).",
              "request": {
                "name": "Get Jira project(s).",
                "description": {
                  "content": "## Get or retrieve Jira project(s).",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "v1",
                    "projects"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "disabled": false,
                      "key": "keys",
                      "value": "{{keys}}",
                      "description": "keys."
                    },
                    {
                      "disabled": false,
                      "key": "limit",
                      "value": "{{limit}}",
                      "description": "Numeric value that determines that maximum N results will be returned"
                    },
                    {
                      "disabled": false,
                      "key": "offset",
                      "value": "{{offset}}",
                      "description": "Numeric value that determines that the result list will start from result #N (zero based)"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "auth": {
                  "type": "apikey",
                  "apikey": [
                    {
                      "key": "key",
                      "value": "Authorization"
                    },
                    {
                      "key": "value",
                      "value": "{{apiKey}}"
                    },
                    {
                      "key": "in",
                      "value": "header"
                    }
                  ]
                }
              },
              "response": [
                {
                  "id": "fcff8902-07fa-4d78-be35-d73c6beaf917",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "v1",
                        "projects"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "keys",
                          "value": "{{keys}}"
                        },
                        {
                          "key": "limit",
                          "value": "{{limit}}"
                        },
                        {
                          "key": "offset",
                          "value": "{{offset}}"
                        }
                      ],
                      "variable": []
                    },
                    "header": [
                      {
                        "description": {
                          "content": "Added as a part of security scheme: apikey",
                          "type": "text/plain"
                        },
                        "key": "Authorization",
                        "value": "{{Authorization}}"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n  \"offset\": 0,\n  \"limit\": 1,\n  \"totalCount\": 10,\n  \"items\": [\n    {\n      \"id\": \"10000\",\n      \"key\": \"PK\",\n      \"name\": \"Project Name\",\n      \"simplified\": false,\n      \"self\": \"Project self URL\"\n    }\n  ]\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json"
                },
                {
                  "id": "d46b1c3e-6655-4204-bc5f-0e060c157b83",
                  "name": "`Invalid parameters`.",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "v1",
                        "projects"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "keys",
                          "value": "{{keys}}"
                        },
                        {
                          "key": "limit",
                          "value": "{{limit}}"
                        },
                        {
                          "key": "offset",
                          "value": "{{offset}}"
                        }
                      ],
                      "variable": []
                    },
                    "header": [
                      {
                        "description": {
                          "content": "Added as a part of security scheme: apikey",
                          "type": "text/plain"
                        },
                        "key": "Authorization",
                        "value": "{{Authorization}}"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n  \"message\": \"bad data\"\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json"
                },
                {
                  "id": "95214288-d756-474b-aeff-db3fbadb879c",
                  "name": "`Unauthorized`.",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "v1",
                        "projects"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "keys",
                          "value": "{{keys}}"
                        },
                        {
                          "key": "limit",
                          "value": "{{limit}}"
                        },
                        {
                          "key": "offset",
                          "value": "{{offset}}"
                        }
                      ],
                      "variable": []
                    },
                    "header": [
                      {
                        "description": {
                          "content": "Added as a part of security scheme: apikey",
                          "type": "text/plain"
                        },
                        "key": "Authorization",
                        "value": "{{Authorization}}"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Unauthorized",
                  "code": 401,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n  \"message\": \"unauthorized\"\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json"
                },
                {
                  "id": "ebd5f9ed-8a10-4cbb-9c26-f0b449888f48",
                  "name": "`Not Found`.",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "v1",
                        "projects"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "keys",
                          "value": "{{keys}}"
                        },
                        {
                          "key": "limit",
                          "value": "{{limit}}"
                        },
                        {
                          "key": "offset",
                          "value": "{{offset}}"
                        }
                      ],
                      "variable": []
                    },
                    "header": [
                      {
                        "description": {
                          "content": "Added as a part of security scheme: apikey",
                          "type": "text/plain"
                        },
                        "key": "Authorization",
                        "value": "{{Authorization}}"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n  \"message\": \"not found\"\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json"
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "//Import necessary dependencies\nconst assert = require('chai').assert;\nconst myFunc = require('../src/myFunc.js');\n\n//Existing Test Case\ndescribe('myFunc()', function () {\n  it('should return “Hello, World!” when no parameters are provided', function() {\n    assert.equal(myFunc(), 'Hello, World!');\n  });\n});\n\n//Updated Test Case\ndescribe('myFunc(text)', function () {\n  it('should return text when one parameter is provided', function() {\n    let text = 'Artillery Test';\n    assert.equal(myFunc(text), 'Artillery Test');\n  });\n\n  it('should return “Hello, Artillery!” when the parameter is \"Artillery\"', function() {\n    assert.equal(myFunc('Artillery'), 'Hello, Artillery!');\n  });\n\n  it('should return responded error message for null parameter', function() {\n    assert.throws(() => { myFunc(null); }, Error, 'Invalid input');\n  });\n});\n"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              }
            },
            {
              "id": "111442af-c1b5-48a1-a050-85b40cc9f8f6",
              "name": "{project-key}",
              "item": [
                {
                  "id": "0351b84c-75fa-410b-9497-29cb9c16e957",
                  "name": "folders",
                  "item": [
                    {
                      "id": "dc2fc07c-4e17-4b37-b98f-5c945972b82f",
                      "name": "Get folder(s).",
                      "request": {
                        "name": "Get folder(s).",
                        "description": {
                          "content": "## Get folders.\r\n            \r\n#### Query parameters to filter by:\r\n            \r\n* **name** : _(optional)_: The folder name.\r\n* **parentId** _(optional)_: The ID of the parent folder where the new folder should be located. (If not provided, only root folders will return).",
                          "type": "text/plain"
                        },
                        "url": {
                          "path": [
                            "v1",
                            "projects",
                            ":project-key",
                            "folders"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [
                            {
                              "disabled": false,
                              "key": "name",
                              "value": "{{name}}",
                              "description": "name."
                            },
                            {
                              "disabled": false,
                              "key": "parentId",
                              "value": "{{parentId}}",
                              "description": "parentId."
                            },
                            {
                              "disabled": false,
                              "key": "limit",
                              "value": "{{limit}}",
                              "description": "Numeric value that determines that maximum N results will be returned"
                            },
                            {
                              "disabled": false,
                              "key": "offset",
                              "value": "{{offset}}",
                              "description": "Numeric value that determines that the result list will start from result #N (zero based)"
                            }
                          ],
                          "variable": [
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "{{project-key}}",
                              "key": "project-key",
                              "description": "(Required) "
                            }
                          ]
                        },
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "method": "GET",
                        "auth": {
                          "type": "apikey",
                          "apikey": [
                            {
                              "key": "key",
                              "value": "Authorization"
                            },
                            {
                              "key": "value",
                              "value": "{{apiKey}}"
                            },
                            {
                              "key": "in",
                              "value": "header"
                            }
                          ]
                        }
                      },
                      "response": [
                        {
                          "id": "ef26d69f-4322-403a-bd09-6f8add849733",
                          "name": "Successfully get folder(s).",
                          "originalRequest": {
                            "url": {
                              "path": [
                                "v1",
                                "projects",
                                ":project-key",
                                "folders"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [
                                {
                                  "key": "name",
                                  "value": "{{name}}"
                                },
                                {
                                  "key": "parentId",
                                  "value": "{{parentId}}"
                                },
                                {
                                  "key": "limit",
                                  "value": "{{limit}}"
                                },
                                {
                                  "key": "offset",
                                  "value": "{{offset}}"
                                }
                              ],
                              "variable": [
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "{{project-key}}",
                                  "key": "project-key",
                                  "description": "(Required) "
                                }
                              ]
                            },
                            "header": [
                              {
                                "description": {
                                  "content": "Added as a part of security scheme: apikey",
                                  "type": "text/plain"
                                },
                                "key": "Authorization",
                                "value": "{{Authorization}}"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "method": "GET",
                            "body": {}
                          },
                          "status": "OK",
                          "code": 200,
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": "{\n  \"offset\": 0,\n  \"limit\": 2,\n  \"totalCount\": 2,\n  \"items\": [\n    {\n      \"id\": \"52537f1c-03f4-40dd-9294-f620059d77d6\",\n      \"projectKey\": \"TE\",\n      \"created\": \"2025-04-29T07:21:25.1698115Z\",\n      \"updated\": \"2025-04-29T07:21:25.1698116Z\",\n      \"createdBy\": \"User\",\n      \"updatedBy\": \"User\",\n      \"index\": 0,\n      \"name\": \"Folder 1\"\n    },\n    {\n      \"id\": \"0c6a0705-39ab-4454-b256-4b5dd569eab4\",\n      \"projectKey\": \"TE\",\n      \"created\": \"2025-04-29T07:21:25.169814Z\",\n      \"updated\": \"2025-04-29T07:21:25.169814Z\",\n      \"createdBy\": \"User\",\n      \"updatedBy\": \"User\",\n      \"index\": 0,\n      \"name\": \"Folder inside another folder\"\n    }\n  ]\n}",
                          "cookie": [],
                          "_postman_previewlanguage": "json"
                        },
                        {
                          "id": "64e20755-76ca-4428-9b64-d80b7f8bf62a",
                          "name": "`Invalid parameters`.",
                          "originalRequest": {
                            "url": {
                              "path": [
                                "v1",
                                "projects",
                                ":project-key",
                                "folders"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [
                                {
                                  "key": "name",
                                  "value": "{{name}}"
                                },
                                {
                                  "key": "parentId",
                                  "value": "{{parentId}}"
                                },
                                {
                                  "key": "limit",
                                  "value": "{{limit}}"
                                },
                                {
                                  "key": "offset",
                                  "value": "{{offset}}"
                                }
                              ],
                              "variable": [
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "{{project-key}}",
                                  "key": "project-key",
                                  "description": "(Required) "
                                }
                              ]
                            },
                            "header": [
                              {
                                "description": {
                                  "content": "Added as a part of security scheme: apikey",
                                  "type": "text/plain"
                                },
                                "key": "Authorization",
                                "value": "{{Authorization}}"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "method": "GET",
                            "body": {}
                          },
                          "status": "Bad Request",
                          "code": 400,
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": "{\n  \"message\": \"bad data\"\n}",
                          "cookie": [],
                          "_postman_previewlanguage": "json"
                        },
                        {
                          "id": "fd939e72-a3fe-438c-b9c5-bfaa86fcdd36",
                          "name": "`Unauthorized`.",
                          "originalRequest": {
                            "url": {
                              "path": [
                                "v1",
                                "projects",
                                ":project-key",
                                "folders"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [
                                {
                                  "key": "name",
                                  "value": "{{name}}"
                                },
                                {
                                  "key": "parentId",
                                  "value": "{{parentId}}"
                                },
                                {
                                  "key": "limit",
                                  "value": "{{limit}}"
                                },
                                {
                                  "key": "offset",
                                  "value": "{{offset}}"
                                }
                              ],
                              "variable": [
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "{{project-key}}",
                                  "key": "project-key",
                                  "description": "(Required) "
                                }
                              ]
                            },
                            "header": [
                              {
                                "description": {
                                  "content": "Added as a part of security scheme: apikey",
                                  "type": "text/plain"
                                },
                                "key": "Authorization",
                                "value": "{{Authorization}}"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "method": "GET",
                            "body": {}
                          },
                          "status": "Unauthorized",
                          "code": 401,
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": "{\n  \"message\": \"unauthorized\"\n}",
                          "cookie": [],
                          "_postman_previewlanguage": "json"
                        },
                        {
                          "id": "edc2e98a-3d25-4f8f-89b3-a7626a6155b8",
                          "name": "`Not Found`.",
                          "originalRequest": {
                            "url": {
                              "path": [
                                "v1",
                                "projects",
                                ":project-key",
                                "folders"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [
                                {
                                  "key": "name",
                                  "value": "{{name}}"
                                },
                                {
                                  "key": "parentId",
                                  "value": "{{parentId}}"
                                },
                                {
                                  "key": "limit",
                                  "value": "{{limit}}"
                                },
                                {
                                  "key": "offset",
                                  "value": "{{offset}}"
                                }
                              ],
                              "variable": [
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "{{project-key}}",
                                  "key": "project-key",
                                  "description": "(Required) "
                                }
                              ]
                            },
                            "header": [
                              {
                                "description": {
                                  "content": "Added as a part of security scheme: apikey",
                                  "type": "text/plain"
                                },
                                "key": "Authorization",
                                "value": "{{Authorization}}"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "method": "GET",
                            "body": {}
                          },
                          "status": "Not Found",
                          "code": 404,
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": "{\n  \"message\": \"not found\"\n}",
                          "cookie": [],
                          "_postman_previewlanguage": "json"
                        }
                      ],
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "//Import necessary dependencies\nconst assert = require('chai').assert;\nconst myFunc = require('../src/myFunc.js');\n\n//Existing Test Case\ndescribe('myFunc()', function () {\n  it('should return “Hello, World!” when no parameters are provided', function() {\n    assert.equal(myFunc(), 'Hello, World!');\n  });\n});\n\n//Updated Test Case\ndescribe('myFunc(text)', function () {\n  it('should return text when one parameter is provided', function() {\n    let text = 'Artillery Test';\n    assert.equal(myFunc(text), 'Artillery Test');\n  });\n\n  it('should return “Hello, Artillery!” when the parameter is \"Artillery\"', function() {\n    assert.equal(myFunc('Artillery'), 'Hello, Artillery!');\n  });\n\n  it('should return responded error message for null parameter', function() {\n    assert.throws(() => { myFunc(null); }, Error, 'Invalid input');\n  });\n});\n"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      }
                    },
                    {
                      "id": "d83d410f-c8e8-46d1-a650-e85b40613bdf",
                      "name": "Create folder(s).",
                      "request": {
                        "name": "Create folder(s).",
                        "description": {
                          "content": "## Create new folders. The body contains a list of folders to create.\r\n            \r\n#### Body fields:\r\n            \r\n* **name** : The folder name.\r\n* **parentId** _(optional)_ : The ID of the parent folder where the new folder should be located.",
                          "type": "text/plain"
                        },
                        "url": {
                          "path": [
                            "v1",
                            "projects",
                            ":project-key",
                            "folders"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "{{project-key}}",
                              "key": "project-key",
                              "description": "(Required) "
                            }
                          ]
                        },
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "method": "POST",
                        "auth": {
                          "type": "apikey",
                          "apikey": [
                            {
                              "key": "key",
                              "value": "Authorization"
                            },
                            {
                              "key": "value",
                              "value": "{{apiKey}}"
                            },
                            {
                              "key": "in",
                              "value": "header"
                            }
                          ]
                        },
                        "body": {
                          "mode": "raw",
                          "raw": "[\n    {\n        \"name\": \"{{name}}\",\n        \"parentId\": \"{{parentId}}\"\n    }\n]",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        }
                      },
                      "response": [
                        {
                          "id": "6151c176-3e65-4337-ab15-29abaeddf258",
                          "name": "Successfully created folder(s).",
                          "originalRequest": {
                            "url": {
                              "path": [
                                "v1",
                                "projects",
                                ":project-key",
                                "folders"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [],
                              "variable": [
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "{{project-key}}",
                                  "key": "project-key",
                                  "description": "(Required) "
                                }
                              ]
                            },
                            "header": [
                              {
                                "description": {
                                  "content": "Added as a part of security scheme: apikey",
                                  "type": "text/plain"
                                },
                                "key": "Authorization",
                                "value": "{{Authorization}}"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "method": "POST",
                            "body": {
                              "mode": "raw",
                              "raw": "[\n    {\n        \"name\": \"{{name}}\"\n    },\n    {\n        \"name\": \"{{1.name}}\",\n        \"parentId\": \"{{parentId}}\"\n    }\n]",
                              "options": {
                                "raw": {
                                  "language": "json"
                                }
                              }
                            }
                          },
                          "status": "OK",
                          "code": 200,
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": "{\n  \"offset\": 0,\n  \"limit\": 2,\n  \"totalCount\": 2,\n  \"items\": [\n    {\n      \"id\": \"6f6c5e81-fd4c-429c-b29d-d967a57f699c\",\n      \"projectKey\": \"TE\",\n      \"created\": \"2025-04-29T07:21:25.1732514Z\",\n      \"updated\": \"2025-04-29T07:21:25.1732515Z\",\n      \"createdBy\": \"User\",\n      \"updatedBy\": \"User\",\n      \"index\": 0,\n      \"name\": \"Folder 1\"\n    },\n    {\n      \"id\": \"1025001e-b96e-49ea-ab63-bd33794ec0ff\",\n      \"projectKey\": \"TE\",\n      \"created\": \"2025-04-29T07:21:25.1732536Z\",\n      \"updated\": \"2025-04-29T07:21:25.1732537Z\",\n      \"createdBy\": \"User\",\n      \"updatedBy\": \"User\",\n      \"index\": 0,\n      \"name\": \"Folder inside another folder\"\n    }\n  ]\n}",
                          "cookie": [],
                          "_postman_previewlanguage": "json"
                        },
                        {
                          "id": "1213c66a-3abb-4bf2-8224-6c73ce5889ba",
                          "name": "`Invalid parameters`.",
                          "originalRequest": {
                            "url": {
                              "path": [
                                "v1",
                                "projects",
                                ":project-key",
                                "folders"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [],
                              "variable": [
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "{{project-key}}",
                                  "key": "project-key",
                                  "description": "(Required) "
                                }
                              ]
                            },
                            "header": [
                              {
                                "description": {
                                  "content": "Added as a part of security scheme: apikey",
                                  "type": "text/plain"
                                },
                                "key": "Authorization",
                                "value": "{{Authorization}}"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "method": "POST",
                            "body": {
                              "mode": "raw",
                              "raw": "[\n    {\n        \"name\": \"{{name}}\"\n    },\n    {\n        \"name\": \"{{1.name}}\",\n        \"parentId\": \"{{parentId}}\"\n    }\n]",
                              "options": {
                                "raw": {
                                  "language": "json"
                                }
                              }
                            }
                          },
                          "status": "Bad Request",
                          "code": 400,
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": "{\n  \"message\": \"bad data\"\n}",
                          "cookie": [],
                          "_postman_previewlanguage": "json"
                        },
                        {
                          "id": "33cf4cb0-533c-41a1-b0e1-c91e53aeb163",
                          "name": "`Unauthorized`.",
                          "originalRequest": {
                            "url": {
                              "path": [
                                "v1",
                                "projects",
                                ":project-key",
                                "folders"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [],
                              "variable": [
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "{{project-key}}",
                                  "key": "project-key",
                                  "description": "(Required) "
                                }
                              ]
                            },
                            "header": [
                              {
                                "description": {
                                  "content": "Added as a part of security scheme: apikey",
                                  "type": "text/plain"
                                },
                                "key": "Authorization",
                                "value": "{{Authorization}}"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "method": "POST",
                            "body": {
                              "mode": "raw",
                              "raw": "[\n    {\n        \"name\": \"{{name}}\"\n    },\n    {\n        \"name\": \"{{1.name}}\",\n        \"parentId\": \"{{parentId}}\"\n    }\n]",
                              "options": {
                                "raw": {
                                  "language": "json"
                                }
                              }
                            }
                          },
                          "status": "Unauthorized",
                          "code": 401,
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": "{\n  \"message\": \"unauthorized\"\n}",
                          "cookie": [],
                          "_postman_previewlanguage": "json"
                        },
                        {
                          "id": "17f584f2-9902-4691-80e0-e488fc7efb2e",
                          "name": "`Not Found`.",
                          "originalRequest": {
                            "url": {
                              "path": [
                                "v1",
                                "projects",
                                ":project-key",
                                "folders"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [],
                              "variable": [
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "{{project-key}}",
                                  "key": "project-key",
                                  "description": "(Required) "
                                }
                              ]
                            },
                            "header": [
                              {
                                "description": {
                                  "content": "Added as a part of security scheme: apikey",
                                  "type": "text/plain"
                                },
                                "key": "Authorization",
                                "value": "{{Authorization}}"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "method": "POST",
                            "body": {
                              "mode": "raw",
                              "raw": "[\n    {\n        \"name\": \"{{name}}\"\n    },\n    {\n        \"name\": \"{{1.name}}\",\n        \"parentId\": \"{{parentId}}\"\n    }\n]",
                              "options": {
                                "raw": {
                                  "language": "json"
                                }
                              }
                            }
                          },
                          "status": "Not Found",
                          "code": 404,
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": "{\n  \"message\": \"not found\"\n}",
                          "cookie": [],
                          "_postman_previewlanguage": "json"
                        }
                      ],
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "//Import necessary dependencies\nconst assert = require('chai').assert;\nconst myFunc = require('../src/myFunc.js');\n\n//Existing Test Case\ndescribe('myFunc()', function () {\n  it('should return “Hello, World!” when no parameters are provided', function() {\n    assert.equal(myFunc(), 'Hello, World!');\n  });\n});\n\n//Updated Test Case\ndescribe('myFunc(text)', function () {\n  it('should return text when one parameter is provided', function() {\n    let text = 'Artillery Test';\n    assert.equal(myFunc(text), 'Artillery Test');\n  });\n\n  it('should return “Hello, Artillery!” when the parameter is \"Artillery\"', function() {\n    assert.equal(myFunc('Artillery'), 'Hello, Artillery!');\n  });\n\n  it('should return responded error message for null parameter', function() {\n    assert.throws(() => { myFunc(null); }, Error, 'Invalid input');\n  });\n});\n"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      }
                    },
                    {
                      "id": "3c7557ae-a12d-45fe-bd6f-47edcb68c0bf",
                      "name": "Update folder.",
                      "request": {
                        "name": "Update folder.",
                        "description": {
                          "content": "## Update folder.\r\n            \r\n#### Body fields:\r\n* **name** _(optional)_: The folder name.\r\n* **parentId** _(optional)_: In case parentId equal to 00000000-0000-0000-0000-000000000000, the folder will be moved to root.",
                          "type": "text/plain"
                        },
                        "url": {
                          "path": [
                            "v1",
                            "projects",
                            ":project-key",
                            "folders",
                            ":folderId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "{{folderId}}",
                              "key": "folderId",
                              "description": "(Required) Folder's Id to update."
                            },
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "{{project-key}}",
                              "key": "project-key",
                              "description": "(Required) "
                            }
                          ]
                        },
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "method": "PUT",
                        "auth": {
                          "type": "apikey",
                          "apikey": [
                            {
                              "key": "key",
                              "value": "Authorization"
                            },
                            {
                              "key": "value",
                              "value": "{{apiKey}}"
                            },
                            {
                              "key": "in",
                              "value": "header"
                            }
                          ]
                        },
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"name\": \"{{name}}\",\n    \"parentId\": \"{{parentId}}\"\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        }
                      },
                      "response": [
                        {
                          "id": "c5364926-c08c-469d-9363-7afdf58f3a1c",
                          "name": "Successfully updated folder.",
                          "originalRequest": {
                            "url": {
                              "path": [
                                "v1",
                                "projects",
                                ":project-key",
                                "folders",
                                ":folderId"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [],
                              "variable": [
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "{{folderId}}",
                                  "key": "folderId",
                                  "description": "(Required) Folder's Id to update."
                                },
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "{{project-key}}",
                                  "key": "project-key",
                                  "description": "(Required) "
                                }
                              ]
                            },
                            "header": [
                              {
                                "description": {
                                  "content": "Added as a part of security scheme: apikey",
                                  "type": "text/plain"
                                },
                                "key": "Authorization",
                                "value": "{{Authorization}}"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "method": "PUT",
                            "body": {
                              "mode": "raw",
                              "raw": "{\n    \"name\": \"{{name}}\",\n    \"parentId\": \"{{parentId}}\"\n}",
                              "options": {
                                "raw": {
                                  "language": "json"
                                }
                              }
                            }
                          },
                          "status": "OK",
                          "code": 200,
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": "{\n  \"id\": \"8bc2886a-454f-4cd0-93e9-2c6b51bb2fd2\",\n  \"projectKey\": \"TE\",\n  \"created\": \"2025-04-29T07:21:25.176298Z\",\n  \"updated\": \"2025-04-29T07:21:25.1762982Z\",\n  \"createdBy\": \"User\",\n  \"updatedBy\": \"User\",\n  \"index\": 0,\n  \"name\": \"Folder 1\"\n}",
                          "cookie": [],
                          "_postman_previewlanguage": "json"
                        },
                        {
                          "id": "d7bfb139-5116-477d-8033-38cb1433cc06",
                          "name": "`Invalid parameters`.",
                          "originalRequest": {
                            "url": {
                              "path": [
                                "v1",
                                "projects",
                                ":project-key",
                                "folders",
                                ":folderId"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [],
                              "variable": [
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "{{folderId}}",
                                  "key": "folderId",
                                  "description": "(Required) Folder's Id to update."
                                },
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "{{project-key}}",
                                  "key": "project-key",
                                  "description": "(Required) "
                                }
                              ]
                            },
                            "header": [
                              {
                                "description": {
                                  "content": "Added as a part of security scheme: apikey",
                                  "type": "text/plain"
                                },
                                "key": "Authorization",
                                "value": "{{Authorization}}"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "method": "PUT",
                            "body": {
                              "mode": "raw",
                              "raw": "{\n    \"name\": \"{{name}}\",\n    \"parentId\": \"{{parentId}}\"\n}",
                              "options": {
                                "raw": {
                                  "language": "json"
                                }
                              }
                            }
                          },
                          "status": "Bad Request",
                          "code": 400,
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": "{\n  \"message\": \"bad data\"\n}",
                          "cookie": [],
                          "_postman_previewlanguage": "json"
                        },
                        {
                          "id": "301b6964-5040-456c-83af-49492761450b",
                          "name": "`Unauthorized`.",
                          "originalRequest": {
                            "url": {
                              "path": [
                                "v1",
                                "projects",
                                ":project-key",
                                "folders",
                                ":folderId"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [],
                              "variable": [
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "{{folderId}}",
                                  "key": "folderId",
                                  "description": "(Required) Folder's Id to update."
                                },
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "{{project-key}}",
                                  "key": "project-key",
                                  "description": "(Required) "
                                }
                              ]
                            },
                            "header": [
                              {
                                "description": {
                                  "content": "Added as a part of security scheme: apikey",
                                  "type": "text/plain"
                                },
                                "key": "Authorization",
                                "value": "{{Authorization}}"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "method": "PUT",
                            "body": {
                              "mode": "raw",
                              "raw": "{\n    \"name\": \"{{name}}\",\n    \"parentId\": \"{{parentId}}\"\n}",
                              "options": {
                                "raw": {
                                  "language": "json"
                                }
                              }
                            }
                          },
                          "status": "Unauthorized",
                          "code": 401,
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": "{\n  \"message\": \"unauthorized\"\n}",
                          "cookie": [],
                          "_postman_previewlanguage": "json"
                        },
                        {
                          "id": "e941efcd-2639-41fb-9c78-1fbb0498361a",
                          "name": "`Not Found`.",
                          "originalRequest": {
                            "url": {
                              "path": [
                                "v1",
                                "projects",
                                ":project-key",
                                "folders",
                                ":folderId"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [],
                              "variable": [
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "{{folderId}}",
                                  "key": "folderId",
                                  "description": "(Required) Folder's Id to update."
                                },
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "{{project-key}}",
                                  "key": "project-key",
                                  "description": "(Required) "
                                }
                              ]
                            },
                            "header": [
                              {
                                "description": {
                                  "content": "Added as a part of security scheme: apikey",
                                  "type": "text/plain"
                                },
                                "key": "Authorization",
                                "value": "{{Authorization}}"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "method": "PUT",
                            "body": {
                              "mode": "raw",
                              "raw": "{\n    \"name\": \"{{name}}\",\n    \"parentId\": \"{{parentId}}\"\n}",
                              "options": {
                                "raw": {
                                  "language": "json"
                                }
                              }
                            }
                          },
                          "status": "Not Found",
                          "code": 404,
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": "{\n  \"message\": \"not found\"\n}",
                          "cookie": [],
                          "_postman_previewlanguage": "json"
                        }
                      ],
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "//Import necessary dependencies\nconst assert = require('chai').assert;\nconst myFunc = require('../src/myFunc.js');\n\n//Existing Test Case\ndescribe('myFunc()', function () {\n  it('should return “Hello, World!” when no parameters are provided', function() {\n    assert.equal(myFunc(), 'Hello, World!');\n  });\n});\n\n//Updated Test Case\ndescribe('myFunc(text)', function () {\n  it('should return text when one parameter is provided', function() {\n    let text = 'Artillery Test';\n    assert.equal(myFunc(text), 'Artillery Test');\n  });\n\n  it('should return “Hello, Artillery!” when the parameter is \"Artillery\"', function() {\n    assert.equal(myFunc('Artillery'), 'Hello, Artillery!');\n  });\n\n  it('should return responded error message for null parameter', function() {\n    assert.throws(() => { myFunc(null); }, Error, 'Invalid input');\n  });\n});\n"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      }
                    }
                  ],
                  "event": []
                },
                {
                  "id": "2cd93768-c10a-4d02-98e6-02836d843370",
                  "name": "test-cases",
                  "item": [
                    {
                      "id": "f79f5b06-8806-4cb3-9337-a3dfd5cc7aa9",
                      "name": "Read test case(s).",
                      "request": {
                        "name": "Read test case(s).",
                        "description": {
                          "content": "Please note that this endpoint is deprecated and will be removed in the future. Use the /test-cases/bulk endpoint instead.\r\n            \r\n## Get or retrieve information from test case(s).\r\n            \r\n#### Body fields:\r\n* **jiraFields**: a comma-separated list of Jira fields to return for each issue. Use this to retrieve a subset of fields.\r\n* **ttmFields**: a comma-separated list of Jira fields to return for each issue. Use this to retrieve a subset of fields.",
                          "type": "text/plain"
                        },
                        "url": {
                          "path": [
                            "v1",
                            "projects",
                            ":project-key",
                            "test-cases"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [
                            {
                              "disabled": false,
                              "key": "jiraFields",
                              "value": "{{jiraFields}}",
                              "description": "A list of Jira fields to return for each issue, use it to retrieve a subset of fields. Provide a comma-separated list."
                            },
                            {
                              "disabled": false,
                              "key": "ttmFields",
                              "value": "{{ttmFields}}",
                              "description": "A list of TTM fields to return for each issue, use it to retrieve a subset of fields. Provide a comma-separated list."
                            },
                            {
                              "disabled": false,
                              "key": "limit",
                              "value": "{{limit}}",
                              "description": "Numeric value that determines that maximum N results will be returned"
                            },
                            {
                              "disabled": false,
                              "key": "offset",
                              "value": "{{offset}}",
                              "description": "Numeric value that determines that the result list will start from result #N (zero based)"
                            }
                          ],
                          "variable": [
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "{{project-key}}",
                              "key": "project-key",
                              "description": "(Required) "
                            }
                          ]
                        },
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "method": "GET",
                        "auth": {
                          "type": "apikey",
                          "apikey": [
                            {
                              "key": "key",
                              "value": "Authorization"
                            },
                            {
                              "key": "value",
                              "value": "{{apiKey}}"
                            },
                            {
                              "key": "in",
                              "value": "header"
                            }
                          ]
                        }
                      },
                      "response": [
                        {
                          "id": "27dccf12-697e-4515-8f84-d6476ce7192a",
                          "name": "Successfully retrieved test cases information.",
                          "originalRequest": {
                            "url": {
                              "path": [
                                "v1",
                                "projects",
                                ":project-key",
                                "test-cases"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [
                                {
                                  "key": "jiraFields",
                                  "value": "{{jiraFields}}"
                                },
                                {
                                  "key": "ttmFields",
                                  "value": "{{ttmFields}}"
                                },
                                {
                                  "key": "limit",
                                  "value": "{{limit}}"
                                },
                                {
                                  "key": "offset",
                                  "value": "{{offset}}"
                                }
                              ],
                              "variable": [
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "{{project-key}}",
                                  "key": "project-key",
                                  "description": "(Required) "
                                }
                              ]
                            },
                            "header": [
                              {
                                "description": {
                                  "content": "Added as a part of security scheme: apikey",
                                  "type": "text/plain"
                                },
                                "key": "Authorization",
                                "value": "{{Authorization}}"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "method": "GET",
                            "body": {}
                          },
                          "status": "OK",
                          "code": 200,
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": "{\n  \"offset\": 0,\n  \"limit\": 1,\n  \"totalCount\": 100,\n  \"items\": [\n    {\n      \"id\": \"7129e1f6-1a8e-4968-b785-4f924910443c\",\n      \"key\": \"TE-1\",\n      \"project\": \"TE\",\n      \"testType\": \"Manual\",\n      \"fields\": {\n        \"summary\": \"Test 1 status\",\n        \"description\": \"Test 1 description\",\n        \"status\": \"Backlog\",\n        \"priority\": \"High\",\n        \"labels\": [\n          \"My Label\"\n        ]\n      },\n      \"customFields\": [\n        {\n          \"key\": \"customField_10001\",\n          \"name\": \"A custom field\",\n          \"value\": \"Some value\"\n        }\n      ],\n      \"ttmFields\": {\n        \"precondition\": \"A precondition\",\n        \"steps\": [\n          {\n            \"testCaseKey\": \"TE-2\",\n            \"testCaseId\": \"10000\"\n          },\n          {\n            \"description\": \"Login\",\n            \"expectedResult\": \"Login should work\"\n          },\n          {\n            \"description\": \"Logout\",\n            \"expectedResult\": \"Logout should work\"\n          },\n          {\n            \"testCaseKey\": \"TE-5\",\n            \"testCaseId\": \"10004\",\n            \"deleted\": true\n          }\n        ]\n      },\n      \"requirements\": [\n        \"TE-10\",\n        \"TE-11\"\n      ],\n      \"folder\": \"parent folder/child folder\",\n      \"folderId\": \"5e8821b6-a46b-462c-ad15-83a1cef9a4b6\"\n    },\n    {\n      \"id\": \"be921ee5-5f37-46b0-803c-35db8482ca84\",\n      \"key\": \"TE-2\",\n      \"project\": \"TE\",\n      \"testType\": \"Automated\",\n      \"fields\": {\n        \"summary\": \"An automated test\",\n        \"description\": \"Automated test description\",\n        \"status\": \"Backlog\",\n        \"priority\": \"High\",\n        \"labels\": [\n          \"My Label\"\n        ]\n      },\n      \"requirements\": [\n        \"TE-12\",\n        \"TE-13\"\n      ],\n      \"folder\": \"automated tests/feature1\",\n      \"folderId\": \"49568c6c-9500-4466-badc-ff29f31264ac\"\n    }\n  ]\n}",
                          "cookie": [],
                          "_postman_previewlanguage": "json"
                        },
                        {
                          "id": "ddc1f2fa-0d7a-40b8-8571-5a49d4b3fbba",
                          "name": "`Invalid parameters.",
                          "originalRequest": {
                            "url": {
                              "path": [
                                "v1",
                                "projects",
                                ":project-key",
                                "test-cases"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [
                                {
                                  "key": "jiraFields",
                                  "value": "{{jiraFields}}"
                                },
                                {
                                  "key": "ttmFields",
                                  "value": "{{ttmFields}}"
                                },
                                {
                                  "key": "limit",
                                  "value": "{{limit}}"
                                },
                                {
                                  "key": "offset",
                                  "value": "{{offset}}"
                                }
                              ],
                              "variable": [
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "{{project-key}}",
                                  "key": "project-key",
                                  "description": "(Required) "
                                }
                              ]
                            },
                            "header": [
                              {
                                "description": {
                                  "content": "Added as a part of security scheme: apikey",
                                  "type": "text/plain"
                                },
                                "key": "Authorization",
                                "value": "{{Authorization}}"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "method": "GET",
                            "body": {}
                          },
                          "status": "Bad Request",
                          "code": 400,
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": "{\n  \"message\": \"bad data\"\n}",
                          "cookie": [],
                          "_postman_previewlanguage": "json"
                        },
                        {
                          "id": "dc630fbf-4094-458a-a8a8-57f0cbdcf172",
                          "name": "`Unauthorized`.",
                          "originalRequest": {
                            "url": {
                              "path": [
                                "v1",
                                "projects",
                                ":project-key",
                                "test-cases"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [
                                {
                                  "key": "jiraFields",
                                  "value": "{{jiraFields}}"
                                },
                                {
                                  "key": "ttmFields",
                                  "value": "{{ttmFields}}"
                                },
                                {
                                  "key": "limit",
                                  "value": "{{limit}}"
                                },
                                {
                                  "key": "offset",
                                  "value": "{{offset}}"
                                }
                              ],
                              "variable": [
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "{{project-key}}",
                                  "key": "project-key",
                                  "description": "(Required) "
                                }
                              ]
                            },
                            "header": [
                              {
                                "description": {
                                  "content": "Added as a part of security scheme: apikey",
                                  "type": "text/plain"
                                },
                                "key": "Authorization",
                                "value": "{{Authorization}}"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "method": "GET",
                            "body": {}
                          },
                          "status": "Unauthorized",
                          "code": 401,
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": "{\n  \"message\": \"unauthorized\"\n}",
                          "cookie": [],
                          "_postman_previewlanguage": "json"
                        },
                        {
                          "id": "03233a8c-873e-4d0f-9bee-44bb12862f24",
                          "name": "`Not Found`.",
                          "originalRequest": {
                            "url": {
                              "path": [
                                "v1",
                                "projects",
                                ":project-key",
                                "test-cases"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [
                                {
                                  "key": "jiraFields",
                                  "value": "{{jiraFields}}"
                                },
                                {
                                  "key": "ttmFields",
                                  "value": "{{ttmFields}}"
                                },
                                {
                                  "key": "limit",
                                  "value": "{{limit}}"
                                },
                                {
                                  "key": "offset",
                                  "value": "{{offset}}"
                                }
                              ],
                              "variable": [
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "{{project-key}}",
                                  "key": "project-key",
                                  "description": "(Required) "
                                }
                              ]
                            },
                            "header": [
                              {
                                "description": {
                                  "content": "Added as a part of security scheme: apikey",
                                  "type": "text/plain"
                                },
                                "key": "Authorization",
                                "value": "{{Authorization}}"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "method": "GET",
                            "body": {}
                          },
                          "status": "Not Found",
                          "code": 404,
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": "{\n  \"message\": \"not found\"\n}",
                          "cookie": [],
                          "_postman_previewlanguage": "json"
                        }
                      ],
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "//Import necessary dependencies\nconst assert = require('chai').assert;\nconst myFunc = require('../src/myFunc.js');\n\n//Existing Test Case\ndescribe('myFunc()', function () {\n  it('should return “Hello, World!” when no parameters are provided', function() {\n    assert.equal(myFunc(), 'Hello, World!');\n  });\n});\n\n//Updated Test Case\ndescribe('myFunc(text)', function () {\n  it('should return text when one parameter is provided', function() {\n    let text = 'Artillery Test';\n    assert.equal(myFunc(text), 'Artillery Test');\n  });\n\n  it('should return “Hello, Artillery!” when the parameter is \"Artillery\"', function() {\n    assert.equal(myFunc('Artillery'), 'Hello, Artillery!');\n  });\n\n  it('should return responded error message for null parameter', function() {\n    assert.throws(() => { myFunc(null); }, Error, 'Invalid input');\n  });\n});\n"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      }
                    },
                    {
                      "id": "bc75c7d4-c762-46e6-94b7-595aa7f7beb7",
                      "name": "Create test case(s).",
                      "request": {
                        "name": "Create test case(s).",
                        "description": {
                          "content": "## Create test case(s).\r\n            \r\n#### Body fields:\r\n            \r\n* **folder** _(optional)_: Specify the folder path where you want to save the test case. A path is a string of concatenated parts separated by a slash \"/\".  If you don't specify a folder path, the test case saves in the \"All tests\" folder. Do not specify both the folder and the folderID, or the request will fail.\r\n* **folderId** _(optional)_: Specify a unique ID associated with the folder in the TTM database, which specifies where the test case should be saved. Do not specify both the folder and the folderID, or the request will fail.\r\n* **callbackUrl** _(optional)_: Specify a URL that will recevie status of the request (The URL will serve as POST endpoint in the user side).\r\n* **tests**: Provide a list of tests with the following values:\r\n    * **fields**: The native Jira fields in a test case. The following fields are available:\r\n        * **summary**: The Summary of the test case in Jira.\r\n        * **description** _(optional)_: The Description of the test case in Jira.\r\n        * **status** _(optional)_: The Status of the test case in Jira.\r\n        * **priority** _(optional)_: The Priority of the test case in Jira.\r\n        * **labels** _(optional)_: The Labels of the test case in Jira.\r\n    * **ttmFields**: These are the Jira fields provided by the Tricentis Test Management for Jira plugin. The following fields are available:\r\n        * **precondition** _(optional)_: The precondition for a test case.\r\n        * **steps** _(optional)_: The list of steps for the test case.\r\n            * **description** _(optional)_: Step description.\r\n            * **expectedResult** _(optional)_: Step expected result.\r\n            * **data** _(optional)_: Step data.\r\n            * **testCaseKey** _(optional)_: test case key, when set the step will call the test case and other step fields will be ignored.\r\n    * **testType**: Can be one of the following: \"Manual\", \"Automated\"\r\n    * **requirements** _(optional)_: List of issues keys (from Jira) that should be linked as requirements.\r\n    * **customFields** _(optional)_: The custom Jira fields in a test case.\r\n    * **folder** _(optional)_: Specify the folder path where you want to save the test case. A path is a string of concatenated parts separated by a slash \"/\".  If you don't specify a folder path, the test case saves in the \"All tests\" folder. Do not specify both the folder and the folderID, or the request will fail. If you do not specify the folder in this field, the request uses the folder specified at the root level.\r\n    * **folderId** _(optional)_: Specify a unique ID associated with the folder in the TTM database, which specifies where the test case should be saved. Do not specify both the folder and the folderID, or the request will fail. If you do not specify the folderId in this field, the request uses the folderId specified at the root level.\r\n    * **automation** _(optional)_: Automation data. Provide the following values for your test case:\r\n        * **name**: The name of your external automation system. For example, Testim.\r\n        * **externalId** _(optional)_: The ID of the test in your external automation platform.\r\n        * **content** _(optional)_: The content your automation system supplies to represent the test.",
                          "type": "text/plain"
                        },
                        "url": {
                          "path": [
                            "v1",
                            "projects",
                            ":project-key",
                            "test-cases"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [
                            {
                              "disabled": false,
                              "key": "strictOrder",
                              "value": "{{strictOrder}}",
                              "description": "If strict order is true, test-cases will be created according to the given order."
                            }
                          ],
                          "variable": [
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "{{project-key}}",
                              "key": "project-key",
                              "description": "(Required) "
                            }
                          ]
                        },
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "method": "POST",
                        "auth": {
                          "type": "apikey",
                          "apikey": [
                            {
                              "key": "key",
                              "value": "Authorization"
                            },
                            {
                              "key": "value",
                              "value": "{{apiKey}}"
                            },
                            {
                              "key": "in",
                              "value": "header"
                            }
                          ]
                        },
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"folder\": \"{{folder}}\",\n    \"folderId\": \"{{folderId}}\",\n    \"callbackUrl\": \"{{callbackUrl}}\",\n    \"tests\": [\n        \"{{tests}}\"\n    ]\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        }
                      },
                      "response": [
                        {
                          "id": "98ef8523-ab76-45b1-9a6e-1d04aa406ccf",
                          "name": "The job to create the test cases was successfully scheduled.",
                          "originalRequest": {
                            "url": {
                              "path": [
                                "v1",
                                "projects",
                                ":project-key",
                                "test-cases"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [
                                {
                                  "key": "strictOrder",
                                  "value": "{{strictOrder}}"
                                }
                              ],
                              "variable": [
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "{{project-key}}",
                                  "key": "project-key",
                                  "description": "(Required) "
                                }
                              ]
                            },
                            "header": [
                              {
                                "description": {
                                  "content": "Added as a part of security scheme: apikey",
                                  "type": "text/plain"
                                },
                                "key": "Authorization",
                                "value": "{{Authorization}}"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "method": "POST",
                            "body": {
                              "mode": "raw",
                              "raw": "{\n    \"tests\": [\n        \"{{tests}}\"\n    ]\n}",
                              "options": {
                                "raw": {
                                  "language": "json"
                                }
                              }
                            }
                          },
                          "status": "Accepted",
                          "code": 202,
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": "{\n  \"jobId\": \"72291c7d-9f7f-45a7-94c1-b9f5d4df930e\"\n}",
                          "cookie": [],
                          "_postman_previewlanguage": "json"
                        },
                        {
                          "id": "b4a3cab9-19c7-4a69-8533-8678459cc877",
                          "name": "`Invalid parameters.",
                          "originalRequest": {
                            "url": {
                              "path": [
                                "v1",
                                "projects",
                                ":project-key",
                                "test-cases"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [
                                {
                                  "key": "strictOrder",
                                  "value": "{{strictOrder}}"
                                }
                              ],
                              "variable": [
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "{{project-key}}",
                                  "key": "project-key",
                                  "description": "(Required) "
                                }
                              ]
                            },
                            "header": [
                              {
                                "description": {
                                  "content": "Added as a part of security scheme: apikey",
                                  "type": "text/plain"
                                },
                                "key": "Authorization",
                                "value": "{{Authorization}}"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "method": "POST",
                            "body": {
                              "mode": "raw",
                              "raw": "{\n    \"tests\": [\n        \"{{tests}}\"\n    ]\n}",
                              "options": {
                                "raw": {
                                  "language": "json"
                                }
                              }
                            }
                          },
                          "status": "Bad Request",
                          "code": 400,
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": "{\n  \"message\": \"bad data\"\n}",
                          "cookie": [],
                          "_postman_previewlanguage": "json"
                        },
                        {
                          "id": "9c286a37-e869-403a-a3d2-f7dc906f9304",
                          "name": "`Unauthorized`.",
                          "originalRequest": {
                            "url": {
                              "path": [
                                "v1",
                                "projects",
                                ":project-key",
                                "test-cases"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [
                                {
                                  "key": "strictOrder",
                                  "value": "{{strictOrder}}"
                                }
                              ],
                              "variable": [
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "{{project-key}}",
                                  "key": "project-key",
                                  "description": "(Required) "
                                }
                              ]
                            },
                            "header": [
                              {
                                "description": {
                                  "content": "Added as a part of security scheme: apikey",
                                  "type": "text/plain"
                                },
                                "key": "Authorization",
                                "value": "{{Authorization}}"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "method": "POST",
                            "body": {
                              "mode": "raw",
                              "raw": "{\n    \"tests\": [\n        \"{{tests}}\"\n    ]\n}",
                              "options": {
                                "raw": {
                                  "language": "json"
                                }
                              }
                            }
                          },
                          "status": "Unauthorized",
                          "code": 401,
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": "{\n  \"message\": \"unauthorized\"\n}",
                          "cookie": [],
                          "_postman_previewlanguage": "json"
                        },
                        {
                          "id": "e2fdec49-215c-4de3-ab2d-995cf7baa825",
                          "name": "`Not Found`.",
                          "originalRequest": {
                            "url": {
                              "path": [
                                "v1",
                                "projects",
                                ":project-key",
                                "test-cases"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [
                                {
                                  "key": "strictOrder",
                                  "value": "{{strictOrder}}"
                                }
                              ],
                              "variable": [
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "{{project-key}}",
                                  "key": "project-key",
                                  "description": "(Required) "
                                }
                              ]
                            },
                            "header": [
                              {
                                "description": {
                                  "content": "Added as a part of security scheme: apikey",
                                  "type": "text/plain"
                                },
                                "key": "Authorization",
                                "value": "{{Authorization}}"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "method": "POST",
                            "body": {
                              "mode": "raw",
                              "raw": "{\n    \"tests\": [\n        \"{{tests}}\"\n    ]\n}",
                              "options": {
                                "raw": {
                                  "language": "json"
                                }
                              }
                            }
                          },
                          "status": "Not Found",
                          "code": 404,
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": "{\n  \"message\": \"not found\"\n}",
                          "cookie": [],
                          "_postman_previewlanguage": "json"
                        }
                      ],
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "//Import necessary dependencies\nconst assert = require('chai').assert;\nconst myFunc = require('../src/myFunc.js');\n\n//Existing Test Case\ndescribe('myFunc()', function () {\n  it('should return “Hello, World!” when no parameters are provided', function() {\n    assert.equal(myFunc(), 'Hello, World!');\n  });\n});\n\n//Updated Test Case\ndescribe('myFunc(text)', function () {\n  it('should return text when one parameter is provided', function() {\n    let text = 'Artillery Test';\n    assert.equal(myFunc(text), 'Artillery Test');\n  });\n\n  it('should return “Hello, Artillery!” when the parameter is \"Artillery\"', function() {\n    assert.equal(myFunc('Artillery'), 'Hello, Artillery!');\n  });\n\n  it('should return responded error message for null parameter', function() {\n    assert.throws(() => { myFunc(null); }, Error, 'Invalid input');\n  });\n});\n"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      }
                    },
                    {
                      "id": "8c4bcac6-31a9-4129-9dcb-d761dc0de677",
                      "name": "Create Requirements.",
                      "request": {
                        "name": "Create Requirements.",
                        "description": {
                          "content": "## Create Requirements and link to test case.\r\n##### Note: In case issue type won't be provided, default value will be \"Requirement\" issue type.\r\n            \r\n#### Body fields:\r\n* **summary** _(mandatory)_: the requirement summary.\r\n* **description** _(optional)_: the requirement description.\r\n* **issueType** _(optional)_: the requirement issue type (for example: Task, Requirement, Bug, etc..).",
                          "type": "text/plain"
                        },
                        "url": {
                          "path": [
                            "v1",
                            "projects",
                            ":project-key",
                            "test-cases",
                            "requirements"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "{{project-key}}",
                              "key": "project-key",
                              "description": "(Required) "
                            }
                          ]
                        },
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "text/plain"
                          }
                        ],
                        "method": "POST",
                        "auth": {
                          "type": "apikey",
                          "apikey": [
                            {
                              "key": "key",
                              "value": "Authorization"
                            },
                            {
                              "key": "value",
                              "value": "{{apiKey}}"
                            },
                            {
                              "key": "in",
                              "value": "header"
                            }
                          ]
                        },
                        "body": {
                          "mode": "raw",
                          "raw": "[\n    {\n        \"summary\": \"{{summary}}\",\n        \"description\": \"{{description}}\",\n        \"issueType\": \"{{issueType}}\"\n    },\n    {\n        \"summary\": \"{{1.summary}}\",\n        \"description\": \"{{1.description}}\",\n        \"issueType\": \"{{1.issueType}}\"\n    }\n]",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        }
                      },
                      "response": [
                        {
                          "id": "5b4695e5-b32e-4777-9c5c-46bedbb21849",
                          "name": "Success",
                          "originalRequest": {
                            "url": {
                              "path": [
                                "v1",
                                "projects",
                                ":project-key",
                                "test-cases",
                                "requirements"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [],
                              "variable": [
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "{{project-key}}",
                                  "key": "project-key",
                                  "description": "(Required) "
                                }
                              ]
                            },
                            "header": [
                              {
                                "description": {
                                  "content": "Added as a part of security scheme: apikey",
                                  "type": "text/plain"
                                },
                                "key": "Authorization",
                                "value": "{{Authorization}}"
                              },
                              {
                                "key": "Accept",
                                "value": "text/plain"
                              }
                            ],
                            "method": "POST",
                            "body": {
                              "mode": "raw",
                              "raw": "[\n    {\n        \"summary\": \"{{summary}}\",\n        \"description\": \"{{description}}\",\n        \"issueType\": \"{{issueType}}\"\n    },\n    {\n        \"summary\": \"{{1.summary}}\",\n        \"description\": \"{{1.description}}\",\n        \"issueType\": \"{{1.issueType}}\"\n    }\n]",
                              "options": {
                                "raw": {
                                  "language": "json"
                                }
                              }
                            }
                          },
                          "status": "OK",
                          "code": 200,
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": "{\n  \"notLinkedRequirement\": [\n    \"Key-2\"\n  ],\n  \"linkedRequirement\": [\n    \"Key-1\"\n  ]\n}",
                          "cookie": [],
                          "_postman_previewlanguage": "json"
                        },
                        {
                          "id": "fc1cae3b-9913-4a95-bef6-87c337a957b8",
                          "name": "`Unauthorized.",
                          "originalRequest": {
                            "url": {
                              "path": [
                                "v1",
                                "projects",
                                ":project-key",
                                "test-cases",
                                "requirements"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [],
                              "variable": [
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "{{project-key}}",
                                  "key": "project-key",
                                  "description": "(Required) "
                                }
                              ]
                            },
                            "header": [
                              {
                                "description": {
                                  "content": "Added as a part of security scheme: apikey",
                                  "type": "text/plain"
                                },
                                "key": "Authorization",
                                "value": "{{Authorization}}"
                              }
                            ],
                            "method": "POST",
                            "body": {
                              "mode": "raw",
                              "raw": "[\n    {\n        \"summary\": \"{{summary}}\",\n        \"description\": \"{{description}}\",\n        \"issueType\": \"{{issueType}}\"\n    },\n    {\n        \"summary\": \"{{1.summary}}\",\n        \"description\": \"{{1.description}}\",\n        \"issueType\": \"{{1.issueType}}\"\n    }\n]",
                              "options": {
                                "raw": {
                                  "language": "json"
                                }
                              }
                            }
                          },
                          "status": "Unauthorized",
                          "code": 401,
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "text/plain"
                            }
                          ],
                          "body": "",
                          "cookie": [],
                          "_postman_previewlanguage": "text"
                        }
                      ],
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "//Import necessary dependencies\nconst assert = require('chai').assert;\nconst myFunc = require('../src/myFunc.js');\n\n//Existing Test Case\ndescribe('myFunc()', function () {\n  it('should return “Hello, World!” when no parameters are provided', function() {\n    assert.equal(myFunc(), 'Hello, World!');\n  });\n});\n\n//Updated Test Case\ndescribe('myFunc(text)', function () {\n  it('should return text when one parameter is provided', function() {\n    let text = 'Artillery Test';\n    assert.equal(myFunc(text), 'Artillery Test');\n  });\n\n  it('should return “Hello, Artillery!” when the parameter is \"Artillery\"', function() {\n    assert.equal(myFunc('Artillery'), 'Hello, Artillery!');\n  });\n\n  it('should return responded error message for null parameter', function() {\n    assert.throws(() => { myFunc(null); }, Error, 'Invalid input');\n  });\n});\n"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      }
                    },
                    {
                      "id": "2d1b314a-eeb0-42ae-8d4a-0558ffe11cdc",
                      "name": "{key}",
                      "item": [
                        {
                          "id": "f50a50de-8e3e-4eec-943b-de7da8a9e04d",
                          "name": "Update test case.",
                          "request": {
                            "name": "Update test case.",
                            "description": {
                              "content": "## Update existing test case.\r\n            \r\n* **fields**: The native Jira fields in a test case. Only the following fields are available (for the rest please use native Jira API):\r\n    * **summary** _(mandatory)_: The Summary of the test case in Jira.\r\n    * **description** _(mandatory)_: The Description of the test case in Jira.\r\n    * **priority** _(mandatory)_: The Priority of the test case in Jira.\r\n    * **labels** _(optional)_: The Labels of the test case in Jira.\r\n* **ttmFields**: These are the Jira fields provided by the Tricentis Test Management for Jira plugin. The following fields are available:\r\n    * **precondition** _(mandatory)_: The precondition for a test case.\r\n    * **steps** _(mandatory)_: The list of steps for the test case.\r\n        * **description** _(mandatory)_: Step description.\r\n        * **expectedResult** _(optional)_: Step expected result.\r\n        * **data** _(optional)_: Step data.\r\n* **folder** _(optional)_: Specify the folder path where you want to move the test case. A path is a string of concatenated parts separated by a slash \"/\". Ignored if folderId specified.\r\n* **folderId** _(optional)_: Specify a unique ID associated with the folder in the TTM database, which specifies where the test case should be moved. When specified folder field will be ignored.",
                              "type": "text/plain"
                            },
                            "url": {
                              "path": [
                                "v1",
                                "projects",
                                ":project-key",
                                "test-cases",
                                ":key"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [],
                              "variable": [
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "{{key}}",
                                  "key": "key",
                                  "description": "(Required) The jira key of the test."
                                },
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "{{project-key}}",
                                  "key": "project-key",
                                  "description": "(Required) "
                                }
                              ]
                            },
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "method": "PUT",
                            "auth": {
                              "type": "apikey",
                              "apikey": [
                                {
                                  "key": "key",
                                  "value": "Authorization"
                                },
                                {
                                  "key": "value",
                                  "value": "{{apiKey}}"
                                },
                                {
                                  "key": "in",
                                  "value": "header"
                                }
                              ]
                            },
                            "body": {
                              "mode": "raw",
                              "raw": "{\n    \"fields\": {\n        \"description\": \"{{description}}\",\n        \"priority\": \"{{priority}}\",\n        \"summary\": \"{{summary}}\",\n        \"labels\": [\n            \"{{labels}}\"\n        ]\n    },\n    \"ttmFields\": {\n        \"precondition\": \"{{precondition}}\",\n        \"steps\": [\n            \"{{steps}}\"\n        ]\n    },\n    \"folder\": \"{{folder}}\",\n    \"folderId\": \"{{folderId}}\"\n}",
                              "options": {
                                "raw": {
                                  "language": "json"
                                }
                              }
                            }
                          },
                          "response": [
                            {
                              "id": "3ee31d3e-bd6e-42e1-b11f-bc8744438782",
                              "name": "Updated test case.",
                              "originalRequest": {
                                "url": {
                                  "path": [
                                    "v1",
                                    "projects",
                                    ":project-key",
                                    "test-cases",
                                    ":key"
                                  ],
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "query": [],
                                  "variable": [
                                    {
                                      "disabled": false,
                                      "type": "any",
                                      "value": "{{key}}",
                                      "key": "key",
                                      "description": "(Required) The jira key of the test."
                                    },
                                    {
                                      "disabled": false,
                                      "type": "any",
                                      "value": "{{project-key}}",
                                      "key": "project-key",
                                      "description": "(Required) "
                                    }
                                  ]
                                },
                                "header": [
                                  {
                                    "description": {
                                      "content": "Added as a part of security scheme: apikey",
                                      "type": "text/plain"
                                    },
                                    "key": "Authorization",
                                    "value": "{{Authorization}}"
                                  },
                                  {
                                    "key": "Accept",
                                    "value": "application/json"
                                  }
                                ],
                                "method": "PUT",
                                "body": {
                                  "mode": "raw",
                                  "raw": "{\n    \"fields\": {\n        \"summary\": \"{{summary}}\",\n        \"description\": \"{{description}}\",\n        \"priority\": \"{{priority}}\",\n        \"labels\": [\n            \"{{labels}}\"\n        ]\n    },\n    \"ttmFields\": {\n        \"precondition\": \"{{precondition}}\",\n        \"steps\": [\n            \"{{steps}}\"\n        ]\n    },\n    \"folder\": \"{{folder}}\",\n    \"folderId\": \"{{folderId}}\"\n}",
                                  "options": {
                                    "raw": {
                                      "language": "json"
                                    }
                                  }
                                }
                              },
                              "status": "OK",
                              "code": 200,
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": "{\n  \"fields\": {\n    \"summary\": \"Test 1 status\",\n    \"description\": \"Test 1 description\",\n    \"priority\": \"High\",\n    \"labels\": [\n      \"MyLabel\"\n    ]\n  },\n  \"ttmFields\": {\n    \"precondition\": \"A precondition\",\n    \"steps\": [\n      {\n        \"description\": \"Login\",\n        \"expectedResult\": \"Login should work\"\n      },\n      {\n        \"description\": \"Logout\",\n        \"expectedResult\": \"Logout should work\"\n      }\n    ]\n  },\n  \"folder\": \"parent folder/child folder\",\n  \"folderId\": \"81408a7b-5c9a-4862-873d-bcd2452c370a\"\n}",
                              "cookie": [],
                              "_postman_previewlanguage": "json"
                            },
                            {
                              "id": "3eb79659-3d5e-4e9f-a9a7-eba704563474",
                              "name": "`Invalid parameters.",
                              "originalRequest": {
                                "url": {
                                  "path": [
                                    "v1",
                                    "projects",
                                    ":project-key",
                                    "test-cases",
                                    ":key"
                                  ],
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "query": [],
                                  "variable": [
                                    {
                                      "disabled": false,
                                      "type": "any",
                                      "value": "{{key}}",
                                      "key": "key",
                                      "description": "(Required) The jira key of the test."
                                    },
                                    {
                                      "disabled": false,
                                      "type": "any",
                                      "value": "{{project-key}}",
                                      "key": "project-key",
                                      "description": "(Required) "
                                    }
                                  ]
                                },
                                "header": [
                                  {
                                    "description": {
                                      "content": "Added as a part of security scheme: apikey",
                                      "type": "text/plain"
                                    },
                                    "key": "Authorization",
                                    "value": "{{Authorization}}"
                                  },
                                  {
                                    "key": "Accept",
                                    "value": "application/json"
                                  }
                                ],
                                "method": "PUT",
                                "body": {
                                  "mode": "raw",
                                  "raw": "{\n    \"fields\": {\n        \"summary\": \"{{summary}}\",\n        \"description\": \"{{description}}\",\n        \"priority\": \"{{priority}}\",\n        \"labels\": [\n            \"{{labels}}\"\n        ]\n    },\n    \"ttmFields\": {\n        \"precondition\": \"{{precondition}}\",\n        \"steps\": [\n            \"{{steps}}\"\n        ]\n    },\n    \"folder\": \"{{folder}}\",\n    \"folderId\": \"{{folderId}}\"\n}",
                                  "options": {
                                    "raw": {
                                      "language": "json"
                                    }
                                  }
                                }
                              },
                              "status": "Bad Request",
                              "code": 400,
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": "{\n  \"message\": \"bad data\"\n}",
                              "cookie": [],
                              "_postman_previewlanguage": "json"
                            },
                            {
                              "id": "0cdc9980-af35-4400-a855-db44ceefd505",
                              "name": "`Unauthorized`.",
                              "originalRequest": {
                                "url": {
                                  "path": [
                                    "v1",
                                    "projects",
                                    ":project-key",
                                    "test-cases",
                                    ":key"
                                  ],
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "query": [],
                                  "variable": [
                                    {
                                      "disabled": false,
                                      "type": "any",
                                      "value": "{{key}}",
                                      "key": "key",
                                      "description": "(Required) The jira key of the test."
                                    },
                                    {
                                      "disabled": false,
                                      "type": "any",
                                      "value": "{{project-key}}",
                                      "key": "project-key",
                                      "description": "(Required) "
                                    }
                                  ]
                                },
                                "header": [
                                  {
                                    "description": {
                                      "content": "Added as a part of security scheme: apikey",
                                      "type": "text/plain"
                                    },
                                    "key": "Authorization",
                                    "value": "{{Authorization}}"
                                  },
                                  {
                                    "key": "Accept",
                                    "value": "application/json"
                                  }
                                ],
                                "method": "PUT",
                                "body": {
                                  "mode": "raw",
                                  "raw": "{\n    \"fields\": {\n        \"summary\": \"{{summary}}\",\n        \"description\": \"{{description}}\",\n        \"priority\": \"{{priority}}\",\n        \"labels\": [\n            \"{{labels}}\"\n        ]\n    },\n    \"ttmFields\": {\n        \"precondition\": \"{{precondition}}\",\n        \"steps\": [\n            \"{{steps}}\"\n        ]\n    },\n    \"folder\": \"{{folder}}\",\n    \"folderId\": \"{{folderId}}\"\n}",
                                  "options": {
                                    "raw": {
                                      "language": "json"
                                    }
                                  }
                                }
                              },
                              "status": "Unauthorized",
                              "code": 401,
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": "{\n  \"message\": \"unauthorized\"\n}",
                              "cookie": [],
                              "_postman_previewlanguage": "json"
                            },
                            {
                              "id": "1f92aa42-8a55-4ba9-acd4-16d73df45111",
                              "name": "`Not Found`.",
                              "originalRequest": {
                                "url": {
                                  "path": [
                                    "v1",
                                    "projects",
                                    ":project-key",
                                    "test-cases",
                                    ":key"
                                  ],
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "query": [],
                                  "variable": [
                                    {
                                      "disabled": false,
                                      "type": "any",
                                      "value": "{{key}}",
                                      "key": "key",
                                      "description": "(Required) The jira key of the test."
                                    },
                                    {
                                      "disabled": false,
                                      "type": "any",
                                      "value": "{{project-key}}",
                                      "key": "project-key",
                                      "description": "(Required) "
                                    }
                                  ]
                                },
                                "header": [
                                  {
                                    "description": {
                                      "content": "Added as a part of security scheme: apikey",
                                      "type": "text/plain"
                                    },
                                    "key": "Authorization",
                                    "value": "{{Authorization}}"
                                  },
                                  {
                                    "key": "Accept",
                                    "value": "application/json"
                                  }
                                ],
                                "method": "PUT",
                                "body": {
                                  "mode": "raw",
                                  "raw": "{\n    \"fields\": {\n        \"summary\": \"{{summary}}\",\n        \"description\": \"{{description}}\",\n        \"priority\": \"{{priority}}\",\n        \"labels\": [\n            \"{{labels}}\"\n        ]\n    },\n    \"ttmFields\": {\n        \"precondition\": \"{{precondition}}\",\n        \"steps\": [\n            \"{{steps}}\"\n        ]\n    },\n    \"folder\": \"{{folder}}\",\n    \"folderId\": \"{{folderId}}\"\n}",
                                  "options": {
                                    "raw": {
                                      "language": "json"
                                    }
                                  }
                                }
                              },
                              "status": "Not Found",
                              "code": 404,
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": "{\n  \"message\": \"not found\"\n}",
                              "cookie": [],
                              "_postman_previewlanguage": "json"
                            }
                          ],
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "exec": [
                                  "//Import necessary dependencies\nconst assert = require('chai').assert;\nconst myFunc = require('../src/myFunc.js');\n\n//Existing Test Case\ndescribe('myFunc()', function () {\n  it('should return “Hello, World!” when no parameters are provided', function() {\n    assert.equal(myFunc(), 'Hello, World!');\n  });\n});\n\n//Updated Test Case\ndescribe('myFunc(text)', function () {\n  it('should return text when one parameter is provided', function() {\n    let text = 'Artillery Test';\n    assert.equal(myFunc(text), 'Artillery Test');\n  });\n\n  it('should return “Hello, Artillery!” when the parameter is \"Artillery\"', function() {\n    assert.equal(myFunc('Artillery'), 'Hello, Artillery!');\n  });\n\n  it('should return responded error message for null parameter', function() {\n    assert.throws(() => { myFunc(null); }, Error, 'Invalid input');\n  });\n});\n"
                                ],
                                "type": "text/javascript"
                              }
                            }
                          ],
                          "protocolProfileBehavior": {
                            "disableBodyPruning": true
                          }
                        },
                        null,
                        {
                          "id": "69d32f64-a65d-4b87-b3cf-3e75ab81ca4f",
                          "name": "Create Requirements and link to test case.",
                          "request": {
                            "name": "Create Requirements and link to test case.",
                            "description": {
                              "content": "## Create Requirements and link to test case.\r\n##### Note: In case issue type won't be provided, default value will be \"Requirement\" issue type.\r\n            \r\n#### Body fields:\r\n* **summary** _(mandatory)_: the requirement summary.\r\n* **description** _(optional)_: the requirement description.\r\n* **issueType** _(optional)_: the requirement issue type (for example: Task, Requirement, Bug, etc..).",
                              "type": "text/plain"
                            },
                            "url": {
                              "path": [
                                "v1",
                                "projects",
                                ":project-key",
                                "test-cases",
                                ":key",
                                "requirements"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [],
                              "variable": [
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "{{key}}",
                                  "key": "key",
                                  "description": "(Required) jiraTestKey."
                                },
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "{{project-key}}",
                                  "key": "project-key",
                                  "description": "(Required) "
                                }
                              ]
                            },
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              },
                              {
                                "key": "Accept",
                                "value": "text/plain"
                              }
                            ],
                            "method": "POST",
                            "auth": {
                              "type": "apikey",
                              "apikey": [
                                {
                                  "key": "key",
                                  "value": "Authorization"
                                },
                                {
                                  "key": "value",
                                  "value": "{{apiKey}}"
                                },
                                {
                                  "key": "in",
                                  "value": "header"
                                }
                              ]
                            },
                            "body": {
                              "mode": "raw",
                              "raw": "[\n    {\n        \"summary\": \"{{summary}}\",\n        \"description\": \"{{description}}\",\n        \"issueType\": \"{{issueType}}\"\n    },\n    {\n        \"summary\": \"{{1.summary}}\",\n        \"description\": \"{{1.description}}\",\n        \"issueType\": \"{{1.issueType}}\"\n    }\n]",
                              "options": {
                                "raw": {
                                  "language": "json"
                                }
                              }
                            }
                          },
                          "response": [
                            {
                              "id": "2e052f0f-34d0-4388-980d-e9abc08771a5",
                              "name": "Success",
                              "originalRequest": {
                                "url": {
                                  "path": [
                                    "v1",
                                    "projects",
                                    ":project-key",
                                    "test-cases",
                                    ":key",
                                    "requirements"
                                  ],
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "query": [],
                                  "variable": [
                                    {
                                      "disabled": false,
                                      "type": "any",
                                      "value": "{{key}}",
                                      "key": "key",
                                      "description": "(Required) jiraTestKey."
                                    },
                                    {
                                      "disabled": false,
                                      "type": "any",
                                      "value": "{{project-key}}",
                                      "key": "project-key",
                                      "description": "(Required) "
                                    }
                                  ]
                                },
                                "header": [
                                  {
                                    "description": {
                                      "content": "Added as a part of security scheme: apikey",
                                      "type": "text/plain"
                                    },
                                    "key": "Authorization",
                                    "value": "{{Authorization}}"
                                  },
                                  {
                                    "key": "Accept",
                                    "value": "text/plain"
                                  }
                                ],
                                "method": "POST",
                                "body": {
                                  "mode": "raw",
                                  "raw": "[\n    {\n        \"summary\": \"{{summary}}\",\n        \"description\": \"{{description}}\",\n        \"issueType\": \"{{issueType}}\"\n    },\n    {\n        \"summary\": \"{{1.summary}}\",\n        \"description\": \"{{1.description}}\",\n        \"issueType\": \"{{1.issueType}}\"\n    }\n]",
                                  "options": {
                                    "raw": {
                                      "language": "json"
                                    }
                                  }
                                }
                              },
                              "status": "OK",
                              "code": 200,
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": "{\n  \"notLinkedRequirement\": [\n    \"Key-2\"\n  ],\n  \"linkedRequirement\": [\n    \"Key-1\"\n  ]\n}",
                              "cookie": [],
                              "_postman_previewlanguage": "json"
                            },
                            {
                              "id": "6d471cda-5312-4f2d-94e9-909b9c7cb3fd",
                              "name": "`Unauthorized.",
                              "originalRequest": {
                                "url": {
                                  "path": [
                                    "v1",
                                    "projects",
                                    ":project-key",
                                    "test-cases",
                                    ":key",
                                    "requirements"
                                  ],
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "query": [],
                                  "variable": [
                                    {
                                      "disabled": false,
                                      "type": "any",
                                      "value": "{{key}}",
                                      "key": "key",
                                      "description": "(Required) jiraTestKey."
                                    },
                                    {
                                      "disabled": false,
                                      "type": "any",
                                      "value": "{{project-key}}",
                                      "key": "project-key",
                                      "description": "(Required) "
                                    }
                                  ]
                                },
                                "header": [
                                  {
                                    "description": {
                                      "content": "Added as a part of security scheme: apikey",
                                      "type": "text/plain"
                                    },
                                    "key": "Authorization",
                                    "value": "{{Authorization}}"
                                  }
                                ],
                                "method": "POST",
                                "body": {
                                  "mode": "raw",
                                  "raw": "[\n    {\n        \"summary\": \"{{summary}}\",\n        \"description\": \"{{description}}\",\n        \"issueType\": \"{{issueType}}\"\n    },\n    {\n        \"summary\": \"{{1.summary}}\",\n        \"description\": \"{{1.description}}\",\n        \"issueType\": \"{{1.issueType}}\"\n    }\n]",
                                  "options": {
                                    "raw": {
                                      "language": "json"
                                    }
                                  }
                                }
                              },
                              "status": "Unauthorized",
                              "code": 401,
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "text/plain"
                                }
                              ],
                              "body": "",
                              "cookie": [],
                              "_postman_previewlanguage": "text"
                            }
                          ],
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "exec": [
                                  "//Import necessary dependencies\nconst assert = require('chai').assert;\nconst myFunc = require('../src/myFunc.js');\n\n//Existing Test Case\ndescribe('myFunc()', function () {\n  it('should return “Hello, World!” when no parameters are provided', function() {\n    assert.equal(myFunc(), 'Hello, World!');\n  });\n});\n\n//Updated Test Case\ndescribe('myFunc(text)', function () {\n  it('should return text when one parameter is provided', function() {\n    let text = 'Artillery Test';\n    assert.equal(myFunc(text), 'Artillery Test');\n  });\n\n  it('should return “Hello, Artillery!” when the parameter is \"Artillery\"', function() {\n    assert.equal(myFunc('Artillery'), 'Hello, Artillery!');\n  });\n\n  it('should return responded error message for null parameter', function() {\n    assert.throws(() => { myFunc(null); }, Error, 'Invalid input');\n  });\n});\n"
                                ],
                                "type": "text/javascript"
                              }
                            }
                          ],
                          "protocolProfileBehavior": {
                            "disableBodyPruning": true
                          }
                        },
                        {
                          "id": "c453bb05-68eb-4442-9c07-7b2fbf89b16d",
                          "name": "Link Requirements to test case.",
                          "request": {
                            "name": "Link Requirements to test case.",
                            "description": {
                              "content": "## Link Requirements to test case.\r\n            \r\n#### Body fields:\r\n* **issueKey** _(mandatory)_: the issue key.",
                              "type": "text/plain"
                            },
                            "url": {
                              "path": [
                                "v1",
                                "projects",
                                ":project-key",
                                "test-cases",
                                ":key",
                                "requirement",
                                "link"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [],
                              "variable": [
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "{{key}}",
                                  "key": "key",
                                  "description": "(Required) jiraTestKey."
                                },
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "{{project-key}}",
                                  "key": "project-key",
                                  "description": "(Required) "
                                }
                              ]
                            },
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              },
                              {
                                "key": "Accept",
                                "value": "text/plain"
                              }
                            ],
                            "method": "POST",
                            "auth": {
                              "type": "apikey",
                              "apikey": [
                                {
                                  "key": "key",
                                  "value": "Authorization"
                                },
                                {
                                  "key": "value",
                                  "value": "{{apiKey}}"
                                },
                                {
                                  "key": "in",
                                  "value": "header"
                                }
                              ]
                            },
                            "body": {
                              "mode": "raw",
                              "raw": "[\n    {\n        \"issueKey\": \"{{issueKey}}\"\n    },\n    {\n        \"issueKey\": \"{{1.issueKey}}\"\n    }\n]",
                              "options": {
                                "raw": {
                                  "language": "json"
                                }
                              }
                            }
                          },
                          "response": [
                            {
                              "id": "ac050807-7503-496c-aabd-e4f57ea33f5b",
                              "name": "Success",
                              "originalRequest": {
                                "url": {
                                  "path": [
                                    "v1",
                                    "projects",
                                    ":project-key",
                                    "test-cases",
                                    ":key",
                                    "requirement",
                                    "link"
                                  ],
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "query": [],
                                  "variable": [
                                    {
                                      "disabled": false,
                                      "type": "any",
                                      "value": "{{key}}",
                                      "key": "key",
                                      "description": "(Required) jiraTestKey."
                                    },
                                    {
                                      "disabled": false,
                                      "type": "any",
                                      "value": "{{project-key}}",
                                      "key": "project-key",
                                      "description": "(Required) "
                                    }
                                  ]
                                },
                                "header": [
                                  {
                                    "description": {
                                      "content": "Added as a part of security scheme: apikey",
                                      "type": "text/plain"
                                    },
                                    "key": "Authorization",
                                    "value": "{{Authorization}}"
                                  },
                                  {
                                    "key": "Accept",
                                    "value": "text/plain"
                                  }
                                ],
                                "method": "POST",
                                "body": {
                                  "mode": "raw",
                                  "raw": "[\n    {\n        \"issueKey\": \"{{issueKey}}\"\n    },\n    {\n        \"issueKey\": \"{{1.issueKey}}\"\n    }\n]",
                                  "options": {
                                    "raw": {
                                      "language": "json"
                                    }
                                  }
                                }
                              },
                              "status": "OK",
                              "code": 200,
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": "{\n  \"notLinkedRequirement\": [\n    \"Key-2\"\n  ],\n  \"linkedRequirement\": [\n    \"Key-1\"\n  ]\n}",
                              "cookie": [],
                              "_postman_previewlanguage": "json"
                            },
                            {
                              "id": "9ed43267-cd1f-4e3a-85bc-f29dd6817d84",
                              "name": "`Unauthorized.",
                              "originalRequest": {
                                "url": {
                                  "path": [
                                    "v1",
                                    "projects",
                                    ":project-key",
                                    "test-cases",
                                    ":key",
                                    "requirement",
                                    "link"
                                  ],
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "query": [],
                                  "variable": [
                                    {
                                      "disabled": false,
                                      "type": "any",
                                      "value": "{{key}}",
                                      "key": "key",
                                      "description": "(Required) jiraTestKey."
                                    },
                                    {
                                      "disabled": false,
                                      "type": "any",
                                      "value": "{{project-key}}",
                                      "key": "project-key",
                                      "description": "(Required) "
                                    }
                                  ]
                                },
                                "header": [
                                  {
                                    "description": {
                                      "content": "Added as a part of security scheme: apikey",
                                      "type": "text/plain"
                                    },
                                    "key": "Authorization",
                                    "value": "{{Authorization}}"
                                  }
                                ],
                                "method": "POST",
                                "body": {
                                  "mode": "raw",
                                  "raw": "[\n    {\n        \"issueKey\": \"{{issueKey}}\"\n    },\n    {\n        \"issueKey\": \"{{1.issueKey}}\"\n    }\n]",
                                  "options": {
                                    "raw": {
                                      "language": "json"
                                    }
                                  }
                                }
                              },
                              "status": "Unauthorized",
                              "code": 401,
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "text/plain"
                                }
                              ],
                              "body": "",
                              "cookie": [],
                              "_postman_previewlanguage": "text"
                            }
                          ],
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "exec": [
                                  "//Import necessary dependencies\nconst assert = require('chai').assert;\nconst myFunc = require('../src/myFunc.js');\n\n//Existing Test Case\ndescribe('myFunc()', function () {\n  it('should return “Hello, World!” when no parameters are provided', function() {\n    assert.equal(myFunc(), 'Hello, World!');\n  });\n});\n\n//Updated Test Case\ndescribe('myFunc(text)', function () {\n  it('should return text when one parameter is provided', function() {\n    let text = 'Artillery Test';\n    assert.equal(myFunc(text), 'Artillery Test');\n  });\n\n  it('should return “Hello, Artillery!” when the parameter is \"Artillery\"', function() {\n    assert.equal(myFunc('Artillery'), 'Hello, Artillery!');\n  });\n\n  it('should return responded error message for null parameter', function() {\n    assert.throws(() => { myFunc(null); }, Error, 'Invalid input');\n  });\n});\n"
                                ],
                                "type": "text/javascript"
                              }
                            }
                          ],
                          "protocolProfileBehavior": {
                            "disableBodyPruning": true
                          }
                        },
                        {
                          "id": "0a3f2f67-ea6f-4e5d-86c8-35f476934709",
                          "name": "Add or update automation content for a test case.",
                          "request": {
                            "name": "Add or update automation content for a test case.",
                            "description": {
                              "content": "## Add or update automation content and details for a test case.\r\n            \r\n#### Body fields:\r\n            \r\n* **name**: The name of the automation for the test case.\r\n* **externalId** _(optional)_: The external Id of the automated test from the external automation system.\r\n* **key**: The Jira key of the test case .",
                              "type": "text/plain"
                            },
                            "url": {
                              "path": [
                                "v1",
                                "projects",
                                ":project-key",
                                "test-cases",
                                ":key",
                                "automation"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [
                                {
                                  "disabled": false,
                                  "key": "confirmation",
                                  "value": "{{confirmation}}",
                                  "description": "<br>Changing a test case from Manual to Automated overwrites your precondition and test steps.\r\n<br> Select True to confirm that you want to delete the precondition and test steps from the test case."
                                }
                              ],
                              "variable": [
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "{{key}}",
                                  "key": "key",
                                  "description": "(Required) The Jira issue key for the Test Case."
                                },
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "{{project-key}}",
                                  "key": "project-key",
                                  "description": "(Required) "
                                }
                              ]
                            },
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "method": "PUT",
                            "auth": {
                              "type": "apikey",
                              "apikey": [
                                {
                                  "key": "key",
                                  "value": "Authorization"
                                },
                                {
                                  "key": "value",
                                  "value": "{{apiKey}}"
                                },
                                {
                                  "key": "in",
                                  "value": "header"
                                }
                              ]
                            },
                            "body": {
                              "mode": "raw",
                              "raw": "{\n    \"name\": \"{{name}}\",\n    \"externalId\": \"{{externalId}}\",\n    \"content\": \"{{content}}\"\n}",
                              "options": {
                                "raw": {
                                  "language": "json"
                                }
                              }
                            }
                          },
                          "response": [
                            {
                              "id": "547ffa09-c303-4076-872c-1eeafe8c136e",
                              "name": "Updated automation content for test case.",
                              "originalRequest": {
                                "url": {
                                  "path": [
                                    "v1",
                                    "projects",
                                    ":project-key",
                                    "test-cases",
                                    ":key",
                                    "automation"
                                  ],
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "query": [
                                    {
                                      "key": "confirmation",
                                      "value": "{{confirmation}}"
                                    }
                                  ],
                                  "variable": [
                                    {
                                      "disabled": false,
                                      "type": "any",
                                      "value": "{{key}}",
                                      "key": "key",
                                      "description": "(Required) The Jira issue key for the Test Case."
                                    },
                                    {
                                      "disabled": false,
                                      "type": "any",
                                      "value": "{{project-key}}",
                                      "key": "project-key",
                                      "description": "(Required) "
                                    }
                                  ]
                                },
                                "header": [
                                  {
                                    "description": {
                                      "content": "Added as a part of security scheme: apikey",
                                      "type": "text/plain"
                                    },
                                    "key": "Authorization",
                                    "value": "{{Authorization}}"
                                  }
                                ],
                                "method": "PUT",
                                "body": {
                                  "mode": "raw",
                                  "raw": "{\n    \"name\": \"{{name}}\",\n    \"externalId\": \"{{externalId}}\",\n    \"content\": \"{{content}}\"\n}",
                                  "options": {
                                    "raw": {
                                      "language": "json"
                                    }
                                  }
                                }
                              },
                              "status": "OK",
                              "code": 200,
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "text/plain"
                                }
                              ],
                              "body": "",
                              "cookie": [],
                              "_postman_previewlanguage": "text"
                            },
                            {
                              "id": "5d2e626f-955f-44f9-a813-797151962f8d",
                              "name": "`Invalid parameters.",
                              "originalRequest": {
                                "url": {
                                  "path": [
                                    "v1",
                                    "projects",
                                    ":project-key",
                                    "test-cases",
                                    ":key",
                                    "automation"
                                  ],
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "query": [
                                    {
                                      "key": "confirmation",
                                      "value": "{{confirmation}}"
                                    }
                                  ],
                                  "variable": [
                                    {
                                      "disabled": false,
                                      "type": "any",
                                      "value": "{{key}}",
                                      "key": "key",
                                      "description": "(Required) The Jira issue key for the Test Case."
                                    },
                                    {
                                      "disabled": false,
                                      "type": "any",
                                      "value": "{{project-key}}",
                                      "key": "project-key",
                                      "description": "(Required) "
                                    }
                                  ]
                                },
                                "header": [
                                  {
                                    "description": {
                                      "content": "Added as a part of security scheme: apikey",
                                      "type": "text/plain"
                                    },
                                    "key": "Authorization",
                                    "value": "{{Authorization}}"
                                  },
                                  {
                                    "key": "Accept",
                                    "value": "application/json"
                                  }
                                ],
                                "method": "PUT",
                                "body": {
                                  "mode": "raw",
                                  "raw": "{\n    \"name\": \"{{name}}\",\n    \"externalId\": \"{{externalId}}\",\n    \"content\": \"{{content}}\"\n}",
                                  "options": {
                                    "raw": {
                                      "language": "json"
                                    }
                                  }
                                }
                              },
                              "status": "Bad Request",
                              "code": 400,
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": "{\n  \"message\": \"bad data\"\n}",
                              "cookie": [],
                              "_postman_previewlanguage": "json"
                            },
                            {
                              "id": "eb90d483-86c3-46df-8bd2-41c85b491c00",
                              "name": "`Unauthorized`.",
                              "originalRequest": {
                                "url": {
                                  "path": [
                                    "v1",
                                    "projects",
                                    ":project-key",
                                    "test-cases",
                                    ":key",
                                    "automation"
                                  ],
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "query": [
                                    {
                                      "key": "confirmation",
                                      "value": "{{confirmation}}"
                                    }
                                  ],
                                  "variable": [
                                    {
                                      "disabled": false,
                                      "type": "any",
                                      "value": "{{key}}",
                                      "key": "key",
                                      "description": "(Required) The Jira issue key for the Test Case."
                                    },
                                    {
                                      "disabled": false,
                                      "type": "any",
                                      "value": "{{project-key}}",
                                      "key": "project-key",
                                      "description": "(Required) "
                                    }
                                  ]
                                },
                                "header": [
                                  {
                                    "description": {
                                      "content": "Added as a part of security scheme: apikey",
                                      "type": "text/plain"
                                    },
                                    "key": "Authorization",
                                    "value": "{{Authorization}}"
                                  },
                                  {
                                    "key": "Accept",
                                    "value": "application/json"
                                  }
                                ],
                                "method": "PUT",
                                "body": {
                                  "mode": "raw",
                                  "raw": "{\n    \"name\": \"{{name}}\",\n    \"externalId\": \"{{externalId}}\",\n    \"content\": \"{{content}}\"\n}",
                                  "options": {
                                    "raw": {
                                      "language": "json"
                                    }
                                  }
                                }
                              },
                              "status": "Unauthorized",
                              "code": 401,
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": "{\n  \"message\": \"unauthorized\"\n}",
                              "cookie": [],
                              "_postman_previewlanguage": "json"
                            },
                            {
                              "id": "3efd3fa8-45ef-407e-8a3f-17ff91474dfa",
                              "name": "`Not Found`.",
                              "originalRequest": {
                                "url": {
                                  "path": [
                                    "v1",
                                    "projects",
                                    ":project-key",
                                    "test-cases",
                                    ":key",
                                    "automation"
                                  ],
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "query": [
                                    {
                                      "key": "confirmation",
                                      "value": "{{confirmation}}"
                                    }
                                  ],
                                  "variable": [
                                    {
                                      "disabled": false,
                                      "type": "any",
                                      "value": "{{key}}",
                                      "key": "key",
                                      "description": "(Required) The Jira issue key for the Test Case."
                                    },
                                    {
                                      "disabled": false,
                                      "type": "any",
                                      "value": "{{project-key}}",
                                      "key": "project-key",
                                      "description": "(Required) "
                                    }
                                  ]
                                },
                                "header": [
                                  {
                                    "description": {
                                      "content": "Added as a part of security scheme: apikey",
                                      "type": "text/plain"
                                    },
                                    "key": "Authorization",
                                    "value": "{{Authorization}}"
                                  },
                                  {
                                    "key": "Accept",
                                    "value": "application/json"
                                  }
                                ],
                                "method": "PUT",
                                "body": {
                                  "mode": "raw",
                                  "raw": "{\n    \"name\": \"{{name}}\",\n    \"externalId\": \"{{externalId}}\",\n    \"content\": \"{{content}}\"\n}",
                                  "options": {
                                    "raw": {
                                      "language": "json"
                                    }
                                  }
                                }
                              },
                              "status": "Not Found",
                              "code": 404,
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": "{\n  \"message\": \"not found\"\n}",
                              "cookie": [],
                              "_postman_previewlanguage": "json"
                            }
                          ],
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "exec": [
                                  "//Import necessary dependencies\nconst assert = require('chai').assert;\nconst myFunc = require('../src/myFunc.js');\n\n//Existing Test Case\ndescribe('myFunc()', function () {\n  it('should return “Hello, World!” when no parameters are provided', function() {\n    assert.equal(myFunc(), 'Hello, World!');\n  });\n});\n\n//Updated Test Case\ndescribe('myFunc(text)', function () {\n  it('should return text when one parameter is provided', function() {\n    let text = 'Artillery Test';\n    assert.equal(myFunc(text), 'Artillery Test');\n  });\n\n  it('should return “Hello, Artillery!” when the parameter is \"Artillery\"', function() {\n    assert.equal(myFunc('Artillery'), 'Hello, Artillery!');\n  });\n\n  it('should return responded error message for null parameter', function() {\n    assert.throws(() => { myFunc(null); }, Error, 'Invalid input');\n  });\n});\n"
                                ],
                                "type": "text/javascript"
                              }
                            }
                          ],
                          "protocolProfileBehavior": {
                            "disableBodyPruning": true
                          }
                        }
                      ],
                      "event": []
                    },
                    {
                      "id": "b18ec64f-b7bf-43e3-87c0-d359977f0bb8",
                      "name": "Read test case(s).",
                      "request": {
                        "name": "Read test case(s).",
                        "description": {
                          "content": "## Get or retrieve information from test case(s).\r\n            \r\n#### Body fields:\r\n* **jiraFields**: a comma-separated list of Jira fields to return for each issue. Use this to retrieve a subset of fields.\r\n* **ttmFields**: a comma-separated list of Jira fields to return for each issue. Use this to retrieve a subset of fields.",
                          "type": "text/plain"
                        },
                        "url": {
                          "path": [
                            "v1",
                            "projects",
                            ":project-key",
                            "test-cases",
                            "bulk"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [
                            {
                              "disabled": false,
                              "key": "jiraFields",
                              "value": "{{jiraFields}}",
                              "description": "A list of Jira fields to return for each issue, use it to retrieve a subset of fields. Provide a comma-separated list."
                            },
                            {
                              "disabled": false,
                              "key": "ttmFields",
                              "value": "{{ttmFields}}",
                              "description": "A list of TTM fields to return for each issue, use it to retrieve a subset of fields. Provide a comma-separated list."
                            },
                            {
                              "disabled": false,
                              "key": "limit",
                              "value": "{{limit}}",
                              "description": "Numeric value that determines that maximum N results will be returned"
                            },
                            {
                              "disabled": false,
                              "key": "nextPageToken",
                              "value": "{{nextPageToken}}",
                              "description": "The cursor for pagination: To get the next page, pass this parameter; to get the first page, omit this parameter. The parameter is returned from the previous page."
                            }
                          ],
                          "variable": [
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "{{project-key}}",
                              "key": "project-key",
                              "description": "(Required) "
                            }
                          ]
                        },
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "method": "GET",
                        "auth": {
                          "type": "apikey",
                          "apikey": [
                            {
                              "key": "key",
                              "value": "Authorization"
                            },
                            {
                              "key": "value",
                              "value": "{{apiKey}}"
                            },
                            {
                              "key": "in",
                              "value": "header"
                            }
                          ]
                        }
                      },
                      "response": [
                        {
                          "id": "64c94de2-76c4-47e2-b5cb-d44f47144638",
                          "name": "Successfully retrieved test cases information.",
                          "originalRequest": {
                            "url": {
                              "path": [
                                "v1",
                                "projects",
                                ":project-key",
                                "test-cases",
                                "bulk"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [
                                {
                                  "key": "jiraFields",
                                  "value": "{{jiraFields}}"
                                },
                                {
                                  "key": "ttmFields",
                                  "value": "{{ttmFields}}"
                                },
                                {
                                  "key": "limit",
                                  "value": "{{limit}}"
                                },
                                {
                                  "key": "nextPageToken",
                                  "value": "{{nextPageToken}}"
                                }
                              ],
                              "variable": [
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "{{project-key}}",
                                  "key": "project-key",
                                  "description": "(Required) "
                                }
                              ]
                            },
                            "header": [
                              {
                                "description": {
                                  "content": "Added as a part of security scheme: apikey",
                                  "type": "text/plain"
                                },
                                "key": "Authorization",
                                "value": "{{Authorization}}"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "method": "GET",
                            "body": {}
                          },
                          "status": "OK",
                          "code": 200,
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": "{\n  \"limit\": 1,\n  \"nextPageToken\": \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\n  \"items\": [\n    {\n      \"id\": \"2e5b965f-641b-411f-bb49-fb2feb09a75a\",\n      \"key\": \"TE-1\",\n      \"project\": \"TE\",\n      \"testType\": \"Manual\",\n      \"fields\": {\n        \"summary\": \"Test 1 status\",\n        \"description\": \"Test 1 description\",\n        \"status\": \"Backlog\",\n        \"priority\": \"High\",\n        \"labels\": [\n          \"My Label\"\n        ]\n      },\n      \"customFields\": [\n        {\n          \"key\": \"customField_10001\",\n          \"name\": \"A custom field\",\n          \"value\": \"Some value\"\n        }\n      ],\n      \"ttmFields\": {\n        \"precondition\": \"A precondition\",\n        \"steps\": [\n          {\n            \"testCaseKey\": \"TE-2\",\n            \"testCaseId\": \"10000\"\n          },\n          {\n            \"description\": \"Login\",\n            \"expectedResult\": \"Login should work\"\n          },\n          {\n            \"description\": \"Logout\",\n            \"expectedResult\": \"Logout should work\"\n          },\n          {\n            \"testCaseKey\": \"TE-5\",\n            \"testCaseId\": \"10004\",\n            \"deleted\": true\n          }\n        ]\n      },\n      \"requirements\": [\n        \"TE-10\",\n        \"TE-11\"\n      ],\n      \"folder\": \"parent folder/child folder\",\n      \"folderId\": \"757fdff8-df8c-44e8-ad66-80722aec5db1\"\n    },\n    {\n      \"id\": \"3a1b8c66-e023-47dc-96ca-a2f8a50ad113\",\n      \"key\": \"TE-2\",\n      \"project\": \"TE\",\n      \"testType\": \"Automated\",\n      \"fields\": {\n        \"summary\": \"An automated test\",\n        \"description\": \"Automated test description\",\n        \"status\": \"Backlog\",\n        \"priority\": \"High\",\n        \"labels\": [\n          \"My Label\"\n        ]\n      },\n      \"requirements\": [\n        \"TE-12\",\n        \"TE-13\"\n      ],\n      \"folder\": \"automated tests/feature1\",\n      \"folderId\": \"1fe6c23c-c19c-40d7-bb0f-a1255264c063\"\n    }\n  ]\n}",
                          "cookie": [],
                          "_postman_previewlanguage": "json"
                        },
                        {
                          "id": "5b8bdfd1-449f-435d-b1b7-9fe2b0b7cad2",
                          "name": "`Invalid parameters.",
                          "originalRequest": {
                            "url": {
                              "path": [
                                "v1",
                                "projects",
                                ":project-key",
                                "test-cases",
                                "bulk"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [
                                {
                                  "key": "jiraFields",
                                  "value": "{{jiraFields}}"
                                },
                                {
                                  "key": "ttmFields",
                                  "value": "{{ttmFields}}"
                                },
                                {
                                  "key": "limit",
                                  "value": "{{limit}}"
                                },
                                {
                                  "key": "nextPageToken",
                                  "value": "{{nextPageToken}}"
                                }
                              ],
                              "variable": [
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "{{project-key}}",
                                  "key": "project-key",
                                  "description": "(Required) "
                                }
                              ]
                            },
                            "header": [
                              {
                                "description": {
                                  "content": "Added as a part of security scheme: apikey",
                                  "type": "text/plain"
                                },
                                "key": "Authorization",
                                "value": "{{Authorization}}"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "method": "GET",
                            "body": {}
                          },
                          "status": "Bad Request",
                          "code": 400,
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": "{\n  \"message\": \"bad data\"\n}",
                          "cookie": [],
                          "_postman_previewlanguage": "json"
                        },
                        {
                          "id": "89398ae1-f333-4280-b160-1cc6bbe0949d",
                          "name": "`Unauthorized`.",
                          "originalRequest": {
                            "url": {
                              "path": [
                                "v1",
                                "projects",
                                ":project-key",
                                "test-cases",
                                "bulk"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [
                                {
                                  "key": "jiraFields",
                                  "value": "{{jiraFields}}"
                                },
                                {
                                  "key": "ttmFields",
                                  "value": "{{ttmFields}}"
                                },
                                {
                                  "key": "limit",
                                  "value": "{{limit}}"
                                },
                                {
                                  "key": "nextPageToken",
                                  "value": "{{nextPageToken}}"
                                }
                              ],
                              "variable": [
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "{{project-key}}",
                                  "key": "project-key",
                                  "description": "(Required) "
                                }
                              ]
                            },
                            "header": [
                              {
                                "description": {
                                  "content": "Added as a part of security scheme: apikey",
                                  "type": "text/plain"
                                },
                                "key": "Authorization",
                                "value": "{{Authorization}}"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "method": "GET",
                            "body": {}
                          },
                          "status": "Unauthorized",
                          "code": 401,
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": "{\n  \"message\": \"unauthorized\"\n}",
                          "cookie": [],
                          "_postman_previewlanguage": "json"
                        },
                        {
                          "id": "7a95af2d-2098-48b6-a9f1-51c133bc7a09",
                          "name": "`Not Found`.",
                          "originalRequest": {
                            "url": {
                              "path": [
                                "v1",
                                "projects",
                                ":project-key",
                                "test-cases",
                                "bulk"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [
                                {
                                  "key": "jiraFields",
                                  "value": "{{jiraFields}}"
                                },
                                {
                                  "key": "ttmFields",
                                  "value": "{{ttmFields}}"
                                },
                                {
                                  "key": "limit",
                                  "value": "{{limit}}"
                                },
                                {
                                  "key": "nextPageToken",
                                  "value": "{{nextPageToken}}"
                                }
                              ],
                              "variable": [
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "{{project-key}}",
                                  "key": "project-key",
                                  "description": "(Required) "
                                }
                              ]
                            },
                            "header": [
                              {
                                "description": {
                                  "content": "Added as a part of security scheme: apikey",
                                  "type": "text/plain"
                                },
                                "key": "Authorization",
                                "value": "{{Authorization}}"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "method": "GET",
                            "body": {}
                          },
                          "status": "Not Found",
                          "code": 404,
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": "{\n  \"message\": \"not found\"\n}",
                          "cookie": [],
                          "_postman_previewlanguage": "json"
                        }
                      ],
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "//Import necessary dependencies\nconst assert = require('chai').assert;\nconst myFunc = require('../src/myFunc.js');\n\n//Existing Test Case\ndescribe('myFunc()', function () {\n  it('should return “Hello, World!” when no parameters are provided', function() {\n    assert.equal(myFunc(), 'Hello, World!');\n  });\n});\n\n//Updated Test Case\ndescribe('myFunc(text)', function () {\n  it('should return text when one parameter is provided', function() {\n    let text = 'Artillery Test';\n    assert.equal(myFunc(text), 'Artillery Test');\n  });\n\n  it('should return “Hello, Artillery!” when the parameter is \"Artillery\"', function() {\n    assert.equal(myFunc('Artillery'), 'Hello, Artillery!');\n  });\n\n  it('should return responded error message for null parameter', function() {\n    assert.throws(() => { myFunc(null); }, Error, 'Invalid input');\n  });\n});\n"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      }
                    }
                  ],
                  "event": []
                },
                {
                  "id": "7505c706-676c-4b9a-a05d-c52d845407b7",
                  "name": "Query job status.",
                  "request": {
                    "name": "Query job status.",
                    "description": {
                      "content": "## Query the status of an asynchronous job to create or import test case(s).",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "v1",
                        "projects",
                        ":project-key",
                        "jobs",
                        ":job-id"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "{{job-id}}",
                          "key": "job-id",
                          "description": "(Required) The job ID returned from the import request endpoint."
                        },
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "{{project-key}}",
                          "key": "project-key",
                          "description": "(Required) "
                        }
                      ]
                    },
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "GET",
                    "auth": {
                      "type": "apikey",
                      "apikey": [
                        {
                          "key": "key",
                          "value": "Authorization"
                        },
                        {
                          "key": "value",
                          "value": "{{apiKey}}"
                        },
                        {
                          "key": "in",
                          "value": "header"
                        }
                      ]
                    }
                  },
                  "response": [
                    {
                      "id": "14290151-156e-45dd-a7ec-0130d01a7095",
                      "name": "Successfully retrieved the test creation job status.",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "v1",
                            "projects",
                            ":project-key",
                            "jobs",
                            ":job-id"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "{{job-id}}",
                              "key": "job-id",
                              "description": "(Required) The job ID returned from the import request endpoint."
                            },
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "{{project-key}}",
                              "key": "project-key",
                              "description": "(Required) "
                            }
                          ]
                        },
                        "header": [
                          {
                            "description": {
                              "content": "Added as a part of security scheme: apikey",
                              "type": "text/plain"
                            },
                            "key": "Authorization",
                            "value": "{{Authorization}}"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "method": "GET",
                        "body": {}
                      },
                      "status": "OK",
                      "code": 200,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n  \"status\": \"Pending\"\n}",
                      "cookie": [],
                      "_postman_previewlanguage": "json"
                    },
                    {
                      "id": "f3b6c8c2-d554-4c65-9f1f-5a3f87ad80a4",
                      "name": "`Invalid parameters.",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "v1",
                            "projects",
                            ":project-key",
                            "jobs",
                            ":job-id"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "{{job-id}}",
                              "key": "job-id",
                              "description": "(Required) The job ID returned from the import request endpoint."
                            },
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "{{project-key}}",
                              "key": "project-key",
                              "description": "(Required) "
                            }
                          ]
                        },
                        "header": [
                          {
                            "description": {
                              "content": "Added as a part of security scheme: apikey",
                              "type": "text/plain"
                            },
                            "key": "Authorization",
                            "value": "{{Authorization}}"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n  \"message\": \"bad data\"\n}",
                      "cookie": [],
                      "_postman_previewlanguage": "json"
                    },
                    {
                      "id": "8efd237a-015d-4700-b6ae-02a068976549",
                      "name": "`Unauthorized`.",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "v1",
                            "projects",
                            ":project-key",
                            "jobs",
                            ":job-id"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "{{job-id}}",
                              "key": "job-id",
                              "description": "(Required) The job ID returned from the import request endpoint."
                            },
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "{{project-key}}",
                              "key": "project-key",
                              "description": "(Required) "
                            }
                          ]
                        },
                        "header": [
                          {
                            "description": {
                              "content": "Added as a part of security scheme: apikey",
                              "type": "text/plain"
                            },
                            "key": "Authorization",
                            "value": "{{Authorization}}"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Unauthorized",
                      "code": 401,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n  \"message\": \"unauthorized\"\n}",
                      "cookie": [],
                      "_postman_previewlanguage": "json"
                    },
                    {
                      "id": "9fc0da0d-4f8c-4238-8eda-2b4bacc1853e",
                      "name": "`Not Found`.",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "v1",
                            "projects",
                            ":project-key",
                            "jobs",
                            ":job-id"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "{{job-id}}",
                              "key": "job-id",
                              "description": "(Required) The job ID returned from the import request endpoint."
                            },
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "{{project-key}}",
                              "key": "project-key",
                              "description": "(Required) "
                            }
                          ]
                        },
                        "header": [
                          {
                            "description": {
                              "content": "Added as a part of security scheme: apikey",
                              "type": "text/plain"
                            },
                            "key": "Authorization",
                            "value": "{{Authorization}}"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n  \"message\": \"not found\"\n}",
                      "cookie": [],
                      "_postman_previewlanguage": "json"
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "//Import necessary dependencies\nconst assert = require('chai').assert;\nconst myFunc = require('../src/myFunc.js');\n\n//Existing Test Case\ndescribe('myFunc()', function () {\n  it('should return “Hello, World!” when no parameters are provided', function() {\n    assert.equal(myFunc(), 'Hello, World!');\n  });\n});\n\n//Updated Test Case\ndescribe('myFunc(text)', function () {\n  it('should return text when one parameter is provided', function() {\n    let text = 'Artillery Test';\n    assert.equal(myFunc(text), 'Artillery Test');\n  });\n\n  it('should return “Hello, Artillery!” when the parameter is \"Artillery\"', function() {\n    assert.equal(myFunc('Artillery'), 'Hello, Artillery!');\n  });\n\n  it('should return responded error message for null parameter', function() {\n    assert.throws(() => { myFunc(null); }, Error, 'Invalid input');\n  });\n});\n"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  }
                },
                {
                  "id": "0b948c19-539a-4df8-b5dd-b8ad5d10e36b",
                  "name": "test-runs",
                  "item": [
                    {
                      "id": "ae080dc9-d7c1-4b91-9946-0958b5ead313",
                      "name": "Create test run(s).",
                      "request": {
                        "name": "Create test run(s).",
                        "description": {
                          "content": "## Create or import test run(s).\r\n##### Note: Release versions are managed in Jira.\r\n            \r\n#### Body fields:\r\n* **version** _(optional)_: Specify the version name which the test runs will be under.\r\nIf version won't be provided OR version will be equal to unversioned, the test runs will be created under unversioned.\r\n(creating and editing of releases (versions) are managed in Jira).\r\n* **cycleName** _(optional)_: Specify the cycle name which the test runs will be under.\r\n* **folderPath** _(optional)_: Specify the folder path where you want to save the test run. A path is a string of concatenated parts separated by a slash \"/\".  If you don't specify a folder path, the test run will be under the cycle.\r\n* **includeAttachments** _(optional)_: Specify if to include attachments (default value: false).\r\nCycle must be provided here or under test runs (for each test runs).\r\n* **testRuns** _(mandatory)_: Provide a list of test runs, with each test having the following fields:\r\n    * **testCaseKey** _(mandatory)_: test case key that the test run will be linked to.\r\n    * **status** _(mandatory)_: the status of the test run. Status of test runs is defined in JIRA under the admin page.\r\n    * **name** _(optional)_: name of the test run.\r\n    * **description** _(optional)_: description of the test run.\r\n    * **priority** _(mandatory)_: priority of the test run (\"Highes\",\"Low\",etc..).\r\n    * **testCategory** _(mandatory)_: The test run category of the test run (\"Functional\" or \"NonFunctional\").\r\n    * **testType** _(mandatory)_: the test type of the test run (Manual, Automated).\r\n    * **cycleName** _(optional)_: specify the cycle name which the test runs will be under.\r\n    * **folder** _(optional)_: Specify the folder path where you want to save the test run. A path is a string of concatenated parts separated by a slash \"/\".  If you don't specify a folder path, the test run will be under the cycle. If you do not specify the folder in this field, the request uses the folder specified at the root level.\r\n    Cycle must be provided here or above testRuns in cycleName.\r\n    * **assignee** _(optional)_: the username or email which the test run will be assigned to.\r\n    * **executedBy** _(optional)_: the username or email which the test run is executed by.\r\n    * **automation** _(optional)_: the automation content of the test run.\r\n    In case TestType is Manual, Automation will be ignore (Manual test run can't contain automation content).\r\n        * **name** _(optional)_: the name of automation tool.\r\n        * **id** _(optional)_: the id of the test run in the automation tool.\r\n        * **content** _(mandatory)_: the test run automation content.\r\n        * **result** _(optional)_: the test run automation result.\r\n    * **plannedStartDate** _(optional)_: the test run planned start date.\r\n    * **plannedEndDate** _(optional)_: the test run planned end date.\r\n    * **components** _(optional)_: the test runs components.\r\n    * **labels** _(optional)_: the test runs labels.\r\n    * **steps** _(optional)_: list of steps of the test run.\r\n    In case TestType is Automated, and Steps will be provided (Test Run will contain Steps and Automation).\r\n        * **status** _(mandatory)_: the status of the test run step.\r\n        * **actualResult** _(optional)_: the actual result of the steps.\r\n        * **comment** _(optional)_: the test run step's comment.\r\n        * **data** _(optional)_: the test run step's data.\r\n        * **description** _(optional)_: the test run step's description.\r\n        * **expectedResult** _(optional)_: the test run step's expectedResult.\r\n    * **fields** _(optional)_: list of fields of the test run.\r\n    In case the field is List type (like Environments) allowedValueName must be provided, otherwise (like execution timer) 'value' must be provided.\r\n        * **schemeName** _(mandatory)_: the scheme name of the field (for example Execution Timer or Environments).\r\n        * **allowedValueName** _(optional)_: the allowed value of the scheme (for example Development).\r\n        * **value** _(optional)_: the value of the scheme (for example 130).",
                          "type": "text/plain"
                        },
                        "url": {
                          "path": [
                            "v1",
                            "projects",
                            ":project-key",
                            "test-runs"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "{{project-key}}",
                              "key": "project-key",
                              "description": "(Required) "
                            }
                          ]
                        },
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "method": "POST",
                        "auth": {
                          "type": "apikey",
                          "apikey": [
                            {
                              "key": "key",
                              "value": "Authorization"
                            },
                            {
                              "key": "value",
                              "value": "{{apiKey}}"
                            },
                            {
                              "key": "in",
                              "value": "header"
                            }
                          ]
                        },
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"version\": \"{{version}}\",\n    \"cycleName\": \"{{cycleName}}\",\n    \"folderPath\": \"{{folderPath}}\",\n    \"includeAttachments\": \"{{includeAttachments}}\",\n    \"testRuns\": [\n        \"{{testRuns}}\"\n    ]\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        }
                      },
                      "response": [
                        {
                          "id": "ace71eef-aed8-4701-a99c-473e561ea2fd",
                          "originalRequest": {
                            "url": {
                              "path": [
                                "v1",
                                "projects",
                                ":project-key",
                                "test-runs"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [],
                              "variable": [
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "{{project-key}}",
                                  "key": "project-key",
                                  "description": "(Required) "
                                }
                              ]
                            },
                            "header": [
                              {
                                "description": {
                                  "content": "Added as a part of security scheme: apikey",
                                  "type": "text/plain"
                                },
                                "key": "Authorization",
                                "value": "{{Authorization}}"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "method": "POST",
                            "body": {
                              "mode": "raw",
                              "raw": "{\n    \"version\": \"{{version}}\",\n    \"cycleName\": \"{{cycleName}}\",\n    \"includeAttachments\": \"{{includeAttachments}}\",\n    \"testRuns\": [\n        \"{{testRuns}}\"\n    ]\n}",
                              "options": {
                                "raw": {
                                  "language": "json"
                                }
                              }
                            }
                          },
                          "status": "OK",
                          "code": 200,
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": "[\n  {\n    \"id\": \"35072e4b-a6d6-451c-bcc2-df98dcef34ce\",\n    \"key\": \"DE-TR-1\",\n    \"created\": \"2025-04-29T07:21:25.3633497Z\",\n    \"updated\": \"2025-04-29T07:21:25.3633497Z\",\n    \"createdBy\": \"Tricentis\",\n    \"updatedBy\": \"Tricentis\",\n    \"cycle\": {\n      \"id\": \"c7994830-b05e-4f9b-873c-4fd53a6cfe51\",\n      \"name\": \"CycleName\",\n      \"version\": {\n        \"id\": \"0b2d961a-7b9b-425e-b48e-d77e3291e8cc\",\n        \"jiraId\": \"10000\",\n        \"name\": \"1.0.0\"\n      }\n    },\n    \"steps\": [\n      {\n        \"index\": 0,\n        \"status\": \"unexecuted\",\n        \"actualResult\": \"user name filled\",\n        \"comment\": \"no comment\",\n        \"description\": \"Enter username\",\n        \"expectedResult\": \"user name filled\"\n      }\n    ],\n    \"testCaseKey\": \"DE-1\",\n    \"status\": \"unexecuted\",\n    \"name\": \"Login\",\n    \"description\": \"Login into Test Management\",\n    \"priority\": \"High\",\n    \"testCategory\": \"Functional\",\n    \"testType\": \"Manual\",\n    \"assignee\": \"User\",\n    \"executedBy\": \"User\",\n    \"plannedStartDate\": \"2025-04-28T07:21:25.3633496Z\",\n    \"plannedEndDate\": \"2025-04-29T07:21:25.3633495Z\",\n    \"folderPath\": \"first/second\",\n    \"fields\": [\n      {\n        \"schemeName\": \"Environments\",\n        \"allowedValueName\": \"Development\"\n      },\n      {\n        \"schemeName\": \"Execution timer\",\n        \"value\": \"5\"\n      }\n    ]\n  },\n  {\n    \"id\": \"ea5499cb-86c6-47db-bfc0-3f1ce0e51448\",\n    \"key\": \"DE-TR-2\",\n    \"created\": \"2025-04-29T07:21:25.3633557Z\",\n    \"updated\": \"2025-04-29T07:21:25.3633558Z\",\n    \"createdBy\": \"Tricentis\",\n    \"updatedBy\": \"Tricentis\",\n    \"cycle\": {\n      \"id\": \"fcffbb72-62b8-429a-bbc9-c3df43e7f6d8\",\n      \"name\": \"CycleName\",\n      \"version\": {\n        \"id\": \"5fa3426f-5a39-44f8-8942-a4e248b4ede4\",\n        \"jiraId\": \"10000\",\n        \"name\": \"1.0.0\"\n      }\n    },\n    \"testCaseKey\": \"DE-2\",\n    \"status\": \"passeed\",\n    \"name\": \"Register\",\n    \"description\": \"Register into Test Management\",\n    \"priority\": \"Low\",\n    \"testCategory\": \"NonFunctional\",\n    \"testType\": \"Automated\",\n    \"assignee\": \"User\",\n    \"executedBy\": \"User\",\n    \"plannedStartDate\": \"2025-04-28T07:21:25.3633557Z\",\n    \"plannedEndDate\": \"2025-04-29T07:21:25.3633556Z\",\n    \"automation\": {\n      \"name\": \"Register to Test Management\",\n      \"id\": \"Test Id\",\n      \"content\": \"Click on register button, enter registration details\",\n      \"result\": \"Test passed as expected\"\n    },\n    \"folderPath\": \"first/third\"\n  },\n  {\n    \"id\": \"bf48651b-e51a-4639-a5dd-87f43b2035a2\",\n    \"cycle\": {\n      \"id\": \"740e7a9c-46be-4021-889b-2fdb8bd14d32\",\n      \"name\": \"CycleName\",\n      \"version\": {\n        \"id\": \"7a4bdb34-5510-4326-87f8-dcdf652e968b\",\n        \"jiraId\": \"10000\",\n        \"name\": \"1.0.0\"\n      }\n    },\n    \"steps\": [\n      {\n        \"index\": 1,\n        \"status\": \"unexecuted\",\n        \"actualResult\": \"user name filled\",\n        \"comment\": \"no comment\",\n        \"description\": \"Enter username\",\n        \"expectedResult\": \"user name filled\"\n      }\n    ],\n    \"testCaseKey\": \"DE-2\",\n    \"status\": \"passed\",\n    \"name\": \"Register\",\n    \"description\": \"Register into Test Management\",\n    \"priority\": \"Low\",\n    \"testCategory\": \"NonFunctional\",\n    \"testType\": \"Automated\",\n    \"assignee\": \"User\",\n    \"plannedStartDate\": \"2025-04-28T07:21:25.3633605Z\",\n    \"plannedEndDate\": \"2025-04-29T07:21:25.3633604Z\",\n    \"automation\": {\n      \"name\": \"Register to Test Management\",\n      \"id\": \"Test Id\",\n      \"content\": \"Click on register button, enter registration details\"\n    },\n    \"cycleName\": \"Cycle Name 2\"\n  }\n]",
                          "cookie": [],
                          "_postman_previewlanguage": "json"
                        },
                        {
                          "id": "9a4e8132-77f4-4442-9748-9812b7578054",
                          "name": "`Invalid parameters`.",
                          "originalRequest": {
                            "url": {
                              "path": [
                                "v1",
                                "projects",
                                ":project-key",
                                "test-runs"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [],
                              "variable": [
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "{{project-key}}",
                                  "key": "project-key",
                                  "description": "(Required) "
                                }
                              ]
                            },
                            "header": [
                              {
                                "description": {
                                  "content": "Added as a part of security scheme: apikey",
                                  "type": "text/plain"
                                },
                                "key": "Authorization",
                                "value": "{{Authorization}}"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "method": "POST",
                            "body": {
                              "mode": "raw",
                              "raw": "{\n    \"version\": \"{{version}}\",\n    \"cycleName\": \"{{cycleName}}\",\n    \"includeAttachments\": \"{{includeAttachments}}\",\n    \"testRuns\": [\n        \"{{testRuns}}\"\n    ]\n}",
                              "options": {
                                "raw": {
                                  "language": "json"
                                }
                              }
                            }
                          },
                          "status": "Bad Request",
                          "code": 400,
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": "{\n  \"message\": \"bad data\"\n}",
                          "cookie": [],
                          "_postman_previewlanguage": "json"
                        },
                        {
                          "id": "0850a282-c731-4fdf-b002-a8d8c1e7ce3e",
                          "name": "Unauthorized",
                          "originalRequest": {
                            "url": {
                              "path": [
                                "v1",
                                "projects",
                                ":project-key",
                                "test-runs"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [],
                              "variable": [
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "{{project-key}}",
                                  "key": "project-key",
                                  "description": "(Required) "
                                }
                              ]
                            },
                            "header": [
                              {
                                "description": {
                                  "content": "Added as a part of security scheme: apikey",
                                  "type": "text/plain"
                                },
                                "key": "Authorization",
                                "value": "{{Authorization}}"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "method": "POST",
                            "body": {
                              "mode": "raw",
                              "raw": "{\n    \"version\": \"{{version}}\",\n    \"cycleName\": \"{{cycleName}}\",\n    \"includeAttachments\": \"{{includeAttachments}}\",\n    \"testRuns\": [\n        \"{{testRuns}}\"\n    ]\n}",
                              "options": {
                                "raw": {
                                  "language": "json"
                                }
                              }
                            }
                          },
                          "status": "Unauthorized",
                          "code": 401,
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": "{\n  \"message\": \"unauthorized\"\n}",
                          "cookie": [],
                          "_postman_previewlanguage": "json"
                        },
                        {
                          "id": "1259c71e-9a8a-4a80-99f2-9bececba42c3",
                          "name": "`Not Found`.",
                          "originalRequest": {
                            "url": {
                              "path": [
                                "v1",
                                "projects",
                                ":project-key",
                                "test-runs"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [],
                              "variable": [
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "{{project-key}}",
                                  "key": "project-key",
                                  "description": "(Required) "
                                }
                              ]
                            },
                            "header": [
                              {
                                "description": {
                                  "content": "Added as a part of security scheme: apikey",
                                  "type": "text/plain"
                                },
                                "key": "Authorization",
                                "value": "{{Authorization}}"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "method": "POST",
                            "body": {
                              "mode": "raw",
                              "raw": "{\n    \"version\": \"{{version}}\",\n    \"cycleName\": \"{{cycleName}}\",\n    \"includeAttachments\": \"{{includeAttachments}}\",\n    \"testRuns\": [\n        \"{{testRuns}}\"\n    ]\n}",
                              "options": {
                                "raw": {
                                  "language": "json"
                                }
                              }
                            }
                          },
                          "status": "Not Found",
                          "code": 404,
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": "{\n  \"message\": \"not found\"\n}",
                          "cookie": [],
                          "_postman_previewlanguage": "json"
                        }
                      ],
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "//Import necessary dependencies\nconst assert = require('chai').assert;\nconst myFunc = require('../src/myFunc.js');\n\n//Existing Test Case\ndescribe('myFunc()', function () {\n  it('should return “Hello, World!” when no parameters are provided', function() {\n    assert.equal(myFunc(), 'Hello, World!');\n  });\n});\n\n//Updated Test Case\ndescribe('myFunc(text)', function () {\n  it('should return text when one parameter is provided', function() {\n    let text = 'Artillery Test';\n    assert.equal(myFunc(text), 'Artillery Test');\n  });\n\n  it('should return “Hello, Artillery!” when the parameter is \"Artillery\"', function() {\n    assert.equal(myFunc('Artillery'), 'Hello, Artillery!');\n  });\n\n  it('should return responded error message for null parameter', function() {\n    assert.throws(() => { myFunc(null); }, Error, 'Invalid input');\n  });\n});\n"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      }
                    },
                    {
                      "id": "bb027196-5f02-4060-9777-c3ac09c23221",
                      "name": "{test-run-key}",
                      "item": [
                        {
                          "id": "2165669c-5dc4-4e96-bb9c-134a38a394a8",
                          "name": "Update test run(s).",
                          "request": {
                            "name": "Update test run(s).",
                            "description": {
                              "content": "## Update an existing test run.\r\n##### Note: Any values you enter will override existing values in the test run.\r\n            \r\n#### Body fields:\r\n* **testCategory** _(optional)_: The test run category of the test run (\"Functional\" or \"NonFunctional\").\r\n* **executedBy** _(optional)_: the username or email which the test run is executed by.\r\n* **assignee** _(optional)_: the username or email which the test run will be assigned to.\r\n* **priority** _(optional)_: priority of the test run (\"Highes\",\"Low\",etc..).\r\n* **status** _(optional)_: the status of the test run. Status of test runs is defined in JIRA under the admin page. Mandatory field.\r\n* **plannedStartDate** _(optional)_: the test run planned start date.\r\n* **plannedEndDate** _(optional)_: the test run planned end date.\r\n* **cycleId** _(optional)_: specify the cycle Id which the test runs will be under.\r\n* **folderPath** _(optional)_: Specify the folder path where you want to move the test run. A path is a string of concatenated parts separated by a slash \"/\".  If you don't specify a folder path, the test run will be under the cycle.\r\n* **components** _(optional)_: the test runs components.\r\n* **labels** _(optional)_: the test runs labels.\r\n* **automation** _(optional)_: the automation content of the test run.\r\nIn case TestType is Manual, Automation will be ignore (Manual test run can't contain automation content).\r\n    * **name** _(optional)_: the name of automation tool.\r\n    * **id** _(optional)_: the id of the test run in the automation tool.\r\n    * **content** _(mandatory)_: the test run automation content.\r\n    * **result** _(optional)_: the test run automation result.\r\n* **steps** _(optional)_: list of steps of the test run.\r\nIn case TestType is Automated, Steps will be ignore (Automated test run can't contain steps).\r\n    * **status** _(mandatory)_: the status of the test run step.\r\n    * **actualResult** _(optional)_: the actual result of the steps.\r\n    * **comment** _(optional)_: the test run step's comment.\r\n    * **data** _(optional)_: the test run step's data.\r\n    * **description** _(optional)_: the test run step's description.\r\n    * **expectedResult** _(optional)_: the test run step's expectedResult.\r\n    * **fields** _(optional)_: list of fields of the test run.\r\n    In case the field is List type (like Environments) allowedValueName must be provided, otherwise (like execution timer) 'value' must be provided.\r\n        * **schemeName** _(mandatory)_: the scheme name of the field (for example Execution Timer or Environments).\r\n        * **allowedValueName** _(optional)_: the allowed value of the scheme (for example Development).\r\n        * **value** _(optional)_: the value of the scheme (for example 130).",
                              "type": "text/plain"
                            },
                            "url": {
                              "path": [
                                "v1",
                                "projects",
                                ":project-key",
                                "test-runs",
                                ":test-run-key"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [],
                              "variable": [
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "{{test-run-key}}",
                                  "key": "test-run-key",
                                  "description": "(Required) Test Run Key."
                                },
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "{{project-key}}",
                                  "key": "project-key",
                                  "description": "(Required) "
                                }
                              ]
                            },
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "method": "PUT",
                            "auth": {
                              "type": "apikey",
                              "apikey": [
                                {
                                  "key": "key",
                                  "value": "Authorization"
                                },
                                {
                                  "key": "value",
                                  "value": "{{apiKey}}"
                                },
                                {
                                  "key": "in",
                                  "value": "header"
                                }
                              ]
                            },
                            "body": {
                              "mode": "raw",
                              "raw": "{\n    \"testCategory\": \"{{testCategory}}\",\n    \"assignee\": \"{{assignee}}\",\n    \"executedBy\": \"{{executedBy}}\",\n    \"plannedStartDate\": \"{{plannedStartDate}}\",\n    \"plannedEndDate\": \"{{plannedEndDate}}\",\n    \"priority\": \"{{priority}}\",\n    \"status\": \"{{status}}\",\n    \"cycleId\": \"{{cycleId}}\",\n    \"folderPath\": \"{{folderPath}}\",\n    \"components\": [\n        \"{{components}}\"\n    ],\n    \"labels\": [\n        \"{{labels}}\"\n    ],\n    \"fields\": [\n        \"{{fields}}\"\n    ],\n    \"steps\": [\n        \"{{steps}}\"\n    ],\n    \"automation\": {\n        \"name\": \"{{name}}\",\n        \"id\": \"{{id}}\",\n        \"content\": \"{{content}}\",\n        \"result\": \"{{result}}\"\n    }\n}",
                              "options": {
                                "raw": {
                                  "language": "json"
                                }
                              }
                            }
                          },
                          "response": [
                            {
                              "id": "2b65c7a0-a267-46e4-af4c-dea778ac9a49",
                              "name": "`Invalid parameters`.",
                              "originalRequest": {
                                "url": {
                                  "path": [
                                    "v1",
                                    "projects",
                                    ":project-key",
                                    "test-runs",
                                    ":test-run-key"
                                  ],
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "query": [],
                                  "variable": [
                                    {
                                      "disabled": false,
                                      "type": "any",
                                      "value": "{{test-run-key}}",
                                      "key": "test-run-key",
                                      "description": "(Required) Test Run Key."
                                    },
                                    {
                                      "disabled": false,
                                      "type": "any",
                                      "value": "{{project-key}}",
                                      "key": "project-key",
                                      "description": "(Required) "
                                    }
                                  ]
                                },
                                "header": [
                                  {
                                    "description": {
                                      "content": "Added as a part of security scheme: apikey",
                                      "type": "text/plain"
                                    },
                                    "key": "Authorization",
                                    "value": "{{Authorization}}"
                                  },
                                  {
                                    "key": "Accept",
                                    "value": "application/json"
                                  }
                                ],
                                "method": "PUT",
                                "body": {
                                  "mode": "raw",
                                  "raw": "{\n    \"testCategory\": \"{{testCategory}}\",\n    \"assignee\": \"{{assignee}}\",\n    \"executedBy\": \"{{executedBy}}\",\n    \"plannedStartDate\": \"{{plannedStartDate}}\",\n    \"plannedEndDate\": \"{{plannedEndDate}}\",\n    \"priority\": \"{{priority}}\",\n    \"status\": \"{{status}}\",\n    \"cycleId\": \"{{cycleId}}\",\n    \"folderPath\": \"{{folderPath}}\",\n    \"components\": [\n        \"{{components}}\"\n    ],\n    \"labels\": [\n        \"{{labels}}\"\n    ],\n    \"steps\": [\n        \"{{steps}}\"\n    ],\n    \"automation\": {\n        \"name\": \"{{name}}\",\n        \"id\": \"{{id}}\",\n        \"content\": \"{{content}}\"\n    }\n}",
                                  "options": {
                                    "raw": {
                                      "language": "json"
                                    }
                                  }
                                }
                              },
                              "status": "Bad Request",
                              "code": 400,
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": "{\n  \"message\": \"bad data\"\n}",
                              "cookie": [],
                              "_postman_previewlanguage": "json"
                            },
                            {
                              "id": "1a58789f-44e4-47d4-97c6-cead8e0339fd",
                              "name": "Unauthorized",
                              "originalRequest": {
                                "url": {
                                  "path": [
                                    "v1",
                                    "projects",
                                    ":project-key",
                                    "test-runs",
                                    ":test-run-key"
                                  ],
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "query": [],
                                  "variable": [
                                    {
                                      "disabled": false,
                                      "type": "any",
                                      "value": "{{test-run-key}}",
                                      "key": "test-run-key",
                                      "description": "(Required) Test Run Key."
                                    },
                                    {
                                      "disabled": false,
                                      "type": "any",
                                      "value": "{{project-key}}",
                                      "key": "project-key",
                                      "description": "(Required) "
                                    }
                                  ]
                                },
                                "header": [
                                  {
                                    "description": {
                                      "content": "Added as a part of security scheme: apikey",
                                      "type": "text/plain"
                                    },
                                    "key": "Authorization",
                                    "value": "{{Authorization}}"
                                  },
                                  {
                                    "key": "Accept",
                                    "value": "application/json"
                                  }
                                ],
                                "method": "PUT",
                                "body": {
                                  "mode": "raw",
                                  "raw": "{\n    \"testCategory\": \"{{testCategory}}\",\n    \"assignee\": \"{{assignee}}\",\n    \"executedBy\": \"{{executedBy}}\",\n    \"plannedStartDate\": \"{{plannedStartDate}}\",\n    \"plannedEndDate\": \"{{plannedEndDate}}\",\n    \"priority\": \"{{priority}}\",\n    \"status\": \"{{status}}\",\n    \"cycleId\": \"{{cycleId}}\",\n    \"folderPath\": \"{{folderPath}}\",\n    \"components\": [\n        \"{{components}}\"\n    ],\n    \"labels\": [\n        \"{{labels}}\"\n    ],\n    \"steps\": [\n        \"{{steps}}\"\n    ],\n    \"automation\": {\n        \"name\": \"{{name}}\",\n        \"id\": \"{{id}}\",\n        \"content\": \"{{content}}\"\n    }\n}",
                                  "options": {
                                    "raw": {
                                      "language": "json"
                                    }
                                  }
                                }
                              },
                              "status": "Unauthorized",
                              "code": 401,
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": "{\n  \"message\": \"unauthorized\"\n}",
                              "cookie": [],
                              "_postman_previewlanguage": "json"
                            },
                            {
                              "id": "fcb2b770-18b4-47cd-ae4e-96cbd4d05eaf",
                              "name": "`Not Found`.",
                              "originalRequest": {
                                "url": {
                                  "path": [
                                    "v1",
                                    "projects",
                                    ":project-key",
                                    "test-runs",
                                    ":test-run-key"
                                  ],
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "query": [],
                                  "variable": [
                                    {
                                      "disabled": false,
                                      "type": "any",
                                      "value": "{{test-run-key}}",
                                      "key": "test-run-key",
                                      "description": "(Required) Test Run Key."
                                    },
                                    {
                                      "disabled": false,
                                      "type": "any",
                                      "value": "{{project-key}}",
                                      "key": "project-key",
                                      "description": "(Required) "
                                    }
                                  ]
                                },
                                "header": [
                                  {
                                    "description": {
                                      "content": "Added as a part of security scheme: apikey",
                                      "type": "text/plain"
                                    },
                                    "key": "Authorization",
                                    "value": "{{Authorization}}"
                                  },
                                  {
                                    "key": "Accept",
                                    "value": "application/json"
                                  }
                                ],
                                "method": "PUT",
                                "body": {
                                  "mode": "raw",
                                  "raw": "{\n    \"testCategory\": \"{{testCategory}}\",\n    \"assignee\": \"{{assignee}}\",\n    \"executedBy\": \"{{executedBy}}\",\n    \"plannedStartDate\": \"{{plannedStartDate}}\",\n    \"plannedEndDate\": \"{{plannedEndDate}}\",\n    \"priority\": \"{{priority}}\",\n    \"status\": \"{{status}}\",\n    \"cycleId\": \"{{cycleId}}\",\n    \"folderPath\": \"{{folderPath}}\",\n    \"components\": [\n        \"{{components}}\"\n    ],\n    \"labels\": [\n        \"{{labels}}\"\n    ],\n    \"steps\": [\n        \"{{steps}}\"\n    ],\n    \"automation\": {\n        \"name\": \"{{name}}\",\n        \"id\": \"{{id}}\",\n        \"content\": \"{{content}}\"\n    }\n}",
                                  "options": {
                                    "raw": {
                                      "language": "json"
                                    }
                                  }
                                }
                              },
                              "status": "Not Found",
                              "code": 404,
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": "{\n  \"message\": \"not found\"\n}",
                              "cookie": [],
                              "_postman_previewlanguage": "json"
                            }
                          ],
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "exec": [
                                  "//Import necessary dependencies\nconst assert = require('chai').assert;\nconst myFunc = require('../src/myFunc.js');\n\n//Existing Test Case\ndescribe('myFunc()', function () {\n  it('should return “Hello, World!” when no parameters are provided', function() {\n    assert.equal(myFunc(), 'Hello, World!');\n  });\n});\n\n//Updated Test Case\ndescribe('myFunc(text)', function () {\n  it('should return text when one parameter is provided', function() {\n    let text = 'Artillery Test';\n    assert.equal(myFunc(text), 'Artillery Test');\n  });\n\n  it('should return “Hello, Artillery!” when the parameter is \"Artillery\"', function() {\n    assert.equal(myFunc('Artillery'), 'Hello, Artillery!');\n  });\n\n  it('should return responded error message for null parameter', function() {\n    assert.throws(() => { myFunc(null); }, Error, 'Invalid input');\n  });\n});\n"
                                ],
                                "type": "text/javascript"
                              }
                            }
                          ],
                          "protocolProfileBehavior": {
                            "disableBodyPruning": true
                          }
                        },
                        null,
                        {
                          "id": "d632e7ad-c7fc-4a3e-9142-8eb10f8bcab5",
                          "name": "attachments",
                          "item": [
                            {
                              "id": "1540e1ba-9d49-46fa-874a-2f035978845c",
                              "name": "Get attachment of a test run.",
                              "request": {
                                "name": "Get attachment of a test run.",
                                "description": {},
                                "url": {
                                  "path": [
                                    "v1",
                                    "projects",
                                    ":project-key",
                                    "test-runs",
                                    ":test-run-key",
                                    "attachments"
                                  ],
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "query": [
                                    {
                                      "disabled": false,
                                      "key": "limit",
                                      "value": "{{limit}}",
                                      "description": "Numeric value that determines that maximum N results will be returned"
                                    },
                                    {
                                      "disabled": false,
                                      "key": "offset",
                                      "value": "{{offset}}",
                                      "description": "Numeric value that determines that the result list will start from result #N (zero based)"
                                    }
                                  ],
                                  "variable": [
                                    {
                                      "disabled": false,
                                      "type": "any",
                                      "value": "{{test-run-key}}",
                                      "key": "test-run-key",
                                      "description": "(Required) Test Run Key."
                                    },
                                    {
                                      "disabled": false,
                                      "type": "any",
                                      "value": "{{project-key}}",
                                      "key": "project-key",
                                      "description": "(Required) "
                                    }
                                  ]
                                },
                                "header": [
                                  {
                                    "key": "Accept",
                                    "value": "application/json"
                                  }
                                ],
                                "method": "GET",
                                "auth": {
                                  "type": "apikey",
                                  "apikey": [
                                    {
                                      "key": "key",
                                      "value": "Authorization"
                                    },
                                    {
                                      "key": "value",
                                      "value": "{{apiKey}}"
                                    },
                                    {
                                      "key": "in",
                                      "value": "header"
                                    }
                                  ]
                                }
                              },
                              "response": [
                                {
                                  "id": "e212ef64-12f6-4894-8c7c-076e6a05abd0",
                                  "name": "`Invalid parameters.",
                                  "originalRequest": {
                                    "url": {
                                      "path": [
                                        "v1",
                                        "projects",
                                        ":project-key",
                                        "test-runs",
                                        ":test-run-key",
                                        "attachments"
                                      ],
                                      "host": [
                                        "{{baseUrl}}"
                                      ],
                                      "query": [
                                        {
                                          "key": "limit",
                                          "value": "{{limit}}"
                                        },
                                        {
                                          "key": "offset",
                                          "value": "{{offset}}"
                                        }
                                      ],
                                      "variable": [
                                        {
                                          "disabled": false,
                                          "type": "any",
                                          "value": "{{test-run-key}}",
                                          "key": "test-run-key",
                                          "description": "(Required) Test Run Key."
                                        },
                                        {
                                          "disabled": false,
                                          "type": "any",
                                          "value": "{{project-key}}",
                                          "key": "project-key",
                                          "description": "(Required) "
                                        }
                                      ]
                                    },
                                    "header": [
                                      {
                                        "description": {
                                          "content": "Added as a part of security scheme: apikey",
                                          "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "{{Authorization}}"
                                      },
                                      {
                                        "key": "Accept",
                                        "value": "application/json"
                                      }
                                    ],
                                    "method": "GET",
                                    "body": {}
                                  },
                                  "status": "Bad Request",
                                  "code": 400,
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                    }
                                  ],
                                  "body": "{\n  \"message\": \"bad data\"\n}",
                                  "cookie": [],
                                  "_postman_previewlanguage": "json"
                                },
                                {
                                  "id": "ce5fd3c2-278a-4594-bca9-8f61dfb804f4",
                                  "name": "`Unauthorized.",
                                  "originalRequest": {
                                    "url": {
                                      "path": [
                                        "v1",
                                        "projects",
                                        ":project-key",
                                        "test-runs",
                                        ":test-run-key",
                                        "attachments"
                                      ],
                                      "host": [
                                        "{{baseUrl}}"
                                      ],
                                      "query": [
                                        {
                                          "key": "limit",
                                          "value": "{{limit}}"
                                        },
                                        {
                                          "key": "offset",
                                          "value": "{{offset}}"
                                        }
                                      ],
                                      "variable": [
                                        {
                                          "disabled": false,
                                          "type": "any",
                                          "value": "{{test-run-key}}",
                                          "key": "test-run-key",
                                          "description": "(Required) Test Run Key."
                                        },
                                        {
                                          "disabled": false,
                                          "type": "any",
                                          "value": "{{project-key}}",
                                          "key": "project-key",
                                          "description": "(Required) "
                                        }
                                      ]
                                    },
                                    "header": [
                                      {
                                        "description": {
                                          "content": "Added as a part of security scheme: apikey",
                                          "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "{{Authorization}}"
                                      },
                                      {
                                        "key": "Accept",
                                        "value": "application/json"
                                      }
                                    ],
                                    "method": "GET",
                                    "body": {}
                                  },
                                  "status": "Unauthorized",
                                  "code": 401,
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                    }
                                  ],
                                  "body": "{\n  \"message\": \"unauthorized\"\n}",
                                  "cookie": [],
                                  "_postman_previewlanguage": "json"
                                },
                                {
                                  "id": "f3248485-8ea5-467d-b87a-9d7b7bb33f6d",
                                  "name": "`Not Found.",
                                  "originalRequest": {
                                    "url": {
                                      "path": [
                                        "v1",
                                        "projects",
                                        ":project-key",
                                        "test-runs",
                                        ":test-run-key",
                                        "attachments"
                                      ],
                                      "host": [
                                        "{{baseUrl}}"
                                      ],
                                      "query": [
                                        {
                                          "key": "limit",
                                          "value": "{{limit}}"
                                        },
                                        {
                                          "key": "offset",
                                          "value": "{{offset}}"
                                        }
                                      ],
                                      "variable": [
                                        {
                                          "disabled": false,
                                          "type": "any",
                                          "value": "{{test-run-key}}",
                                          "key": "test-run-key",
                                          "description": "(Required) Test Run Key."
                                        },
                                        {
                                          "disabled": false,
                                          "type": "any",
                                          "value": "{{project-key}}",
                                          "key": "project-key",
                                          "description": "(Required) "
                                        }
                                      ]
                                    },
                                    "header": [
                                      {
                                        "description": {
                                          "content": "Added as a part of security scheme: apikey",
                                          "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "{{Authorization}}"
                                      },
                                      {
                                        "key": "Accept",
                                        "value": "application/json"
                                      }
                                    ],
                                    "method": "GET",
                                    "body": {}
                                  },
                                  "status": "Not Found",
                                  "code": 404,
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                    }
                                  ],
                                  "body": "{\n  \"message\": \"not found\"\n}",
                                  "cookie": [],
                                  "_postman_previewlanguage": "json"
                                }
                              ],
                              "event": [
                                {
                                  "listen": "test",
                                  "script": {
                                    "exec": [
                                      "//Import necessary dependencies\nconst assert = require('chai').assert;\nconst myFunc = require('../src/myFunc.js');\n\n//Existing Test Case\ndescribe('myFunc()', function () {\n  it('should return “Hello, World!” when no parameters are provided', function() {\n    assert.equal(myFunc(), 'Hello, World!');\n  });\n});\n\n//Updated Test Case\ndescribe('myFunc(text)', function () {\n  it('should return text when one parameter is provided', function() {\n    let text = 'Artillery Test';\n    assert.equal(myFunc(text), 'Artillery Test');\n  });\n\n  it('should return “Hello, Artillery!” when the parameter is \"Artillery\"', function() {\n    assert.equal(myFunc('Artillery'), 'Hello, Artillery!');\n  });\n\n  it('should return responded error message for null parameter', function() {\n    assert.throws(() => { myFunc(null); }, Error, 'Invalid input');\n  });\n});\n"
                                    ],
                                    "type": "text/javascript"
                                  }
                                }
                              ],
                              "protocolProfileBehavior": {
                                "disableBodyPruning": true
                              }
                            },
                            {
                              "id": "32fc2259-2273-4b1e-b26f-7c83a2fe9732",
                              "name": "Upload attachment to a test run.",
                              "request": {
                                "name": "Upload attachment to a test run.",
                                "description": {
                                  "content": "## Initiate the attachment upload process for a test run.\r\n   Max Attachments Size allowed is 50MB (Per attachment).\r\n### After you use this endpoint, you need to do the following:\r\n* Send a PUT request to the S3 link with the attachment as binary data to upload the attachment file with the information received.\r\n* Confirm the upload is finished with the PUT request v1/projects/{project-key}test-runs/attachments/{id}.",
                                  "type": "text/plain"
                                },
                                "url": {
                                  "path": [
                                    "v1",
                                    "projects",
                                    ":project-key",
                                    "test-runs",
                                    ":test-run-key",
                                    "attachments"
                                  ],
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "query": [],
                                  "variable": [
                                    {
                                      "disabled": false,
                                      "type": "any",
                                      "value": "{{test-run-key}}",
                                      "key": "test-run-key",
                                      "description": "(Required) Test Run Key."
                                    },
                                    {
                                      "disabled": false,
                                      "type": "any",
                                      "value": "{{project-key}}",
                                      "key": "project-key",
                                      "description": "(Required) "
                                    }
                                  ]
                                },
                                "header": [
                                  {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                  },
                                  {
                                    "key": "Accept",
                                    "value": "application/json"
                                  }
                                ],
                                "method": "POST",
                                "auth": {
                                  "type": "apikey",
                                  "apikey": [
                                    {
                                      "key": "key",
                                      "value": "Authorization"
                                    },
                                    {
                                      "key": "value",
                                      "value": "{{apiKey}}"
                                    },
                                    {
                                      "key": "in",
                                      "value": "header"
                                    }
                                  ]
                                },
                                "body": {
                                  "mode": "raw",
                                  "raw": "{\n    \"fileName\": \"{{fileName}}\",\n    \"mimeType\": \"{{mimeType}}\",\n    \"size\": \"{{size}}\"\n}",
                                  "options": {
                                    "raw": {
                                      "language": "json"
                                    }
                                  }
                                }
                              },
                              "response": [
                                {
                                  "id": "b9c9630c-60be-4787-8d45-f1a5ccf2fd28",
                                  "name": "Success",
                                  "originalRequest": {
                                    "url": {
                                      "path": [
                                        "v1",
                                        "projects",
                                        ":project-key",
                                        "test-runs",
                                        ":test-run-key",
                                        "attachments"
                                      ],
                                      "host": [
                                        "{{baseUrl}}"
                                      ],
                                      "query": [],
                                      "variable": [
                                        {
                                          "disabled": false,
                                          "type": "any",
                                          "value": "{{test-run-key}}",
                                          "key": "test-run-key",
                                          "description": "(Required) Test Run Key."
                                        },
                                        {
                                          "disabled": false,
                                          "type": "any",
                                          "value": "{{project-key}}",
                                          "key": "project-key",
                                          "description": "(Required) "
                                        }
                                      ]
                                    },
                                    "header": [
                                      {
                                        "description": {
                                          "content": "Added as a part of security scheme: apikey",
                                          "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "{{Authorization}}"
                                      },
                                      {
                                        "key": "Accept",
                                        "value": "application/json"
                                      }
                                    ],
                                    "method": "POST",
                                    "body": {
                                      "mode": "raw",
                                      "raw": "{\n    \"fileName\": \"{{fileName}}\",\n    \"mimeType\": \"{{mimeType}}\",\n    \"size\": \"{{size}}\"\n}",
                                      "options": {
                                        "raw": {
                                          "language": "json"
                                        }
                                      }
                                    }
                                  },
                                  "status": "OK",
                                  "code": 200,
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                    }
                                  ],
                                  "body": "{\n  \"id\": \"3a3f8b2a-b617-4f0e-b10b-1c1ac9398d01\",\n  \"uploadUrl\": \"S3 link\",\n  \"finishUrl\": \"v1/projects/DE/test-runs/attachments/3a3f8b2a-b617-4f0e-b10b-1c1ac9398d01\"\n}",
                                  "cookie": [],
                                  "_postman_previewlanguage": "json"
                                },
                                {
                                  "id": "e9581f43-7229-4af7-bc5d-55297f921eba",
                                  "name": "`Invalid parameters.",
                                  "originalRequest": {
                                    "url": {
                                      "path": [
                                        "v1",
                                        "projects",
                                        ":project-key",
                                        "test-runs",
                                        ":test-run-key",
                                        "attachments"
                                      ],
                                      "host": [
                                        "{{baseUrl}}"
                                      ],
                                      "query": [],
                                      "variable": [
                                        {
                                          "disabled": false,
                                          "type": "any",
                                          "value": "{{test-run-key}}",
                                          "key": "test-run-key",
                                          "description": "(Required) Test Run Key."
                                        },
                                        {
                                          "disabled": false,
                                          "type": "any",
                                          "value": "{{project-key}}",
                                          "key": "project-key",
                                          "description": "(Required) "
                                        }
                                      ]
                                    },
                                    "header": [
                                      {
                                        "description": {
                                          "content": "Added as a part of security scheme: apikey",
                                          "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "{{Authorization}}"
                                      },
                                      {
                                        "key": "Accept",
                                        "value": "application/json"
                                      }
                                    ],
                                    "method": "POST",
                                    "body": {
                                      "mode": "raw",
                                      "raw": "{\n    \"fileName\": \"{{fileName}}\",\n    \"mimeType\": \"{{mimeType}}\",\n    \"size\": \"{{size}}\"\n}",
                                      "options": {
                                        "raw": {
                                          "language": "json"
                                        }
                                      }
                                    }
                                  },
                                  "status": "Bad Request",
                                  "code": 400,
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                    }
                                  ],
                                  "body": "{\n  \"message\": \"bad data\"\n}",
                                  "cookie": [],
                                  "_postman_previewlanguage": "json"
                                },
                                {
                                  "id": "40f3db94-98fa-466a-8af5-b41b9a54afb7",
                                  "name": "`Unauthorized.",
                                  "originalRequest": {
                                    "url": {
                                      "path": [
                                        "v1",
                                        "projects",
                                        ":project-key",
                                        "test-runs",
                                        ":test-run-key",
                                        "attachments"
                                      ],
                                      "host": [
                                        "{{baseUrl}}"
                                      ],
                                      "query": [],
                                      "variable": [
                                        {
                                          "disabled": false,
                                          "type": "any",
                                          "value": "{{test-run-key}}",
                                          "key": "test-run-key",
                                          "description": "(Required) Test Run Key."
                                        },
                                        {
                                          "disabled": false,
                                          "type": "any",
                                          "value": "{{project-key}}",
                                          "key": "project-key",
                                          "description": "(Required) "
                                        }
                                      ]
                                    },
                                    "header": [
                                      {
                                        "description": {
                                          "content": "Added as a part of security scheme: apikey",
                                          "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "{{Authorization}}"
                                      },
                                      {
                                        "key": "Accept",
                                        "value": "application/json"
                                      }
                                    ],
                                    "method": "POST",
                                    "body": {
                                      "mode": "raw",
                                      "raw": "{\n    \"fileName\": \"{{fileName}}\",\n    \"mimeType\": \"{{mimeType}}\",\n    \"size\": \"{{size}}\"\n}",
                                      "options": {
                                        "raw": {
                                          "language": "json"
                                        }
                                      }
                                    }
                                  },
                                  "status": "Unauthorized",
                                  "code": 401,
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                    }
                                  ],
                                  "body": "{\n  \"message\": \"unauthorized\"\n}",
                                  "cookie": [],
                                  "_postman_previewlanguage": "json"
                                },
                                {
                                  "id": "f5b3180d-c93c-43d4-8750-296674436b5c",
                                  "name": "`Not Found.",
                                  "originalRequest": {
                                    "url": {
                                      "path": [
                                        "v1",
                                        "projects",
                                        ":project-key",
                                        "test-runs",
                                        ":test-run-key",
                                        "attachments"
                                      ],
                                      "host": [
                                        "{{baseUrl}}"
                                      ],
                                      "query": [],
                                      "variable": [
                                        {
                                          "disabled": false,
                                          "type": "any",
                                          "value": "{{test-run-key}}",
                                          "key": "test-run-key",
                                          "description": "(Required) Test Run Key."
                                        },
                                        {
                                          "disabled": false,
                                          "type": "any",
                                          "value": "{{project-key}}",
                                          "key": "project-key",
                                          "description": "(Required) "
                                        }
                                      ]
                                    },
                                    "header": [
                                      {
                                        "description": {
                                          "content": "Added as a part of security scheme: apikey",
                                          "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "{{Authorization}}"
                                      },
                                      {
                                        "key": "Accept",
                                        "value": "application/json"
                                      }
                                    ],
                                    "method": "POST",
                                    "body": {
                                      "mode": "raw",
                                      "raw": "{\n    \"fileName\": \"{{fileName}}\",\n    \"mimeType\": \"{{mimeType}}\",\n    \"size\": \"{{size}}\"\n}",
                                      "options": {
                                        "raw": {
                                          "language": "json"
                                        }
                                      }
                                    }
                                  },
                                  "status": "Not Found",
                                  "code": 404,
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                    }
                                  ],
                                  "body": "{\n  \"message\": \"not found\"\n}",
                                  "cookie": [],
                                  "_postman_previewlanguage": "json"
                                }
                              ],
                              "event": [
                                {
                                  "listen": "test",
                                  "script": {
                                    "exec": [
                                      "//Import necessary dependencies\nconst assert = require('chai').assert;\nconst myFunc = require('../src/myFunc.js');\n\n//Existing Test Case\ndescribe('myFunc()', function () {\n  it('should return “Hello, World!” when no parameters are provided', function() {\n    assert.equal(myFunc(), 'Hello, World!');\n  });\n});\n\n//Updated Test Case\ndescribe('myFunc(text)', function () {\n  it('should return text when one parameter is provided', function() {\n    let text = 'Artillery Test';\n    assert.equal(myFunc(text), 'Artillery Test');\n  });\n\n  it('should return “Hello, Artillery!” when the parameter is \"Artillery\"', function() {\n    assert.equal(myFunc('Artillery'), 'Hello, Artillery!');\n  });\n\n  it('should return responded error message for null parameter', function() {\n    assert.throws(() => { myFunc(null); }, Error, 'Invalid input');\n  });\n});\n"
                                    ],
                                    "type": "text/javascript"
                                  }
                                }
                              ],
                              "protocolProfileBehavior": {
                                "disableBodyPruning": true
                              }
                            }
                          ],
                          "event": []
                        },
                        {
                          "id": "15953329-dd0b-4c0d-8e31-adf61b776a6f",
                          "name": "Upload attachment to a test run step.",
                          "request": {
                            "name": "Upload attachment to a test run step.",
                            "description": {
                              "content": "## Initiate the attachment upload process for a test run step.\r\n   Max Attachments Size allowed is 50MB (Per attachment).\r\n### After you use this endpoint, you need to do the following:\r\n* Send a PUT request to the S3 link with the attachment as binary data to upload the attachment file with the information received.\r\n* Confirm the upload is finished with the PUT request v1/projects/{project-key}test-runs/attachments/{id}.",
                              "type": "text/plain"
                            },
                            "url": {
                              "path": [
                                "v1",
                                "projects",
                                ":project-key",
                                "test-runs",
                                ":test-run-key",
                                "steps",
                                ":step-number",
                                "attachments"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [],
                              "variable": [
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "{{test-run-key}}",
                                  "key": "test-run-key",
                                  "description": "(Required) Test Run Key."
                                },
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "{{step-number}}",
                                  "key": "step-number",
                                  "description": "(Required) Step index."
                                },
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "{{project-key}}",
                                  "key": "project-key",
                                  "description": "(Required) "
                                }
                              ]
                            },
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "method": "POST",
                            "auth": {
                              "type": "apikey",
                              "apikey": [
                                {
                                  "key": "key",
                                  "value": "Authorization"
                                },
                                {
                                  "key": "value",
                                  "value": "{{apiKey}}"
                                },
                                {
                                  "key": "in",
                                  "value": "header"
                                }
                              ]
                            },
                            "body": {
                              "mode": "raw",
                              "raw": "{\n    \"fileName\": \"{{fileName}}\",\n    \"mimeType\": \"{{mimeType}}\",\n    \"size\": \"{{size}}\"\n}",
                              "options": {
                                "raw": {
                                  "language": "json"
                                }
                              }
                            }
                          },
                          "response": [
                            {
                              "id": "e5456c03-5191-47e1-8dd2-b26a00259ce4",
                              "name": "Success",
                              "originalRequest": {
                                "url": {
                                  "path": [
                                    "v1",
                                    "projects",
                                    ":project-key",
                                    "test-runs",
                                    ":test-run-key",
                                    "steps",
                                    ":step-number",
                                    "attachments"
                                  ],
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "query": [],
                                  "variable": [
                                    {
                                      "disabled": false,
                                      "type": "any",
                                      "value": "{{test-run-key}}",
                                      "key": "test-run-key",
                                      "description": "(Required) Test Run Key."
                                    },
                                    {
                                      "disabled": false,
                                      "type": "any",
                                      "value": "{{step-number}}",
                                      "key": "step-number",
                                      "description": "(Required) Step index."
                                    },
                                    {
                                      "disabled": false,
                                      "type": "any",
                                      "value": "{{project-key}}",
                                      "key": "project-key",
                                      "description": "(Required) "
                                    }
                                  ]
                                },
                                "header": [
                                  {
                                    "description": {
                                      "content": "Added as a part of security scheme: apikey",
                                      "type": "text/plain"
                                    },
                                    "key": "Authorization",
                                    "value": "{{Authorization}}"
                                  },
                                  {
                                    "key": "Accept",
                                    "value": "application/json"
                                  }
                                ],
                                "method": "POST",
                                "body": {
                                  "mode": "raw",
                                  "raw": "{\n    \"fileName\": \"{{fileName}}\",\n    \"mimeType\": \"{{mimeType}}\",\n    \"size\": \"{{size}}\"\n}",
                                  "options": {
                                    "raw": {
                                      "language": "json"
                                    }
                                  }
                                }
                              },
                              "status": "OK",
                              "code": 200,
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": "{\n  \"id\": \"f20cb974-d65c-49cb-adfe-6c52b47ab45a\",\n  \"uploadUrl\": \"S3 link\",\n  \"finishUrl\": \"v1/projects/DE/test-runs/attachments/f20cb974-d65c-49cb-adfe-6c52b47ab45a\"\n}",
                              "cookie": [],
                              "_postman_previewlanguage": "json"
                            },
                            {
                              "id": "d250dbfa-462e-4e3c-a8f5-22fcf3920f01",
                              "name": "`Invalid parameters.",
                              "originalRequest": {
                                "url": {
                                  "path": [
                                    "v1",
                                    "projects",
                                    ":project-key",
                                    "test-runs",
                                    ":test-run-key",
                                    "steps",
                                    ":step-number",
                                    "attachments"
                                  ],
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "query": [],
                                  "variable": [
                                    {
                                      "disabled": false,
                                      "type": "any",
                                      "value": "{{test-run-key}}",
                                      "key": "test-run-key",
                                      "description": "(Required) Test Run Key."
                                    },
                                    {
                                      "disabled": false,
                                      "type": "any",
                                      "value": "{{step-number}}",
                                      "key": "step-number",
                                      "description": "(Required) Step index."
                                    },
                                    {
                                      "disabled": false,
                                      "type": "any",
                                      "value": "{{project-key}}",
                                      "key": "project-key",
                                      "description": "(Required) "
                                    }
                                  ]
                                },
                                "header": [
                                  {
                                    "description": {
                                      "content": "Added as a part of security scheme: apikey",
                                      "type": "text/plain"
                                    },
                                    "key": "Authorization",
                                    "value": "{{Authorization}}"
                                  },
                                  {
                                    "key": "Accept",
                                    "value": "application/json"
                                  }
                                ],
                                "method": "POST",
                                "body": {
                                  "mode": "raw",
                                  "raw": "{\n    \"fileName\": \"{{fileName}}\",\n    \"mimeType\": \"{{mimeType}}\",\n    \"size\": \"{{size}}\"\n}",
                                  "options": {
                                    "raw": {
                                      "language": "json"
                                    }
                                  }
                                }
                              },
                              "status": "Bad Request",
                              "code": 400,
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": "{\n  \"message\": \"bad data\"\n}",
                              "cookie": [],
                              "_postman_previewlanguage": "json"
                            },
                            {
                              "id": "9bbea86c-2a64-4011-af9b-6ef0ba9ae8a0",
                              "name": "`Unauthorized.",
                              "originalRequest": {
                                "url": {
                                  "path": [
                                    "v1",
                                    "projects",
                                    ":project-key",
                                    "test-runs",
                                    ":test-run-key",
                                    "steps",
                                    ":step-number",
                                    "attachments"
                                  ],
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "query": [],
                                  "variable": [
                                    {
                                      "disabled": false,
                                      "type": "any",
                                      "value": "{{test-run-key}}",
                                      "key": "test-run-key",
                                      "description": "(Required) Test Run Key."
                                    },
                                    {
                                      "disabled": false,
                                      "type": "any",
                                      "value": "{{step-number}}",
                                      "key": "step-number",
                                      "description": "(Required) Step index."
                                    },
                                    {
                                      "disabled": false,
                                      "type": "any",
                                      "value": "{{project-key}}",
                                      "key": "project-key",
                                      "description": "(Required) "
                                    }
                                  ]
                                },
                                "header": [
                                  {
                                    "description": {
                                      "content": "Added as a part of security scheme: apikey",
                                      "type": "text/plain"
                                    },
                                    "key": "Authorization",
                                    "value": "{{Authorization}}"
                                  },
                                  {
                                    "key": "Accept",
                                    "value": "application/json"
                                  }
                                ],
                                "method": "POST",
                                "body": {
                                  "mode": "raw",
                                  "raw": "{\n    \"fileName\": \"{{fileName}}\",\n    \"mimeType\": \"{{mimeType}}\",\n    \"size\": \"{{size}}\"\n}",
                                  "options": {
                                    "raw": {
                                      "language": "json"
                                    }
                                  }
                                }
                              },
                              "status": "Unauthorized",
                              "code": 401,
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": "{\n  \"message\": \"unauthorized\"\n}",
                              "cookie": [],
                              "_postman_previewlanguage": "json"
                            },
                            {
                              "id": "c9eaebec-01db-4b79-8307-a5235d9c1027",
                              "name": "`Not Found.",
                              "originalRequest": {
                                "url": {
                                  "path": [
                                    "v1",
                                    "projects",
                                    ":project-key",
                                    "test-runs",
                                    ":test-run-key",
                                    "steps",
                                    ":step-number",
                                    "attachments"
                                  ],
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "query": [],
                                  "variable": [
                                    {
                                      "disabled": false,
                                      "type": "any",
                                      "value": "{{test-run-key}}",
                                      "key": "test-run-key",
                                      "description": "(Required) Test Run Key."
                                    },
                                    {
                                      "disabled": false,
                                      "type": "any",
                                      "value": "{{step-number}}",
                                      "key": "step-number",
                                      "description": "(Required) Step index."
                                    },
                                    {
                                      "disabled": false,
                                      "type": "any",
                                      "value": "{{project-key}}",
                                      "key": "project-key",
                                      "description": "(Required) "
                                    }
                                  ]
                                },
                                "header": [
                                  {
                                    "description": {
                                      "content": "Added as a part of security scheme: apikey",
                                      "type": "text/plain"
                                    },
                                    "key": "Authorization",
                                    "value": "{{Authorization}}"
                                  },
                                  {
                                    "key": "Accept",
                                    "value": "application/json"
                                  }
                                ],
                                "method": "POST",
                                "body": {
                                  "mode": "raw",
                                  "raw": "{\n    \"fileName\": \"{{fileName}}\",\n    \"mimeType\": \"{{mimeType}}\",\n    \"size\": \"{{size}}\"\n}",
                                  "options": {
                                    "raw": {
                                      "language": "json"
                                    }
                                  }
                                }
                              },
                              "status": "Not Found",
                              "code": 404,
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": "{\n  \"message\": \"not found\"\n}",
                              "cookie": [],
                              "_postman_previewlanguage": "json"
                            }
                          ],
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "exec": [
                                  "//Import necessary dependencies\nconst assert = require('chai').assert;\nconst myFunc = require('../src/myFunc.js');\n\n//Existing Test Case\ndescribe('myFunc()', function () {\n  it('should return “Hello, World!” when no parameters are provided', function() {\n    assert.equal(myFunc(), 'Hello, World!');\n  });\n});\n\n//Updated Test Case\ndescribe('myFunc(text)', function () {\n  it('should return text when one parameter is provided', function() {\n    let text = 'Artillery Test';\n    assert.equal(myFunc(text), 'Artillery Test');\n  });\n\n  it('should return “Hello, Artillery!” when the parameter is \"Artillery\"', function() {\n    assert.equal(myFunc('Artillery'), 'Hello, Artillery!');\n  });\n\n  it('should return responded error message for null parameter', function() {\n    assert.throws(() => { myFunc(null); }, Error, 'Invalid input');\n  });\n});\n"
                                ],
                                "type": "text/javascript"
                              }
                            }
                          ],
                          "protocolProfileBehavior": {
                            "disableBodyPruning": true
                          }
                        },
                        {
                          "id": "47f1f0d1-e1f0-4fb9-8af1-977fcca47892",
                          "name": "defects",
                          "item": [
                            {
                              "id": "ef316823-9382-4d3b-bc19-eed415752bf9",
                              "name": "Create defects and link to test run.",
                              "request": {
                                "name": "Create defects and link to test run.",
                                "description": {
                                  "content": "## Create defects and link to test run.\r\n##### Note: In case issue type won't be provided, default value will be \"Bug\" issue type.\r\n            \r\n#### Query parameters:\r\n* **stepIndex** _(optional)_: if step index will be provided, the defect will be linked to the step.\r\n            \r\n#### Body fields:\r\n* **summary** _(mandatory)_: the defect summary.\r\n* **description** _(optional)_: the defect description.\r\n* **issueType** _(optional)_: the defect issue type (for example: Task, Bug, etc..).",
                                  "type": "text/plain"
                                },
                                "url": {
                                  "path": [
                                    "v1",
                                    "projects",
                                    ":project-key",
                                    "test-runs",
                                    ":test-run-key",
                                    "defects"
                                  ],
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "query": [
                                    {
                                      "disabled": false,
                                      "key": "stepIndex",
                                      "value": "{{stepIndex}}",
                                      "description": "stepIndex ."
                                    }
                                  ],
                                  "variable": [
                                    {
                                      "disabled": false,
                                      "type": "any",
                                      "value": "{{test-run-key}}",
                                      "key": "test-run-key",
                                      "description": "(Required) Test Run Key."
                                    },
                                    {
                                      "disabled": false,
                                      "type": "any",
                                      "value": "{{project-key}}",
                                      "key": "project-key",
                                      "description": "(Required) "
                                    }
                                  ]
                                },
                                "header": [
                                  {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                  },
                                  {
                                    "key": "Accept",
                                    "value": "application/json"
                                  }
                                ],
                                "method": "POST",
                                "auth": {
                                  "type": "apikey",
                                  "apikey": [
                                    {
                                      "key": "key",
                                      "value": "Authorization"
                                    },
                                    {
                                      "key": "value",
                                      "value": "{{apiKey}}"
                                    },
                                    {
                                      "key": "in",
                                      "value": "header"
                                    }
                                  ]
                                },
                                "body": {
                                  "mode": "raw",
                                  "raw": "[\n    {\n        \"summary\": \"{{summary}}\",\n        \"description\": \"{{description}}\",\n        \"issueType\": \"{{issueType}}\"\n    },\n    {\n        \"summary\": \"{{1.summary}}\",\n        \"description\": \"{{1.description}}\",\n        \"issueType\": \"{{1.issueType}}\"\n    }\n]",
                                  "options": {
                                    "raw": {
                                      "language": "json"
                                    }
                                  }
                                }
                              },
                              "response": [
                                {
                                  "id": "be05dd7b-8c16-4eff-b0fb-cfb8159783c8",
                                  "name": "Success",
                                  "originalRequest": {
                                    "url": {
                                      "path": [
                                        "v1",
                                        "projects",
                                        ":project-key",
                                        "test-runs",
                                        ":test-run-key",
                                        "defects"
                                      ],
                                      "host": [
                                        "{{baseUrl}}"
                                      ],
                                      "query": [
                                        {
                                          "key": "stepIndex",
                                          "value": "{{stepIndex}}"
                                        }
                                      ],
                                      "variable": [
                                        {
                                          "disabled": false,
                                          "type": "any",
                                          "value": "{{test-run-key}}",
                                          "key": "test-run-key",
                                          "description": "(Required) Test Run Key."
                                        },
                                        {
                                          "disabled": false,
                                          "type": "any",
                                          "value": "{{project-key}}",
                                          "key": "project-key",
                                          "description": "(Required) "
                                        }
                                      ]
                                    },
                                    "header": [
                                      {
                                        "description": {
                                          "content": "Added as a part of security scheme: apikey",
                                          "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "{{Authorization}}"
                                      },
                                      {
                                        "key": "Accept",
                                        "value": "application/json"
                                      }
                                    ],
                                    "method": "POST",
                                    "body": {
                                      "mode": "raw",
                                      "raw": "[\n    {\n        \"summary\": \"{{summary}}\",\n        \"description\": \"{{description}}\",\n        \"issueType\": \"{{issueType}}\"\n    },\n    {\n        \"summary\": \"{{1.summary}}\",\n        \"description\": \"{{1.description}}\",\n        \"issueType\": \"{{1.issueType}}\"\n    }\n]",
                                      "options": {
                                        "raw": {
                                          "language": "json"
                                        }
                                      }
                                    }
                                  },
                                  "status": "OK",
                                  "code": 200,
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                    }
                                  ],
                                  "body": "[\n  {\n    \"issueKey\": \"Key-1\",\n    \"jiraIssueId\": \"10001\"\n  },\n  {\n    \"issueKey\": \"Key-2\",\n    \"jiraIssueId\": \"10002\"\n  }\n]",
                                  "cookie": [],
                                  "_postman_previewlanguage": "json"
                                },
                                {
                                  "id": "2110c420-5963-424f-a485-3344576e0fed",
                                  "name": "`Unauthorized`.",
                                  "originalRequest": {
                                    "url": {
                                      "path": [
                                        "v1",
                                        "projects",
                                        ":project-key",
                                        "test-runs",
                                        ":test-run-key",
                                        "defects"
                                      ],
                                      "host": [
                                        "{{baseUrl}}"
                                      ],
                                      "query": [
                                        {
                                          "key": "stepIndex",
                                          "value": "{{stepIndex}}"
                                        }
                                      ],
                                      "variable": [
                                        {
                                          "disabled": false,
                                          "type": "any",
                                          "value": "{{test-run-key}}",
                                          "key": "test-run-key",
                                          "description": "(Required) Test Run Key."
                                        },
                                        {
                                          "disabled": false,
                                          "type": "any",
                                          "value": "{{project-key}}",
                                          "key": "project-key",
                                          "description": "(Required) "
                                        }
                                      ]
                                    },
                                    "header": [
                                      {
                                        "description": {
                                          "content": "Added as a part of security scheme: apikey",
                                          "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "{{Authorization}}"
                                      }
                                    ],
                                    "method": "POST",
                                    "body": {
                                      "mode": "raw",
                                      "raw": "[\n    {\n        \"summary\": \"{{summary}}\",\n        \"description\": \"{{description}}\",\n        \"issueType\": \"{{issueType}}\"\n    },\n    {\n        \"summary\": \"{{1.summary}}\",\n        \"description\": \"{{1.description}}\",\n        \"issueType\": \"{{1.issueType}}\"\n    }\n]",
                                      "options": {
                                        "raw": {
                                          "language": "json"
                                        }
                                      }
                                    }
                                  },
                                  "status": "Unauthorized",
                                  "code": 401,
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "text/plain"
                                    }
                                  ],
                                  "body": "",
                                  "cookie": [],
                                  "_postman_previewlanguage": "text"
                                }
                              ],
                              "event": [
                                {
                                  "listen": "test",
                                  "script": {
                                    "exec": [
                                      "//Import necessary dependencies\nconst assert = require('chai').assert;\nconst myFunc = require('../src/myFunc.js');\n\n//Existing Test Case\ndescribe('myFunc()', function () {\n  it('should return “Hello, World!” when no parameters are provided', function() {\n    assert.equal(myFunc(), 'Hello, World!');\n  });\n});\n\n//Updated Test Case\ndescribe('myFunc(text)', function () {\n  it('should return text when one parameter is provided', function() {\n    let text = 'Artillery Test';\n    assert.equal(myFunc(text), 'Artillery Test');\n  });\n\n  it('should return “Hello, Artillery!” when the parameter is \"Artillery\"', function() {\n    assert.equal(myFunc('Artillery'), 'Hello, Artillery!');\n  });\n\n  it('should return responded error message for null parameter', function() {\n    assert.throws(() => { myFunc(null); }, Error, 'Invalid input');\n  });\n});\n"
                                    ],
                                    "type": "text/javascript"
                                  }
                                }
                              ],
                              "protocolProfileBehavior": {
                                "disableBodyPruning": true
                              }
                            },
                            {
                              "id": "6d86c641-5ac2-40d6-b596-c4c8a79c41e4",
                              "name": "Link Defects to test run.",
                              "request": {
                                "name": "Link Defects to test run.",
                                "description": {
                                  "content": "## Link defects test run.\r\n            \r\n#### Query parameters:\r\n* **stepIndex** _(optional)_: if step index will be provided, the defect will be linked to the step.\r\n            \r\n#### Body fields:\r\n* **issueKey** _(mandatory)_: the issue key.",
                                  "type": "text/plain"
                                },
                                "url": {
                                  "path": [
                                    "v1",
                                    "projects",
                                    ":project-key",
                                    "test-runs",
                                    ":test-run-key",
                                    "defects",
                                    "link"
                                  ],
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "query": [
                                    {
                                      "disabled": false,
                                      "key": "stepIndex",
                                      "value": "{{stepIndex}}",
                                      "description": "stepIndex."
                                    }
                                  ],
                                  "variable": [
                                    {
                                      "disabled": false,
                                      "type": "any",
                                      "value": "{{test-run-key}}",
                                      "key": "test-run-key",
                                      "description": "(Required) testRunKey."
                                    },
                                    {
                                      "disabled": false,
                                      "type": "any",
                                      "value": "{{project-key}}",
                                      "key": "project-key",
                                      "description": "(Required) "
                                    }
                                  ]
                                },
                                "header": [
                                  {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                  },
                                  {
                                    "key": "Accept",
                                    "value": "application/json"
                                  }
                                ],
                                "method": "POST",
                                "auth": {
                                  "type": "apikey",
                                  "apikey": [
                                    {
                                      "key": "key",
                                      "value": "Authorization"
                                    },
                                    {
                                      "key": "value",
                                      "value": "{{apiKey}}"
                                    },
                                    {
                                      "key": "in",
                                      "value": "header"
                                    }
                                  ]
                                },
                                "body": {
                                  "mode": "raw",
                                  "raw": "[\n    {\n        \"issueKey\": \"{{issueKey}}\"\n    },\n    {\n        \"issueKey\": \"{{1.issueKey}}\"\n    }\n]",
                                  "options": {
                                    "raw": {
                                      "language": "json"
                                    }
                                  }
                                }
                              },
                              "response": [
                                {
                                  "id": "771bb887-053b-43f4-a603-fcce3fadd447",
                                  "name": "Success",
                                  "originalRequest": {
                                    "url": {
                                      "path": [
                                        "v1",
                                        "projects",
                                        ":project-key",
                                        "test-runs",
                                        ":test-run-key",
                                        "defects",
                                        "link"
                                      ],
                                      "host": [
                                        "{{baseUrl}}"
                                      ],
                                      "query": [
                                        {
                                          "key": "stepIndex",
                                          "value": "{{stepIndex}}"
                                        }
                                      ],
                                      "variable": [
                                        {
                                          "disabled": false,
                                          "type": "any",
                                          "value": "{{test-run-key}}",
                                          "key": "test-run-key",
                                          "description": "(Required) testRunKey."
                                        },
                                        {
                                          "disabled": false,
                                          "type": "any",
                                          "value": "{{project-key}}",
                                          "key": "project-key",
                                          "description": "(Required) "
                                        }
                                      ]
                                    },
                                    "header": [
                                      {
                                        "description": {
                                          "content": "Added as a part of security scheme: apikey",
                                          "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "{{Authorization}}"
                                      },
                                      {
                                        "key": "Accept",
                                        "value": "application/json"
                                      }
                                    ],
                                    "method": "POST",
                                    "body": {
                                      "mode": "raw",
                                      "raw": "[\n    {\n        \"issueKey\": \"{{issueKey}}\"\n    },\n    {\n        \"issueKey\": \"{{1.issueKey}}\"\n    }\n]",
                                      "options": {
                                        "raw": {
                                          "language": "json"
                                        }
                                      }
                                    }
                                  },
                                  "status": "OK",
                                  "code": 200,
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                    }
                                  ],
                                  "body": "[\n  {\n    \"issueKey\": \"Key-1\",\n    \"jiraIssueId\": \"10001\"\n  },\n  {\n    \"issueKey\": \"Key-2\",\n    \"jiraIssueId\": \"10002\"\n  }\n]",
                                  "cookie": [],
                                  "_postman_previewlanguage": "json"
                                },
                                {
                                  "id": "6b967304-c94c-42ce-8b23-e19f5a3c3efd",
                                  "name": "`Unauthorized`.",
                                  "originalRequest": {
                                    "url": {
                                      "path": [
                                        "v1",
                                        "projects",
                                        ":project-key",
                                        "test-runs",
                                        ":test-run-key",
                                        "defects",
                                        "link"
                                      ],
                                      "host": [
                                        "{{baseUrl}}"
                                      ],
                                      "query": [
                                        {
                                          "key": "stepIndex",
                                          "value": "{{stepIndex}}"
                                        }
                                      ],
                                      "variable": [
                                        {
                                          "disabled": false,
                                          "type": "any",
                                          "value": "{{test-run-key}}",
                                          "key": "test-run-key",
                                          "description": "(Required) testRunKey."
                                        },
                                        {
                                          "disabled": false,
                                          "type": "any",
                                          "value": "{{project-key}}",
                                          "key": "project-key",
                                          "description": "(Required) "
                                        }
                                      ]
                                    },
                                    "header": [
                                      {
                                        "description": {
                                          "content": "Added as a part of security scheme: apikey",
                                          "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "{{Authorization}}"
                                      }
                                    ],
                                    "method": "POST",
                                    "body": {
                                      "mode": "raw",
                                      "raw": "[\n    {\n        \"issueKey\": \"{{issueKey}}\"\n    },\n    {\n        \"issueKey\": \"{{1.issueKey}}\"\n    }\n]",
                                      "options": {
                                        "raw": {
                                          "language": "json"
                                        }
                                      }
                                    }
                                  },
                                  "status": "Unauthorized",
                                  "code": 401,
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "text/plain"
                                    }
                                  ],
                                  "body": "",
                                  "cookie": [],
                                  "_postman_previewlanguage": "text"
                                }
                              ],
                              "event": [
                                {
                                  "listen": "test",
                                  "script": {
                                    "exec": [
                                      "//Import necessary dependencies\nconst assert = require('chai').assert;\nconst myFunc = require('../src/myFunc.js');\n\n//Existing Test Case\ndescribe('myFunc()', function () {\n  it('should return “Hello, World!” when no parameters are provided', function() {\n    assert.equal(myFunc(), 'Hello, World!');\n  });\n});\n\n//Updated Test Case\ndescribe('myFunc(text)', function () {\n  it('should return text when one parameter is provided', function() {\n    let text = 'Artillery Test';\n    assert.equal(myFunc(text), 'Artillery Test');\n  });\n\n  it('should return “Hello, Artillery!” when the parameter is \"Artillery\"', function() {\n    assert.equal(myFunc('Artillery'), 'Hello, Artillery!');\n  });\n\n  it('should return responded error message for null parameter', function() {\n    assert.throws(() => { myFunc(null); }, Error, 'Invalid input');\n  });\n});\n"
                                    ],
                                    "type": "text/javascript"
                                  }
                                }
                              ],
                              "protocolProfileBehavior": {
                                "disableBodyPruning": true
                              }
                            }
                          ],
                          "event": []
                        }
                      ],
                      "event": []
                    },
                    {
                      "id": "7070c5ab-90ac-42d8-b2f4-835a953be6dd",
                      "name": "attachments",
                      "item": [
                        {
                          "id": "f9b0f226-507e-4f29-b9d3-75276160fe5d",
                          "name": "Get attachment link.",
                          "request": {
                            "name": "Get attachment link.",
                            "description": {},
                            "url": {
                              "path": [
                                "v1",
                                "projects",
                                ":project-key",
                                "test-runs",
                                "attachments",
                                ":attachmentId"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [],
                              "variable": [
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "{{attachmentId}}",
                                  "key": "attachmentId",
                                  "description": "(Required) The attachment Id."
                                },
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "{{project-key}}",
                                  "key": "project-key",
                                  "description": "(Required) "
                                }
                              ]
                            },
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "method": "GET",
                            "auth": {
                              "type": "apikey",
                              "apikey": [
                                {
                                  "key": "key",
                                  "value": "Authorization"
                                },
                                {
                                  "key": "value",
                                  "value": "{{apiKey}}"
                                },
                                {
                                  "key": "in",
                                  "value": "header"
                                }
                              ]
                            }
                          },
                          "response": [
                            {
                              "id": "2f8f0b8d-2531-4731-bf0c-b09a30a8f904",
                              "name": "`Invalid parameters.",
                              "originalRequest": {
                                "url": {
                                  "path": [
                                    "v1",
                                    "projects",
                                    ":project-key",
                                    "test-runs",
                                    "attachments",
                                    ":attachmentId"
                                  ],
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "query": [],
                                  "variable": [
                                    {
                                      "disabled": false,
                                      "type": "any",
                                      "value": "{{attachmentId}}",
                                      "key": "attachmentId",
                                      "description": "(Required) The attachment Id."
                                    },
                                    {
                                      "disabled": false,
                                      "type": "any",
                                      "value": "{{project-key}}",
                                      "key": "project-key",
                                      "description": "(Required) "
                                    }
                                  ]
                                },
                                "header": [
                                  {
                                    "description": {
                                      "content": "Added as a part of security scheme: apikey",
                                      "type": "text/plain"
                                    },
                                    "key": "Authorization",
                                    "value": "{{Authorization}}"
                                  },
                                  {
                                    "key": "Accept",
                                    "value": "application/json"
                                  }
                                ],
                                "method": "GET",
                                "body": {}
                              },
                              "status": "Bad Request",
                              "code": 400,
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": "{\n  \"message\": \"bad data\"\n}",
                              "cookie": [],
                              "_postman_previewlanguage": "json"
                            },
                            {
                              "id": "53393b31-f6f2-4cba-af32-292f8934a358",
                              "name": "`Unauthorized.",
                              "originalRequest": {
                                "url": {
                                  "path": [
                                    "v1",
                                    "projects",
                                    ":project-key",
                                    "test-runs",
                                    "attachments",
                                    ":attachmentId"
                                  ],
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "query": [],
                                  "variable": [
                                    {
                                      "disabled": false,
                                      "type": "any",
                                      "value": "{{attachmentId}}",
                                      "key": "attachmentId",
                                      "description": "(Required) The attachment Id."
                                    },
                                    {
                                      "disabled": false,
                                      "type": "any",
                                      "value": "{{project-key}}",
                                      "key": "project-key",
                                      "description": "(Required) "
                                    }
                                  ]
                                },
                                "header": [
                                  {
                                    "description": {
                                      "content": "Added as a part of security scheme: apikey",
                                      "type": "text/plain"
                                    },
                                    "key": "Authorization",
                                    "value": "{{Authorization}}"
                                  },
                                  {
                                    "key": "Accept",
                                    "value": "application/json"
                                  }
                                ],
                                "method": "GET",
                                "body": {}
                              },
                              "status": "Unauthorized",
                              "code": 401,
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": "{\n  \"message\": \"unauthorized\"\n}",
                              "cookie": [],
                              "_postman_previewlanguage": "json"
                            },
                            {
                              "id": "a32cea9a-f740-44a9-9aaa-d177b49d2a74",
                              "name": "`Not Found.",
                              "originalRequest": {
                                "url": {
                                  "path": [
                                    "v1",
                                    "projects",
                                    ":project-key",
                                    "test-runs",
                                    "attachments",
                                    ":attachmentId"
                                  ],
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "query": [],
                                  "variable": [
                                    {
                                      "disabled": false,
                                      "type": "any",
                                      "value": "{{attachmentId}}",
                                      "key": "attachmentId",
                                      "description": "(Required) The attachment Id."
                                    },
                                    {
                                      "disabled": false,
                                      "type": "any",
                                      "value": "{{project-key}}",
                                      "key": "project-key",
                                      "description": "(Required) "
                                    }
                                  ]
                                },
                                "header": [
                                  {
                                    "description": {
                                      "content": "Added as a part of security scheme: apikey",
                                      "type": "text/plain"
                                    },
                                    "key": "Authorization",
                                    "value": "{{Authorization}}"
                                  },
                                  {
                                    "key": "Accept",
                                    "value": "application/json"
                                  }
                                ],
                                "method": "GET",
                                "body": {}
                              },
                              "status": "Not Found",
                              "code": 404,
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": "{\n  \"message\": \"not found\"\n}",
                              "cookie": [],
                              "_postman_previewlanguage": "json"
                            }
                          ],
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "exec": [
                                  "//Import necessary dependencies\nconst assert = require('chai').assert;\nconst myFunc = require('../src/myFunc.js');\n\n//Existing Test Case\ndescribe('myFunc()', function () {\n  it('should return “Hello, World!” when no parameters are provided', function() {\n    assert.equal(myFunc(), 'Hello, World!');\n  });\n});\n\n//Updated Test Case\ndescribe('myFunc(text)', function () {\n  it('should return text when one parameter is provided', function() {\n    let text = 'Artillery Test';\n    assert.equal(myFunc(text), 'Artillery Test');\n  });\n\n  it('should return “Hello, Artillery!” when the parameter is \"Artillery\"', function() {\n    assert.equal(myFunc('Artillery'), 'Hello, Artillery!');\n  });\n\n  it('should return responded error message for null parameter', function() {\n    assert.throws(() => { myFunc(null); }, Error, 'Invalid input');\n  });\n});\n"
                                ],
                                "type": "text/javascript"
                              }
                            }
                          ],
                          "protocolProfileBehavior": {
                            "disableBodyPruning": true
                          }
                        },
                        {
                          "id": "f22b04cf-b308-46e8-9873-042759fba15c",
                          "name": "Query if attachment is uploaded to storage.",
                          "request": {
                            "name": "Query if attachment is uploaded to storage.",
                            "description": {
                              "content": "## Query if the attachment file was successfully uploaded to storage.\r\n            \r\nUse this to confirm the following:\r\n* Upload information was received from **POST** v1/projects/{project-key}/test-runs/{test-run-key}/attachments\r\n* The file successfully uploaded to storage as binary data.",
                              "type": "text/plain"
                            },
                            "url": {
                              "path": [
                                "v1",
                                "projects",
                                ":project-key",
                                "test-runs",
                                "attachments",
                                ":id"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [],
                              "variable": [
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "{{id}}",
                                  "key": "id",
                                  "description": "(Required) Attachment Id."
                                },
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "{{project-key}}",
                                  "key": "project-key",
                                  "description": "(Required) "
                                }
                              ]
                            },
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "method": "PUT",
                            "auth": {
                              "type": "apikey",
                              "apikey": [
                                {
                                  "key": "key",
                                  "value": "Authorization"
                                },
                                {
                                  "key": "value",
                                  "value": "{{apiKey}}"
                                },
                                {
                                  "key": "in",
                                  "value": "header"
                                }
                              ]
                            }
                          },
                          "response": [
                            {
                              "id": "7b0596c2-1cee-4faf-a8ba-5c848a9a2bee",
                              "name": "Success",
                              "originalRequest": {
                                "url": {
                                  "path": [
                                    "v1",
                                    "projects",
                                    ":project-key",
                                    "test-runs",
                                    "attachments",
                                    ":id"
                                  ],
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "query": [],
                                  "variable": [
                                    {
                                      "disabled": false,
                                      "type": "any",
                                      "value": "{{id}}",
                                      "key": "id",
                                      "description": "(Required) Attachment Id."
                                    },
                                    {
                                      "disabled": false,
                                      "type": "any",
                                      "value": "{{project-key}}",
                                      "key": "project-key",
                                      "description": "(Required) "
                                    }
                                  ]
                                },
                                "header": [
                                  {
                                    "description": {
                                      "content": "Added as a part of security scheme: apikey",
                                      "type": "text/plain"
                                    },
                                    "key": "Authorization",
                                    "value": "{{Authorization}}"
                                  }
                                ],
                                "method": "PUT",
                                "body": {}
                              },
                              "status": "OK",
                              "code": 200,
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "text/plain"
                                }
                              ],
                              "body": "",
                              "cookie": [],
                              "_postman_previewlanguage": "text"
                            },
                            {
                              "id": "7e73d0dc-7eba-440e-a91f-c1752233e40a",
                              "name": "`Invalid parameters.",
                              "originalRequest": {
                                "url": {
                                  "path": [
                                    "v1",
                                    "projects",
                                    ":project-key",
                                    "test-runs",
                                    "attachments",
                                    ":id"
                                  ],
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "query": [],
                                  "variable": [
                                    {
                                      "disabled": false,
                                      "type": "any",
                                      "value": "{{id}}",
                                      "key": "id",
                                      "description": "(Required) Attachment Id."
                                    },
                                    {
                                      "disabled": false,
                                      "type": "any",
                                      "value": "{{project-key}}",
                                      "key": "project-key",
                                      "description": "(Required) "
                                    }
                                  ]
                                },
                                "header": [
                                  {
                                    "description": {
                                      "content": "Added as a part of security scheme: apikey",
                                      "type": "text/plain"
                                    },
                                    "key": "Authorization",
                                    "value": "{{Authorization}}"
                                  },
                                  {
                                    "key": "Accept",
                                    "value": "application/json"
                                  }
                                ],
                                "method": "PUT",
                                "body": {}
                              },
                              "status": "Bad Request",
                              "code": 400,
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": "{\n  \"message\": \"bad data\"\n}",
                              "cookie": [],
                              "_postman_previewlanguage": "json"
                            },
                            {
                              "id": "4231bc2b-1923-4494-9b2d-c255dfebe021",
                              "name": "`Unauthorized.",
                              "originalRequest": {
                                "url": {
                                  "path": [
                                    "v1",
                                    "projects",
                                    ":project-key",
                                    "test-runs",
                                    "attachments",
                                    ":id"
                                  ],
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "query": [],
                                  "variable": [
                                    {
                                      "disabled": false,
                                      "type": "any",
                                      "value": "{{id}}",
                                      "key": "id",
                                      "description": "(Required) Attachment Id."
                                    },
                                    {
                                      "disabled": false,
                                      "type": "any",
                                      "value": "{{project-key}}",
                                      "key": "project-key",
                                      "description": "(Required) "
                                    }
                                  ]
                                },
                                "header": [
                                  {
                                    "description": {
                                      "content": "Added as a part of security scheme: apikey",
                                      "type": "text/plain"
                                    },
                                    "key": "Authorization",
                                    "value": "{{Authorization}}"
                                  },
                                  {
                                    "key": "Accept",
                                    "value": "application/json"
                                  }
                                ],
                                "method": "PUT",
                                "body": {}
                              },
                              "status": "Unauthorized",
                              "code": 401,
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": "{\n  \"message\": \"unauthorized\"\n}",
                              "cookie": [],
                              "_postman_previewlanguage": "json"
                            },
                            {
                              "id": "c36b4169-6219-466a-b882-c43299daedfa",
                              "name": "`Not Found.",
                              "originalRequest": {
                                "url": {
                                  "path": [
                                    "v1",
                                    "projects",
                                    ":project-key",
                                    "test-runs",
                                    "attachments",
                                    ":id"
                                  ],
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "query": [],
                                  "variable": [
                                    {
                                      "disabled": false,
                                      "type": "any",
                                      "value": "{{id}}",
                                      "key": "id",
                                      "description": "(Required) Attachment Id."
                                    },
                                    {
                                      "disabled": false,
                                      "type": "any",
                                      "value": "{{project-key}}",
                                      "key": "project-key",
                                      "description": "(Required) "
                                    }
                                  ]
                                },
                                "header": [
                                  {
                                    "description": {
                                      "content": "Added as a part of security scheme: apikey",
                                      "type": "text/plain"
                                    },
                                    "key": "Authorization",
                                    "value": "{{Authorization}}"
                                  },
                                  {
                                    "key": "Accept",
                                    "value": "application/json"
                                  }
                                ],
                                "method": "PUT",
                                "body": {}
                              },
                              "status": "Not Found",
                              "code": 404,
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": "{\n  \"message\": \"not found\"\n}",
                              "cookie": [],
                              "_postman_previewlanguage": "json"
                            }
                          ],
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "exec": [
                                  "//Import necessary dependencies\nconst assert = require('chai').assert;\nconst myFunc = require('../src/myFunc.js');\n\n//Existing Test Case\ndescribe('myFunc()', function () {\n  it('should return “Hello, World!” when no parameters are provided', function() {\n    assert.equal(myFunc(), 'Hello, World!');\n  });\n});\n\n//Updated Test Case\ndescribe('myFunc(text)', function () {\n  it('should return text when one parameter is provided', function() {\n    let text = 'Artillery Test';\n    assert.equal(myFunc(text), 'Artillery Test');\n  });\n\n  it('should return “Hello, Artillery!” when the parameter is \"Artillery\"', function() {\n    assert.equal(myFunc('Artillery'), 'Hello, Artillery!');\n  });\n\n  it('should return responded error message for null parameter', function() {\n    assert.throws(() => { myFunc(null); }, Error, 'Invalid input');\n  });\n});\n"
                                ],
                                "type": "text/javascript"
                              }
                            }
                          ],
                          "protocolProfileBehavior": {
                            "disableBodyPruning": true
                          }
                        }
                      ],
                      "event": []
                    },
                    {
                      "id": "665cbf6a-a345-46de-a1fc-e54f7ea736de",
                      "name": "Read test run(s).",
                      "request": {
                        "name": "Read test run(s).",
                        "description": {
                          "content": "## Get or retrieve information from test run(s).\r\n            \r\n#### Body fields:\r\n* **cycles** _(optional)_: Specify the cycles to filter by the result.\r\n* **versions** _(optional)_: Specify the versions to filter by the result.\r\n* **keys** _(optional)_: Specify the test runs keys to filter by the result.\r\n* **testCasesKeys** _(optional)_: Specify the test cases keys to filter by the result.\r\n              When specified, only test runs that belong to these test cases will be returned.\r\n* **expand** _(optional)_: Specify which fields will return additionaly for each Test Run.\r\n              Allowed values: \"Steps\" - The test run steps.",
                          "type": "text/plain"
                        },
                        "url": {
                          "path": [
                            "v1",
                            "projects",
                            ":project-key",
                            "test-runs",
                            "search"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [
                            {
                              "disabled": false,
                              "key": "limit",
                              "value": "{{limit}}",
                              "description": "Numeric value that determines that maximum N results will be returned"
                            },
                            {
                              "disabled": false,
                              "key": "offset",
                              "value": "{{offset}}",
                              "description": "Numeric value that determines that the result list will start from result #N (zero based)"
                            }
                          ],
                          "variable": [
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "{{project-key}}",
                              "key": "project-key",
                              "description": "(Required) "
                            }
                          ]
                        },
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "method": "POST",
                        "auth": {
                          "type": "apikey",
                          "apikey": [
                            {
                              "key": "key",
                              "value": "Authorization"
                            },
                            {
                              "key": "value",
                              "value": "{{apiKey}}"
                            },
                            {
                              "key": "in",
                              "value": "header"
                            }
                          ]
                        },
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"cycles\": [\n        \"{{cycles}}\"\n    ],\n    \"versions\": [\n        \"{{versions}}\"\n    ],\n    \"keys\": [\n        \"{{keys}}\"\n    ],\n    \"expand\": [\n        \"{{expand}}\"\n    ],\n    \"testCasesKeys\": [\n        \"{{testCasesKeys}}\"\n    ]\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        }
                      },
                      "response": [
                        {
                          "id": "a00e4174-dcab-4afb-b075-5301d8904521",
                          "originalRequest": {
                            "url": {
                              "path": [
                                "v1",
                                "projects",
                                ":project-key",
                                "test-runs",
                                "search"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [
                                {
                                  "key": "limit",
                                  "value": "{{limit}}"
                                },
                                {
                                  "key": "offset",
                                  "value": "{{offset}}"
                                }
                              ],
                              "variable": [
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "{{project-key}}",
                                  "key": "project-key",
                                  "description": "(Required) "
                                }
                              ]
                            },
                            "header": [
                              {
                                "description": {
                                  "content": "Added as a part of security scheme: apikey",
                                  "type": "text/plain"
                                },
                                "key": "Authorization",
                                "value": "{{Authorization}}"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "method": "POST",
                            "body": {
                              "mode": "raw",
                              "raw": "{\n    \"cycles\": [\n        \"{{cycles}}\"\n    ],\n    \"versions\": [\n        \"{{versions}}\"\n    ],\n    \"keys\": [\n        \"{{keys}}\"\n    ],\n    \"expand\": [\n        \"{{expand}}\"\n    ]\n}",
                              "options": {
                                "raw": {
                                  "language": "json"
                                }
                              }
                            }
                          },
                          "status": "OK",
                          "code": 200,
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": "{\n  \"offset\": 0,\n  \"limit\": 2,\n  \"totalCount\": 10,\n  \"items\": [\n    {\n      \"id\": \"1d52398e-56aa-4ed3-aad5-5ef6e9017ff5\",\n      \"key\": \"DE-TR-1\",\n      \"created\": \"2025-04-29T07:21:25.3561403Z\",\n      \"updated\": \"2025-04-29T07:21:25.3561403Z\",\n      \"createdBy\": \"Tricentis\",\n      \"updatedBy\": \"Tricentis\",\n      \"cycle\": {\n        \"id\": \"6033b63f-48ac-4d20-8420-1c90508c36e0\",\n        \"name\": \"CycleName\",\n        \"version\": {\n          \"id\": \"6beba260-4e96-423a-81fd-94b49626528c\",\n          \"jiraId\": \"10000\",\n          \"name\": \"1.0.0\"\n        }\n      },\n      \"steps\": [\n        {\n          \"index\": 0,\n          \"status\": \"unexecuted\",\n          \"actualResult\": \"user name filled\",\n          \"data\": \"https://api.ttm4j.tricentis.com/\",\n          \"comment\": \"no comment\",\n          \"description\": \"Enter username\",\n          \"expectedResult\": \"user name filled\"\n        }\n      ],\n      \"testCaseKey\": \"DE-1\",\n      \"status\": \"unexecuted\",\n      \"name\": \"Login\",\n      \"description\": \"Login into Test Management\",\n      \"priority\": \"High\",\n      \"testCategory\": \"Functional\",\n      \"testType\": \"Manual\",\n      \"assignee\": \"User\",\n      \"executedBy\": \"User\",\n      \"plannedStartDate\": \"2025-04-28T07:21:25.3561402Z\",\n      \"plannedEndDate\": \"2025-04-29T07:21:25.3561401Z\"\n    },\n    {\n      \"id\": \"37f10e64-395b-4c60-a14a-82e02bdaf911\",\n      \"key\": \"DE-TR-2\",\n      \"created\": \"2025-04-29T07:21:25.3561464Z\",\n      \"updated\": \"2025-04-29T07:21:25.3561465Z\",\n      \"createdBy\": \"Tricentis\",\n      \"updatedBy\": \"Tricentis\",\n      \"cycle\": {\n        \"id\": \"67420c82-5399-489b-8ede-3b038d0eefbe\",\n        \"name\": \"CycleName\",\n        \"version\": {\n          \"id\": \"3222870f-0b86-4315-8e06-0e1624042d61\",\n          \"jiraId\": \"10000\",\n          \"name\": \"1.0.0\"\n        }\n      },\n      \"testCaseKey\": \"DE-2\",\n      \"status\": \"passeed\",\n      \"name\": \"Register\",\n      \"description\": \"Register into Test Management\",\n      \"priority\": \"Low\",\n      \"testCategory\": \"NonFunctional\",\n      \"testType\": \"Automated\",\n      \"assignee\": \"User\",\n      \"executedBy\": \"User\",\n      \"plannedStartDate\": \"2025-04-28T07:21:25.3561464Z\",\n      \"plannedEndDate\": \"2025-04-29T07:21:25.3561463Z\",\n      \"automation\": {\n        \"name\": \"Register to Test Management\",\n        \"id\": \"Test Id\",\n        \"content\": \"Click on register button, enter registration details\"\n      }\n    }\n  ]\n}",
                          "cookie": [],
                          "_postman_previewlanguage": "json"
                        },
                        {
                          "id": "940c16dc-dbc6-4b16-98cc-6e03402644f6",
                          "name": "`Invalid parameters`.",
                          "originalRequest": {
                            "url": {
                              "path": [
                                "v1",
                                "projects",
                                ":project-key",
                                "test-runs",
                                "search"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [
                                {
                                  "key": "limit",
                                  "value": "{{limit}}"
                                },
                                {
                                  "key": "offset",
                                  "value": "{{offset}}"
                                }
                              ],
                              "variable": [
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "{{project-key}}",
                                  "key": "project-key",
                                  "description": "(Required) "
                                }
                              ]
                            },
                            "header": [
                              {
                                "description": {
                                  "content": "Added as a part of security scheme: apikey",
                                  "type": "text/plain"
                                },
                                "key": "Authorization",
                                "value": "{{Authorization}}"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "method": "POST",
                            "body": {
                              "mode": "raw",
                              "raw": "{\n    \"cycles\": [\n        \"{{cycles}}\"\n    ],\n    \"versions\": [\n        \"{{versions}}\"\n    ],\n    \"keys\": [\n        \"{{keys}}\"\n    ],\n    \"expand\": [\n        \"{{expand}}\"\n    ]\n}",
                              "options": {
                                "raw": {
                                  "language": "json"
                                }
                              }
                            }
                          },
                          "status": "Bad Request",
                          "code": 400,
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": "{\n  \"message\": \"bad data\"\n}",
                          "cookie": [],
                          "_postman_previewlanguage": "json"
                        },
                        {
                          "id": "7b948cad-8e71-48fb-aa51-ed7f79916734",
                          "name": "Unauthorized",
                          "originalRequest": {
                            "url": {
                              "path": [
                                "v1",
                                "projects",
                                ":project-key",
                                "test-runs",
                                "search"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [
                                {
                                  "key": "limit",
                                  "value": "{{limit}}"
                                },
                                {
                                  "key": "offset",
                                  "value": "{{offset}}"
                                }
                              ],
                              "variable": [
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "{{project-key}}",
                                  "key": "project-key",
                                  "description": "(Required) "
                                }
                              ]
                            },
                            "header": [
                              {
                                "description": {
                                  "content": "Added as a part of security scheme: apikey",
                                  "type": "text/plain"
                                },
                                "key": "Authorization",
                                "value": "{{Authorization}}"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "method": "POST",
                            "body": {
                              "mode": "raw",
                              "raw": "{\n    \"cycles\": [\n        \"{{cycles}}\"\n    ],\n    \"versions\": [\n        \"{{versions}}\"\n    ],\n    \"keys\": [\n        \"{{keys}}\"\n    ],\n    \"expand\": [\n        \"{{expand}}\"\n    ]\n}",
                              "options": {
                                "raw": {
                                  "language": "json"
                                }
                              }
                            }
                          },
                          "status": "Unauthorized",
                          "code": 401,
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": "{\n  \"message\": \"unauthorized\"\n}",
                          "cookie": [],
                          "_postman_previewlanguage": "json"
                        },
                        {
                          "id": "f6cec3e8-f3be-4f9d-98ca-8db01959d4b8",
                          "name": "`Not Found`.",
                          "originalRequest": {
                            "url": {
                              "path": [
                                "v1",
                                "projects",
                                ":project-key",
                                "test-runs",
                                "search"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [
                                {
                                  "key": "limit",
                                  "value": "{{limit}}"
                                },
                                {
                                  "key": "offset",
                                  "value": "{{offset}}"
                                }
                              ],
                              "variable": [
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "{{project-key}}",
                                  "key": "project-key",
                                  "description": "(Required) "
                                }
                              ]
                            },
                            "header": [
                              {
                                "description": {
                                  "content": "Added as a part of security scheme: apikey",
                                  "type": "text/plain"
                                },
                                "key": "Authorization",
                                "value": "{{Authorization}}"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "method": "POST",
                            "body": {
                              "mode": "raw",
                              "raw": "{\n    \"cycles\": [\n        \"{{cycles}}\"\n    ],\n    \"versions\": [\n        \"{{versions}}\"\n    ],\n    \"keys\": [\n        \"{{keys}}\"\n    ],\n    \"expand\": [\n        \"{{expand}}\"\n    ]\n}",
                              "options": {
                                "raw": {
                                  "language": "json"
                                }
                              }
                            }
                          },
                          "status": "Not Found",
                          "code": 404,
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": "{\n  \"message\": \"not found\"\n}",
                          "cookie": [],
                          "_postman_previewlanguage": "json"
                        }
                      ],
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "//Import necessary dependencies\nconst assert = require('chai').assert;\nconst myFunc = require('../src/myFunc.js');\n\n//Existing Test Case\ndescribe('myFunc()', function () {\n  it('should return “Hello, World!” when no parameters are provided', function() {\n    assert.equal(myFunc(), 'Hello, World!');\n  });\n});\n\n//Updated Test Case\ndescribe('myFunc(text)', function () {\n  it('should return text when one parameter is provided', function() {\n    let text = 'Artillery Test';\n    assert.equal(myFunc(text), 'Artillery Test');\n  });\n\n  it('should return “Hello, Artillery!” when the parameter is \"Artillery\"', function() {\n    assert.equal(myFunc('Artillery'), 'Hello, Artillery!');\n  });\n\n  it('should return responded error message for null parameter', function() {\n    assert.throws(() => { myFunc(null); }, Error, 'Invalid input');\n  });\n});\n"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      }
                    }
                  ],
                  "event": []
                },
                {
                  "id": "963d6350-fb3d-4e2b-bc25-ee15369c2de0",
                  "name": "cycles",
                  "item": [
                    {
                      "id": "98102c1c-0b79-4b1d-8fa4-4f5110a2a39d",
                      "name": "Create cycle(s).",
                      "request": {
                        "name": "Create cycle(s).",
                        "description": {
                          "content": "## Create cycle(s).\r\n##### Note: Release versions are managed in Jira.\r\n            \r\n#### Body fields:\r\n* **cycles** _(mandatory)_: Provide a list of cycles, with each test having the following fields:\r\n    * **name** _(mandatory)_: name of the cycle.\r\n    * **version** _(optional)_: cycle's version (if not provided the version will be under 'unversioned').\r\n    * **assignee** _(optional)_: the username or email which the cycle will be assigned to.\r\n    * **plannedStartDate** _(optional)_: the cycle planned start date.\r\n    * **plannedEndDate** _(optional)_: the cycle planned end date.\r\n    * **fields** _(optional)_: list of fields of the cycle.\r\n    Only Environments and Builds are allowed. AllowedValueName must be provided.\r\n        * **schemeName** _(mandatory)_: the scheme name of the field (for example Environments).\r\n        * **allowedValueName** _(mandatory)_: the allowed value of the scheme (for example Development).",
                          "type": "text/plain"
                        },
                        "url": {
                          "path": [
                            "v1",
                            "projects",
                            ":project-key",
                            "cycles"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "{{project-key}}",
                              "key": "project-key",
                              "description": "(Required) "
                            }
                          ]
                        },
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "method": "POST",
                        "auth": {
                          "type": "apikey",
                          "apikey": [
                            {
                              "key": "key",
                              "value": "Authorization"
                            },
                            {
                              "key": "value",
                              "value": "{{apiKey}}"
                            },
                            {
                              "key": "in",
                              "value": "header"
                            }
                          ]
                        },
                        "body": {
                          "mode": "raw",
                          "raw": "[\n    {\n        \"name\": \"{{name}}\",\n        \"assignee\": \"{{assignee}}\",\n        \"plannedStartDate\": \"{{plannedStartDate}}\",\n        \"plannedEndDate\": \"{{plannedEndDate}}\",\n        \"fields\": [\n            \"{{fields}}\"\n        ],\n        \"version\": \"{{version}}\"\n    },\n    {\n        \"name\": \"{{1.name}}\",\n        \"assignee\": \"{{1.assignee}}\",\n        \"plannedStartDate\": \"{{1.plannedStartDate}}\",\n        \"plannedEndDate\": \"{{1.plannedEndDate}}\",\n        \"fields\": [\n            \"{{1.fields}}\"\n        ],\n        \"version\": \"{{1.version}}\"\n    }\n]",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        }
                      },
                      "response": [
                        {
                          "id": "ed4663b2-fc96-45f4-946b-93afad2e0078",
                          "originalRequest": {
                            "url": {
                              "path": [
                                "v1",
                                "projects",
                                ":project-key",
                                "cycles"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [],
                              "variable": [
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "{{project-key}}",
                                  "key": "project-key",
                                  "description": "(Required) "
                                }
                              ]
                            },
                            "header": [
                              {
                                "description": {
                                  "content": "Added as a part of security scheme: apikey",
                                  "type": "text/plain"
                                },
                                "key": "Authorization",
                                "value": "{{Authorization}}"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "method": "POST",
                            "body": {
                              "mode": "raw",
                              "raw": "[\n    {\n        \"version\": \"{{version}}\",\n        \"name\": \"{{name}}\"\n    },\n    {\n        \"name\": \"{{1.name}}\",\n        \"plannedStartDate\": \"{{plannedStartDate}}\",\n        \"plannedEndDate\": \"{{plannedEndDate}}\"\n    },\n    {\n        \"name\": \"{{2.name}}\",\n        \"fields\": [\n            \"{{fields}}\"\n        ]\n    }\n]",
                              "options": {
                                "raw": {
                                  "language": "json"
                                }
                              }
                            }
                          },
                          "status": "OK",
                          "code": 200,
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": "[\n  {\n    \"name\": \"My Cycle\",\n    \"version\": {\n      \"name\": \"1.0.0\"\n    }\n  },\n  {\n    \"name\": \"My Second Cycle\",\n    \"plannedStartDate\": \"2025-04-28T07:21:25.1837478Z\",\n    \"plannedEndDate\": \"2025-04-29T07:21:25.1837475Z\",\n    \"version\": {\n      \"name\": \"UNVERSIONED\"\n    }\n  },\n  {\n    \"name\": \"My Third Cycle\",\n    \"version\": {\n      \"name\": \"UNVERSIONED\"\n    },\n    \"fields\": [\n      {\n        \"schemeName\": \"Environments\",\n        \"allowedValueName\": \"Development\"\n      },\n      {\n        \"schemeName\": \"Builds\",\n        \"value\": \"1.9.9\"\n      }\n    ]\n  }\n]",
                          "cookie": [],
                          "_postman_previewlanguage": "json"
                        },
                        {
                          "id": "c1b15b19-7aa5-43ce-ae5c-c14bd8a4b5f1",
                          "name": "`Invalid parameters`.",
                          "originalRequest": {
                            "url": {
                              "path": [
                                "v1",
                                "projects",
                                ":project-key",
                                "cycles"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [],
                              "variable": [
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "{{project-key}}",
                                  "key": "project-key",
                                  "description": "(Required) "
                                }
                              ]
                            },
                            "header": [
                              {
                                "description": {
                                  "content": "Added as a part of security scheme: apikey",
                                  "type": "text/plain"
                                },
                                "key": "Authorization",
                                "value": "{{Authorization}}"
                              }
                            ],
                            "method": "POST",
                            "body": {
                              "mode": "raw",
                              "raw": "[\n    {\n        \"version\": \"{{version}}\",\n        \"name\": \"{{name}}\"\n    },\n    {\n        \"name\": \"{{1.name}}\",\n        \"plannedStartDate\": \"{{plannedStartDate}}\",\n        \"plannedEndDate\": \"{{plannedEndDate}}\"\n    },\n    {\n        \"name\": \"{{2.name}}\",\n        \"fields\": [\n            \"{{fields}}\"\n        ]\n    }\n]",
                              "options": {
                                "raw": {
                                  "language": "json"
                                }
                              }
                            }
                          },
                          "status": "Bad Request",
                          "code": 400,
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "text/plain"
                            }
                          ],
                          "body": "",
                          "cookie": [],
                          "_postman_previewlanguage": "text"
                        },
                        {
                          "id": "9c4fdbbb-8057-4654-9767-91a7a70d3b23",
                          "name": "Unauthorized",
                          "originalRequest": {
                            "url": {
                              "path": [
                                "v1",
                                "projects",
                                ":project-key",
                                "cycles"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [],
                              "variable": [
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "{{project-key}}",
                                  "key": "project-key",
                                  "description": "(Required) "
                                }
                              ]
                            },
                            "header": [
                              {
                                "description": {
                                  "content": "Added as a part of security scheme: apikey",
                                  "type": "text/plain"
                                },
                                "key": "Authorization",
                                "value": "{{Authorization}}"
                              }
                            ],
                            "method": "POST",
                            "body": {
                              "mode": "raw",
                              "raw": "[\n    {\n        \"version\": \"{{version}}\",\n        \"name\": \"{{name}}\"\n    },\n    {\n        \"name\": \"{{1.name}}\",\n        \"plannedStartDate\": \"{{plannedStartDate}}\",\n        \"plannedEndDate\": \"{{plannedEndDate}}\"\n    },\n    {\n        \"name\": \"{{2.name}}\",\n        \"fields\": [\n            \"{{fields}}\"\n        ]\n    }\n]",
                              "options": {
                                "raw": {
                                  "language": "json"
                                }
                              }
                            }
                          },
                          "status": "Unauthorized",
                          "code": 401,
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "text/plain"
                            }
                          ],
                          "body": "",
                          "cookie": [],
                          "_postman_previewlanguage": "text"
                        },
                        {
                          "id": "e0a0cd7e-7fa7-40a8-9407-850fd2b32128",
                          "name": "`Not Found`.",
                          "originalRequest": {
                            "url": {
                              "path": [
                                "v1",
                                "projects",
                                ":project-key",
                                "cycles"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [],
                              "variable": [
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "{{project-key}}",
                                  "key": "project-key",
                                  "description": "(Required) "
                                }
                              ]
                            },
                            "header": [
                              {
                                "description": {
                                  "content": "Added as a part of security scheme: apikey",
                                  "type": "text/plain"
                                },
                                "key": "Authorization",
                                "value": "{{Authorization}}"
                              }
                            ],
                            "method": "POST",
                            "body": {
                              "mode": "raw",
                              "raw": "[\n    {\n        \"version\": \"{{version}}\",\n        \"name\": \"{{name}}\"\n    },\n    {\n        \"name\": \"{{1.name}}\",\n        \"plannedStartDate\": \"{{plannedStartDate}}\",\n        \"plannedEndDate\": \"{{plannedEndDate}}\"\n    },\n    {\n        \"name\": \"{{2.name}}\",\n        \"fields\": [\n            \"{{fields}}\"\n        ]\n    }\n]",
                              "options": {
                                "raw": {
                                  "language": "json"
                                }
                              }
                            }
                          },
                          "status": "Not Found",
                          "code": 404,
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "text/plain"
                            }
                          ],
                          "body": "",
                          "cookie": [],
                          "_postman_previewlanguage": "text"
                        }
                      ],
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "//Import necessary dependencies\nconst assert = require('chai').assert;\nconst myFunc = require('../src/myFunc.js');\n\n//Existing Test Case\ndescribe('myFunc()', function () {\n  it('should return “Hello, World!” when no parameters are provided', function() {\n    assert.equal(myFunc(), 'Hello, World!');\n  });\n});\n\n//Updated Test Case\ndescribe('myFunc(text)', function () {\n  it('should return text when one parameter is provided', function() {\n    let text = 'Artillery Test';\n    assert.equal(myFunc(text), 'Artillery Test');\n  });\n\n  it('should return “Hello, Artillery!” when the parameter is \"Artillery\"', function() {\n    assert.equal(myFunc('Artillery'), 'Hello, Artillery!');\n  });\n\n  it('should return responded error message for null parameter', function() {\n    assert.throws(() => { myFunc(null); }, Error, 'Invalid input');\n  });\n});\n"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      }
                    },
                    {
                      "id": "6b6e0341-9960-4d00-9fc8-2c6f331efa11",
                      "name": "Update cycle.",
                      "request": {
                        "name": "Update cycle.",
                        "description": {
                          "content": "## Update cycle.\r\n##### Note: Release versions are managed in Jira.\r\n            \r\n#### Body fields:\r\n* **cycle** : Provide the cycle details to update:\r\n    * **name** _(optional)_: name of the cycle.\r\n    * **assignee** _(optional)_: the username or email which the cycle will be assigned to.\r\n    * **plannedStartDate** _(optional)_: the cycle planned start date.\r\n    * **plannedEndDate** _(optional)_: the cycle planned end date.\r\n    * **fields** _(optional)_: list of fields of the cycle.\r\n    Only Environments and Builds are allowed. AllowedValueName must be provided.\r\n        * **schemeName** _(mandatory)_: the scheme name of the field (for example Environments).\r\n        * **allowedValueName** _(mandatory)_: the allowed value of the scheme (for example Development).",
                          "type": "text/plain"
                        },
                        "url": {
                          "path": [
                            "v1",
                            "projects",
                            ":project-key",
                            "cycles",
                            ":cycleId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "{{cycleId}}",
                              "key": "cycleId",
                              "description": "(Required) cycleId."
                            },
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "{{project-key}}",
                              "key": "project-key",
                              "description": "(Required) "
                            }
                          ]
                        },
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "method": "PUT",
                        "auth": {
                          "type": "apikey",
                          "apikey": [
                            {
                              "key": "key",
                              "value": "Authorization"
                            },
                            {
                              "key": "value",
                              "value": "{{apiKey}}"
                            },
                            {
                              "key": "in",
                              "value": "header"
                            }
                          ]
                        },
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"name\": \"{{name}}\",\n    \"assignee\": \"{{assignee}}\",\n    \"plannedStartDate\": \"{{plannedStartDate}}\",\n    \"plannedEndDate\": \"{{plannedEndDate}}\",\n    \"fields\": [\n        \"{{fields}}\"\n    ]\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        }
                      },
                      "response": [
                        {
                          "id": "8f9a732a-239a-4952-ab0e-84de18d47b8a",
                          "originalRequest": {
                            "url": {
                              "path": [
                                "v1",
                                "projects",
                                ":project-key",
                                "cycles",
                                ":cycleId"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [],
                              "variable": [
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "{{cycleId}}",
                                  "key": "cycleId",
                                  "description": "(Required) cycleId."
                                },
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "{{project-key}}",
                                  "key": "project-key",
                                  "description": "(Required) "
                                }
                              ]
                            },
                            "header": [
                              {
                                "description": {
                                  "content": "Added as a part of security scheme: apikey",
                                  "type": "text/plain"
                                },
                                "key": "Authorization",
                                "value": "{{Authorization}}"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "method": "PUT",
                            "body": {
                              "mode": "raw",
                              "raw": "{\n    \"name\": \"{{name}}\",\n    \"assignee\": \"{{assignee}}\",\n    \"plannedStartDate\": \"{{plannedStartDate}}\",\n    \"plannedEndDate\": \"{{plannedEndDate}}\",\n    \"fields\": [\n        \"{{fields}}\"\n    ]\n}",
                              "options": {
                                "raw": {
                                  "language": "json"
                                }
                              }
                            }
                          },
                          "status": "OK",
                          "code": 200,
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": "{\n  \"name\": \"My Third Cycle\",\n  \"plannedStartDate\": \"2025-04-28T07:21:25.185426Z\",\n  \"plannedEndDate\": \"2025-04-29T07:21:25.1854258Z\",\n  \"version\": {\n    \"name\": \"1.0.0\"\n  },\n  \"fields\": [\n    {\n      \"schemeName\": \"Environments\",\n      \"allowedValueName\": \"Development\"\n    },\n    {\n      \"schemeName\": \"Builds\",\n      \"value\": \"1.9.9\"\n    }\n  ]\n}",
                          "cookie": [],
                          "_postman_previewlanguage": "json"
                        },
                        {
                          "id": "bd065e4a-e288-404c-9723-15c371fe8d3b",
                          "name": "`Invalid parameters`.",
                          "originalRequest": {
                            "url": {
                              "path": [
                                "v1",
                                "projects",
                                ":project-key",
                                "cycles",
                                ":cycleId"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [],
                              "variable": [
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "{{cycleId}}",
                                  "key": "cycleId",
                                  "description": "(Required) cycleId."
                                },
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "{{project-key}}",
                                  "key": "project-key",
                                  "description": "(Required) "
                                }
                              ]
                            },
                            "header": [
                              {
                                "description": {
                                  "content": "Added as a part of security scheme: apikey",
                                  "type": "text/plain"
                                },
                                "key": "Authorization",
                                "value": "{{Authorization}}"
                              }
                            ],
                            "method": "PUT",
                            "body": {
                              "mode": "raw",
                              "raw": "{\n    \"name\": \"{{name}}\",\n    \"assignee\": \"{{assignee}}\",\n    \"plannedStartDate\": \"{{plannedStartDate}}\",\n    \"plannedEndDate\": \"{{plannedEndDate}}\",\n    \"fields\": [\n        \"{{fields}}\"\n    ]\n}",
                              "options": {
                                "raw": {
                                  "language": "json"
                                }
                              }
                            }
                          },
                          "status": "Bad Request",
                          "code": 400,
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "text/plain"
                            }
                          ],
                          "body": "",
                          "cookie": [],
                          "_postman_previewlanguage": "text"
                        },
                        {
                          "id": "43179aae-19d6-480c-86c1-8365f9097b9e",
                          "name": "Unauthorized",
                          "originalRequest": {
                            "url": {
                              "path": [
                                "v1",
                                "projects",
                                ":project-key",
                                "cycles",
                                ":cycleId"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [],
                              "variable": [
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "{{cycleId}}",
                                  "key": "cycleId",
                                  "description": "(Required) cycleId."
                                },
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "{{project-key}}",
                                  "key": "project-key",
                                  "description": "(Required) "
                                }
                              ]
                            },
                            "header": [
                              {
                                "description": {
                                  "content": "Added as a part of security scheme: apikey",
                                  "type": "text/plain"
                                },
                                "key": "Authorization",
                                "value": "{{Authorization}}"
                              }
                            ],
                            "method": "PUT",
                            "body": {
                              "mode": "raw",
                              "raw": "{\n    \"name\": \"{{name}}\",\n    \"assignee\": \"{{assignee}}\",\n    \"plannedStartDate\": \"{{plannedStartDate}}\",\n    \"plannedEndDate\": \"{{plannedEndDate}}\",\n    \"fields\": [\n        \"{{fields}}\"\n    ]\n}",
                              "options": {
                                "raw": {
                                  "language": "json"
                                }
                              }
                            }
                          },
                          "status": "Unauthorized",
                          "code": 401,
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "text/plain"
                            }
                          ],
                          "body": "",
                          "cookie": [],
                          "_postman_previewlanguage": "text"
                        },
                        {
                          "id": "dd7328da-5fd8-4496-b0ed-8dc036806f0f",
                          "name": "`Not Found`.",
                          "originalRequest": {
                            "url": {
                              "path": [
                                "v1",
                                "projects",
                                ":project-key",
                                "cycles",
                                ":cycleId"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [],
                              "variable": [
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "{{cycleId}}",
                                  "key": "cycleId",
                                  "description": "(Required) cycleId."
                                },
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "{{project-key}}",
                                  "key": "project-key",
                                  "description": "(Required) "
                                }
                              ]
                            },
                            "header": [
                              {
                                "description": {
                                  "content": "Added as a part of security scheme: apikey",
                                  "type": "text/plain"
                                },
                                "key": "Authorization",
                                "value": "{{Authorization}}"
                              }
                            ],
                            "method": "PUT",
                            "body": {
                              "mode": "raw",
                              "raw": "{\n    \"name\": \"{{name}}\",\n    \"assignee\": \"{{assignee}}\",\n    \"plannedStartDate\": \"{{plannedStartDate}}\",\n    \"plannedEndDate\": \"{{plannedEndDate}}\",\n    \"fields\": [\n        \"{{fields}}\"\n    ]\n}",
                              "options": {
                                "raw": {
                                  "language": "json"
                                }
                              }
                            }
                          },
                          "status": "Not Found",
                          "code": 404,
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "text/plain"
                            }
                          ],
                          "body": "",
                          "cookie": [],
                          "_postman_previewlanguage": "text"
                        }
                      ],
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "//Import necessary dependencies\nconst assert = require('chai').assert;\nconst myFunc = require('../src/myFunc.js');\n\n//Existing Test Case\ndescribe('myFunc()', function () {\n  it('should return “Hello, World!” when no parameters are provided', function() {\n    assert.equal(myFunc(), 'Hello, World!');\n  });\n});\n\n//Updated Test Case\ndescribe('myFunc(text)', function () {\n  it('should return text when one parameter is provided', function() {\n    let text = 'Artillery Test';\n    assert.equal(myFunc(text), 'Artillery Test');\n  });\n\n  it('should return “Hello, Artillery!” when the parameter is \"Artillery\"', function() {\n    assert.equal(myFunc('Artillery'), 'Hello, Artillery!');\n  });\n\n  it('should return responded error message for null parameter', function() {\n    assert.throws(() => { myFunc(null); }, Error, 'Invalid input');\n  });\n});\n"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      }
                    },
                    {
                      "id": "e404e5c7-0f74-435e-9174-5b7ffaffaa6d",
                      "name": "Get cycles.",
                      "request": {
                        "name": "Get cycles.",
                        "description": {
                          "content": "## Get cycle(s).\r\n##### Note: Release versions are managed in Jira.\r\n            \r\n#### Query parameter fields:\r\n* **cycle** : Provide the cycle details to filter by:\r\n    * **name** _(optional)_: filter cycles that contains name.\r\n    * **version** _(optional)_: cycle's version (if not provided the default value is 'unversioned').\r\n    * **assignee** _(optional)_: the username or email which the cycle is assigned to.",
                          "type": "text/plain"
                        },
                        "url": {
                          "path": [
                            "v1",
                            "projects",
                            ":project-key",
                            "cycles",
                            "search"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [
                            {
                              "disabled": false,
                              "key": "name",
                              "value": "{{name}}",
                              "description": "name."
                            },
                            {
                              "disabled": false,
                              "key": "version",
                              "value": "{{version}}",
                              "description": "version."
                            },
                            {
                              "disabled": false,
                              "key": "assignee",
                              "value": "{{assignee}}",
                              "description": "assignee."
                            },
                            {
                              "disabled": false,
                              "key": "limit",
                              "value": "{{limit}}",
                              "description": "Numeric value that determines that maximum N results will be returned"
                            },
                            {
                              "disabled": false,
                              "key": "offset",
                              "value": "{{offset}}",
                              "description": "Numeric value that determines that the result list will start from result #N (zero based)"
                            }
                          ],
                          "variable": [
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "{{project-key}}",
                              "key": "project-key",
                              "description": "(Required) "
                            }
                          ]
                        },
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "method": "GET",
                        "auth": {
                          "type": "apikey",
                          "apikey": [
                            {
                              "key": "key",
                              "value": "Authorization"
                            },
                            {
                              "key": "value",
                              "value": "{{apiKey}}"
                            },
                            {
                              "key": "in",
                              "value": "header"
                            }
                          ]
                        }
                      },
                      "response": [
                        {
                          "id": "021566e9-15f0-4444-83d6-d4a59b98731d",
                          "originalRequest": {
                            "url": {
                              "path": [
                                "v1",
                                "projects",
                                ":project-key",
                                "cycles",
                                "search"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [
                                {
                                  "key": "name",
                                  "value": "{{name}}"
                                },
                                {
                                  "key": "version",
                                  "value": "{{version}}"
                                },
                                {
                                  "key": "assignee",
                                  "value": "{{assignee}}"
                                },
                                {
                                  "key": "limit",
                                  "value": "{{limit}}"
                                },
                                {
                                  "key": "offset",
                                  "value": "{{offset}}"
                                }
                              ],
                              "variable": [
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "{{project-key}}",
                                  "key": "project-key",
                                  "description": "(Required) "
                                }
                              ]
                            },
                            "header": [
                              {
                                "description": {
                                  "content": "Added as a part of security scheme: apikey",
                                  "type": "text/plain"
                                },
                                "key": "Authorization",
                                "value": "{{Authorization}}"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "method": "GET",
                            "body": {}
                          },
                          "status": "OK",
                          "code": 200,
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": "[\n  {\n    \"name\": \"My Cycle\",\n    \"version\": {\n      \"name\": \"1.0.0\"\n    }\n  },\n  {\n    \"name\": \"My Second Cycle\",\n    \"plannedStartDate\": \"2025-04-28T07:21:25.2512936Z\",\n    \"plannedEndDate\": \"2025-04-29T07:21:25.251293Z\",\n    \"version\": {\n      \"name\": \"UNVERSIONED\"\n    }\n  },\n  {\n    \"name\": \"My Third Cycle\",\n    \"version\": {\n      \"name\": \"UNVERSIONED\"\n    },\n    \"fields\": [\n      {\n        \"schemeName\": \"Environments\",\n        \"allowedValueName\": \"Development\"\n      },\n      {\n        \"schemeName\": \"Builds\",\n        \"value\": \"1.9.9\"\n      }\n    ]\n  }\n]",
                          "cookie": [],
                          "_postman_previewlanguage": "json"
                        },
                        {
                          "id": "bca7c56f-37ad-4d3c-bde6-2f98315403af",
                          "name": "`Invalid parameters`.",
                          "originalRequest": {
                            "url": {
                              "path": [
                                "v1",
                                "projects",
                                ":project-key",
                                "cycles",
                                "search"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [
                                {
                                  "key": "name",
                                  "value": "{{name}}"
                                },
                                {
                                  "key": "version",
                                  "value": "{{version}}"
                                },
                                {
                                  "key": "assignee",
                                  "value": "{{assignee}}"
                                },
                                {
                                  "key": "limit",
                                  "value": "{{limit}}"
                                },
                                {
                                  "key": "offset",
                                  "value": "{{offset}}"
                                }
                              ],
                              "variable": [
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "{{project-key}}",
                                  "key": "project-key",
                                  "description": "(Required) "
                                }
                              ]
                            },
                            "header": [
                              {
                                "description": {
                                  "content": "Added as a part of security scheme: apikey",
                                  "type": "text/plain"
                                },
                                "key": "Authorization",
                                "value": "{{Authorization}}"
                              }
                            ],
                            "method": "GET",
                            "body": {}
                          },
                          "status": "Bad Request",
                          "code": 400,
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "text/plain"
                            }
                          ],
                          "body": "",
                          "cookie": [],
                          "_postman_previewlanguage": "text"
                        },
                        {
                          "id": "37c9b111-3950-4982-8d3f-4d9ed18b8d8a",
                          "name": "Unauthorized",
                          "originalRequest": {
                            "url": {
                              "path": [
                                "v1",
                                "projects",
                                ":project-key",
                                "cycles",
                                "search"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [
                                {
                                  "key": "name",
                                  "value": "{{name}}"
                                },
                                {
                                  "key": "version",
                                  "value": "{{version}}"
                                },
                                {
                                  "key": "assignee",
                                  "value": "{{assignee}}"
                                },
                                {
                                  "key": "limit",
                                  "value": "{{limit}}"
                                },
                                {
                                  "key": "offset",
                                  "value": "{{offset}}"
                                }
                              ],
                              "variable": [
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "{{project-key}}",
                                  "key": "project-key",
                                  "description": "(Required) "
                                }
                              ]
                            },
                            "header": [
                              {
                                "description": {
                                  "content": "Added as a part of security scheme: apikey",
                                  "type": "text/plain"
                                },
                                "key": "Authorization",
                                "value": "{{Authorization}}"
                              }
                            ],
                            "method": "GET",
                            "body": {}
                          },
                          "status": "Unauthorized",
                          "code": 401,
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "text/plain"
                            }
                          ],
                          "body": "",
                          "cookie": [],
                          "_postman_previewlanguage": "text"
                        },
                        {
                          "id": "7485855e-be43-49a7-b631-06cba1a5d14e",
                          "name": "`Not Found`.",
                          "originalRequest": {
                            "url": {
                              "path": [
                                "v1",
                                "projects",
                                ":project-key",
                                "cycles",
                                "search"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [
                                {
                                  "key": "name",
                                  "value": "{{name}}"
                                },
                                {
                                  "key": "version",
                                  "value": "{{version}}"
                                },
                                {
                                  "key": "assignee",
                                  "value": "{{assignee}}"
                                },
                                {
                                  "key": "limit",
                                  "value": "{{limit}}"
                                },
                                {
                                  "key": "offset",
                                  "value": "{{offset}}"
                                }
                              ],
                              "variable": [
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "{{project-key}}",
                                  "key": "project-key",
                                  "description": "(Required) "
                                }
                              ]
                            },
                            "header": [
                              {
                                "description": {
                                  "content": "Added as a part of security scheme: apikey",
                                  "type": "text/plain"
                                },
                                "key": "Authorization",
                                "value": "{{Authorization}}"
                              }
                            ],
                            "method": "GET",
                            "body": {}
                          },
                          "status": "Not Found",
                          "code": 404,
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "text/plain"
                            }
                          ],
                          "body": "",
                          "cookie": [],
                          "_postman_previewlanguage": "text"
                        }
                      ],
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "//Import necessary dependencies\nconst assert = require('chai').assert;\nconst myFunc = require('../src/myFunc.js');\n\n//Existing Test Case\ndescribe('myFunc()', function () {\n  it('should return “Hello, World!” when no parameters are provided', function() {\n    assert.equal(myFunc(), 'Hello, World!');\n  });\n});\n\n//Updated Test Case\ndescribe('myFunc(text)', function () {\n  it('should return text when one parameter is provided', function() {\n    let text = 'Artillery Test';\n    assert.equal(myFunc(text), 'Artillery Test');\n  });\n\n  it('should return “Hello, Artillery!” when the parameter is \"Artillery\"', function() {\n    assert.equal(myFunc('Artillery'), 'Hello, Artillery!');\n  });\n\n  it('should return responded error message for null parameter', function() {\n    assert.throws(() => { myFunc(null); }, Error, 'Invalid input');\n  });\n});\n"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      }
                    }
                  ],
                  "event": []
                },
                {
                  "id": "8589186c-3398-4ce3-a75b-4e493f78b259",
                  "name": "Create test runs from junit xml string.",
                  "request": {
                    "name": "Create test runs from junit xml string.",
                    "description": {
                      "content": "## Import test run(s) (execution result) from JUnit XML string.\r\n#### Body:\r\nThe body should be the XML content of the JUnit XML file.\r\n#### Query parameters:\r\n* **version** _(optional)_: Specify the version name which the test runs will be under.\r\n* **cycleName** _(optional)_: cycle name to specify.\r\nif not provided, it will take the it from the \"name\" attribute of the \"testsuites\" XML tag in case it exists.\r\nif nothing provided, it will generate a name like \"Junit execution (current date)\".",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "v1",
                        "projects",
                        ":project-key",
                        "import",
                        "execution",
                        "junit"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "disabled": false,
                          "key": "version",
                          "value": "{{version}}",
                          "description": "version."
                        },
                        {
                          "disabled": false,
                          "key": "cycleName",
                          "value": "{{cycleName}}",
                          "description": "cycleName."
                        }
                      ],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "{{project-key}}",
                          "key": "project-key",
                          "description": "(Required) "
                        }
                      ]
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "POST",
                    "auth": {
                      "type": "apikey",
                      "apikey": [
                        {
                          "key": "key",
                          "value": "Authorization"
                        },
                        {
                          "key": "value",
                          "value": "{{apiKey}}"
                        },
                        {
                          "key": "in",
                          "value": "header"
                        }
                      ]
                    },
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"testsuite\": [\n        \"{{testsuite}}\"\n    ],\n    \"name\": \"{{name}}\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    }
                  },
                  "response": [
                    {
                      "id": "2e3dded2-1d5b-4343-84a4-d54be0466106",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "v1",
                            "projects",
                            ":project-key",
                            "import",
                            "execution",
                            "junit"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [
                            {
                              "key": "version",
                              "value": "{{version}}"
                            },
                            {
                              "key": "cycleName",
                              "value": "{{cycleName}}"
                            }
                          ],
                          "variable": [
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "{{project-key}}",
                              "key": "project-key",
                              "description": "(Required) "
                            }
                          ]
                        },
                        "header": [
                          {
                            "description": {
                              "content": "Added as a part of security scheme: apikey",
                              "type": "text/plain"
                            },
                            "key": "Authorization",
                            "value": "{{Authorization}}"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "method": "POST",
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"testsuite\": [\n        \"{{testsuite}}\"\n    ],\n    \"name\": \"{{name}}\"\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "[\n  {\n    \"id\": \"0ec5b2da-eac6-4260-9145-af7c29570a2b\",\n    \"key\": \"DE-TR-1\",\n    \"created\": \"2025-04-29T07:21:25.3516537Z\",\n    \"updated\": \"2025-04-29T07:21:25.3516537Z\",\n    \"createdBy\": \"Tricentis\",\n    \"updatedBy\": \"Tricentis\",\n    \"cycle\": {\n      \"id\": \"466b5d3f-6e1c-40d7-8eef-d55a56e258da\",\n      \"name\": \"CycleName\",\n      \"version\": {\n        \"id\": \"68d94214-ec5e-42be-bfda-0371ee48f1ad\",\n        \"jiraId\": \"10000\",\n        \"name\": \"1.0.0\"\n      }\n    },\n    \"steps\": [\n      {\n        \"index\": 0,\n        \"status\": \"unexecuted\",\n        \"actualResult\": \"user name filled\",\n        \"comment\": \"no comment\",\n        \"description\": \"Enter username\",\n        \"expectedResult\": \"user name filled\"\n      }\n    ],\n    \"testCaseKey\": \"DE-1\",\n    \"status\": \"unexecuted\",\n    \"name\": \"Login\",\n    \"description\": \"Login into Test Management\",\n    \"priority\": \"High\",\n    \"testCategory\": \"Functional\",\n    \"testType\": \"Manual\",\n    \"assignee\": \"User\",\n    \"executedBy\": \"User\",\n    \"plannedStartDate\": \"2025-04-28T07:21:25.3516536Z\",\n    \"plannedEndDate\": \"2025-04-29T07:21:25.3516535Z\",\n    \"folderPath\": \"first/second\",\n    \"fields\": [\n      {\n        \"schemeName\": \"Environments\",\n        \"allowedValueName\": \"Development\"\n      },\n      {\n        \"schemeName\": \"Execution timer\",\n        \"value\": \"5\"\n      }\n    ]\n  },\n  {\n    \"id\": \"4b449801-fb99-4f37-a4d5-42c16ddb9505\",\n    \"key\": \"DE-TR-2\",\n    \"created\": \"2025-04-29T07:21:25.3516606Z\",\n    \"updated\": \"2025-04-29T07:21:25.3516607Z\",\n    \"createdBy\": \"Tricentis\",\n    \"updatedBy\": \"Tricentis\",\n    \"cycle\": {\n      \"id\": \"d22dbbff-1ab6-4a91-b24b-f3a52620ea13\",\n      \"name\": \"CycleName\",\n      \"version\": {\n        \"id\": \"3047fa19-771f-4d3b-ba26-9943c1fdb368\",\n        \"jiraId\": \"10000\",\n        \"name\": \"1.0.0\"\n      }\n    },\n    \"testCaseKey\": \"DE-2\",\n    \"status\": \"passeed\",\n    \"name\": \"Register\",\n    \"description\": \"Register into Test Management\",\n    \"priority\": \"Low\",\n    \"testCategory\": \"NonFunctional\",\n    \"testType\": \"Automated\",\n    \"assignee\": \"User\",\n    \"executedBy\": \"User\",\n    \"plannedStartDate\": \"2025-04-28T07:21:25.3516606Z\",\n    \"plannedEndDate\": \"2025-04-29T07:21:25.3516605Z\",\n    \"automation\": {\n      \"name\": \"Register to Test Management\",\n      \"id\": \"Test Id\",\n      \"content\": \"Click on register button, enter registration details\",\n      \"result\": \"Test passed as expected\"\n    },\n    \"folderPath\": \"first/third\"\n  },\n  {\n    \"id\": \"9cdef6b7-4836-4683-8695-70fa79f47034\",\n    \"cycle\": {\n      \"id\": \"7ee7ba1b-3ff4-48b8-9832-131f867b2642\",\n      \"name\": \"CycleName\",\n      \"version\": {\n        \"id\": \"00225aa6-0167-4fd5-85c5-c9665ccab956\",\n        \"jiraId\": \"10000\",\n        \"name\": \"1.0.0\"\n      }\n    },\n    \"steps\": [\n      {\n        \"index\": 1,\n        \"status\": \"unexecuted\",\n        \"actualResult\": \"user name filled\",\n        \"comment\": \"no comment\",\n        \"description\": \"Enter username\",\n        \"expectedResult\": \"user name filled\"\n      }\n    ],\n    \"testCaseKey\": \"DE-2\",\n    \"status\": \"passed\",\n    \"name\": \"Register\",\n    \"description\": \"Register into Test Management\",\n    \"priority\": \"Low\",\n    \"testCategory\": \"NonFunctional\",\n    \"testType\": \"Automated\",\n    \"assignee\": \"User\",\n    \"plannedStartDate\": \"2025-04-28T07:21:25.3516654Z\",\n    \"plannedEndDate\": \"2025-04-29T07:21:25.3516653Z\",\n    \"automation\": {\n      \"name\": \"Register to Test Management\",\n      \"id\": \"Test Id\",\n      \"content\": \"Click on register button, enter registration details\"\n    },\n    \"cycleName\": \"Cycle Name 2\"\n  }\n]",
                      "cookie": [],
                      "_postman_previewlanguage": "json"
                    },
                    {
                      "id": "d43c9999-59bb-4ff0-9c65-b700a98ff5d9",
                      "name": "`Invalid parameters`.",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "v1",
                            "projects",
                            ":project-key",
                            "import",
                            "execution",
                            "junit"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [
                            {
                              "key": "version",
                              "value": "{{version}}"
                            },
                            {
                              "key": "cycleName",
                              "value": "{{cycleName}}"
                            }
                          ],
                          "variable": [
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "{{project-key}}",
                              "key": "project-key",
                              "description": "(Required) "
                            }
                          ]
                        },
                        "header": [
                          {
                            "description": {
                              "content": "Added as a part of security scheme: apikey",
                              "type": "text/plain"
                            },
                            "key": "Authorization",
                            "value": "{{Authorization}}"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "method": "POST",
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"testsuite\": [\n        \"{{testsuite}}\"\n    ],\n    \"name\": \"{{name}}\"\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        }
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n  \"message\": \"bad data\"\n}",
                      "cookie": [],
                      "_postman_previewlanguage": "json"
                    },
                    {
                      "id": "efe1d2cc-1a3b-4ee3-8195-44e88e8f43b2",
                      "name": "Unauthorized",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "v1",
                            "projects",
                            ":project-key",
                            "import",
                            "execution",
                            "junit"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [
                            {
                              "key": "version",
                              "value": "{{version}}"
                            },
                            {
                              "key": "cycleName",
                              "value": "{{cycleName}}"
                            }
                          ],
                          "variable": [
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "{{project-key}}",
                              "key": "project-key",
                              "description": "(Required) "
                            }
                          ]
                        },
                        "header": [
                          {
                            "description": {
                              "content": "Added as a part of security scheme: apikey",
                              "type": "text/plain"
                            },
                            "key": "Authorization",
                            "value": "{{Authorization}}"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "method": "POST",
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"testsuite\": [\n        \"{{testsuite}}\"\n    ],\n    \"name\": \"{{name}}\"\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        }
                      },
                      "status": "Unauthorized",
                      "code": 401,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n  \"message\": \"unauthorized\"\n}",
                      "cookie": [],
                      "_postman_previewlanguage": "json"
                    },
                    {
                      "id": "d92c064c-ebc4-4b36-bf93-df88f010ce15",
                      "name": "`Not Found`.",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "v1",
                            "projects",
                            ":project-key",
                            "import",
                            "execution",
                            "junit"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [
                            {
                              "key": "version",
                              "value": "{{version}}"
                            },
                            {
                              "key": "cycleName",
                              "value": "{{cycleName}}"
                            }
                          ],
                          "variable": [
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "{{project-key}}",
                              "key": "project-key",
                              "description": "(Required) "
                            }
                          ]
                        },
                        "header": [
                          {
                            "description": {
                              "content": "Added as a part of security scheme: apikey",
                              "type": "text/plain"
                            },
                            "key": "Authorization",
                            "value": "{{Authorization}}"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "method": "POST",
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"testsuite\": [\n        \"{{testsuite}}\"\n    ],\n    \"name\": \"{{name}}\"\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n  \"message\": \"not found\"\n}",
                      "cookie": [],
                      "_postman_previewlanguage": "json"
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "//Import necessary dependencies\nconst assert = require('chai').assert;\nconst myFunc = require('../src/myFunc.js');\n\n//Existing Test Case\ndescribe('myFunc()', function () {\n  it('should return “Hello, World!” when no parameters are provided', function() {\n    assert.equal(myFunc(), 'Hello, World!');\n  });\n});\n\n//Updated Test Case\ndescribe('myFunc(text)', function () {\n  it('should return text when one parameter is provided', function() {\n    let text = 'Artillery Test';\n    assert.equal(myFunc(text), 'Artillery Test');\n  });\n\n  it('should return “Hello, Artillery!” when the parameter is \"Artillery\"', function() {\n    assert.equal(myFunc('Artillery'), 'Hello, Artillery!');\n  });\n\n  it('should return responded error message for null parameter', function() {\n    assert.throws(() => { myFunc(null); }, Error, 'Invalid input');\n  });\n});\n"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  }
                }
              ],
              "event": []
            }
          ],
          "event": []
        },
        {
          "id": "790709df-e5b6-4c69-94a6-4ddefb7a6a7d",
          "name": "test-cases/search",
          "item": [
            null,
            null
          ],
          "event": []
        },
        null,
        {
          "id": "be225cfa-7f68-44f3-ab09-a1ea43930120",
          "name": "test-runs/scheme/{schemeName}/allowed-values",
          "item": [
            null,
            null
          ],
          "event": []
        }
      ],
      "event": []
    }
  ],
  "event": [],
  "variable": [
    {
      "type": "string",
      "value": "https://api.ttm4j.tricentis.com",
      "key": "baseUrl"
    },
    {
      "type": "integer",
      "value": 200,
      "key": "statusCode"
    }
  ],
  "auth": {
    "type": "apikey",
    "apikey": [
      {
        "key": "key",
        "value": "Authorization"
      },
      {
        "key": "value",
        "value": "{{apiKey}}"
      },
      {
        "key": "in",
        "value": "header"
      }
    ]
  },
  "info": {
    "_postman_id": "81a07f56-145b-45ba-a7e7-8201f59bf3c2",
    "name": "TTM for Jira",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": {
      "content": "Tricentis Test Management for Jira",
      "type": "text/plain"
    }
  }
}