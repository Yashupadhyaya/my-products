{
  "item": [
    {
      "id": "c61163a6-ae5b-40db-bb3e-0ee7e02933b2",
      "name": "context",
      "item": [
        {
          "id": "62686294-1b5c-4fda-844c-8578ff530891",
          "name": "List contexts",
          "request": {
            "name": "List contexts",
            "description": {
              "content": "List all contexts for an owner.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "context"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "owner-id",
                  "value": "<uuid>",
                  "description": "The unique ID of the owner of the context. Specify either this or owner-slug."
                },
                {
                  "disabled": false,
                  "key": "owner-slug",
                  "value": "<string>",
                  "description": "A string that represents an organization. Specify either this or owner-id. Cannot be used for accounts."
                },
                {
                  "disabled": false,
                  "key": "owner-type",
                  "value": "<string>",
                  "description": "The type of the owner. Defaults to \"organization\". Accounts are only used as context owners in server."
                },
                {
                  "disabled": false,
                  "key": "page-token",
                  "value": "<string>",
                  "description": "A token to retrieve the next page of results."
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": {
              "type": "apikey",
              "apikey": [
                {
                  "key": "key",
                  "value": "Circle-Token"
                },
                {
                  "key": "value",
                  "value": "{{apiKey}}"
                },
                {
                  "key": "in",
                  "value": "header"
                }
              ]
            }
          },
          "response": [
            {
              "id": "cef105e4-d508-4be0-a724-3b4872bc8222",
              "name": "A paginated list of contexts",
              "originalRequest": {
                "url": {
                  "path": [
                    "context"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "owner-id",
                      "value": "<uuid>"
                    },
                    {
                      "key": "owner-slug",
                      "value": "<string>"
                    },
                    {
                      "key": "owner-type",
                      "value": "<string>"
                    },
                    {
                      "key": "page-token",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "Circle-Token",
                    "value": "<API Key>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"items\": [\n    {\n      \"id\": \"bed9ddda-bfda-e4f0-b58a-3334c7fec808\",\n      \"name\": \"Duis et non incididunt\",\n      \"created_at\": \"2015-09-21T17:29:21.042Z\"\n    },\n    {\n      \"id\": \"8de50fcf-dc58-3caa-dcd8-4243c09d2594\",\n      \"name\": \"aliqua proident\",\n      \"created_at\": \"2015-09-21T17:29:21.042Z\"\n    }\n  ],\n  \"next_page_token\": \"sed amet dolore\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "22b6859b-6b43-4b8f-a3f1-0089f06a652a",
              "name": "Error response.",
              "originalRequest": {
                "url": {
                  "path": [
                    "context"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "owner-id",
                      "value": "<uuid>"
                    },
                    {
                      "key": "owner-slug",
                      "value": "<string>"
                    },
                    {
                      "key": "owner-type",
                      "value": "<string>"
                    },
                    {
                      "key": "page-token",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "Circle-Token",
                    "value": "<API Key>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"message\": \"laborum\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "ae8a20d0-97a6-496f-96dd-39cb84d43ce7",
          "name": "Create a new context",
          "request": {
            "name": "Create a new context",
            "description": {
              "content": "Creates a new context.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "context"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"<string>\",\n  \"owner\": {\n    \"id\": \"<uuid>\",\n    \"type\": \"<string>\"\n  }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "id": "4767496e-5e7c-4370-8d5c-293590d62cb1",
              "name": "The new context",
              "originalRequest": {
                "url": {
                  "path": [
                    "context"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "Circle-Token",
                    "value": "<API Key>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"<string>\",\n  \"owner\": {\n    \"id\": \"<uuid>\",\n    \"type\": \"organization\"\n  }\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"id\": \"164da542-2274-8d6f-4736-6926a833e8cd\",\n  \"name\": \"do veniam voluptate dolore\",\n  \"created_at\": \"2015-09-21T17:29:21.042Z\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "9880f8ec-c525-4752-9221-4775498e502b",
              "name": "Error response.",
              "originalRequest": {
                "url": {
                  "path": [
                    "context"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "Circle-Token",
                    "value": "<API Key>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"<string>\",\n  \"owner\": {\n    \"id\": \"<uuid>\",\n    \"type\": \"organization\"\n  }\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"message\": \"laborum\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "e5ad9e0d-22d3-4e86-a3fe-83b5e7da7372",
          "name": "{context-id}",
          "item": [
            {
              "id": "ddecd9a7-50fc-402d-8ff7-ab0d3090c157",
              "name": "Get a context",
              "request": {
                "name": "Get a context",
                "description": {
                  "content": "Returns basic information about a context.",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "context",
                    ":context-id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<uuid>",
                      "key": "context-id",
                      "description": "(Required) ID of the context (UUID)"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "auth": {
                  "type": "apikey",
                  "apikey": [
                    {
                      "key": "key",
                      "value": "circle-token"
                    },
                    {
                      "key": "value",
                      "value": "{{apiKey}}"
                    },
                    {
                      "key": "in",
                      "value": "query"
                    }
                  ]
                }
              },
              "response": [
                {
                  "id": "8cac5c55-7236-413d-a014-2b8c6406187a",
                  "name": "The context",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "context",
                        ":context-id"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "circle-token",
                          "value": "<API Key>"
                        }
                      ],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<uuid>",
                          "key": "context-id",
                          "description": "(Required) ID of the context (UUID)"
                        }
                      ]
                    },
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n  \"id\": \"164da542-2274-8d6f-4736-6926a833e8cd\",\n  \"name\": \"do veniam voluptate dolore\",\n  \"created_at\": \"2015-09-21T17:29:21.042Z\"\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json"
                },
                {
                  "id": "720ece8f-08fd-41d9-9e50-e291c3e319c8",
                  "name": "Error response.",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "context",
                        ":context-id"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "circle-token",
                          "value": "<API Key>"
                        }
                      ],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<uuid>",
                          "key": "context-id",
                          "description": "(Required) ID of the context (UUID)"
                        }
                      ]
                    },
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n  \"message\": \"laborum\"\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json"
                }
              ],
              "event": [],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              }
            },
            {
              "id": "0f033de8-b8ee-4886-9be0-3fe6fdbffb3e",
              "name": "Delete a context",
              "request": {
                "name": "Delete a context",
                "description": {},
                "url": {
                  "path": [
                    "context",
                    ":context-id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<uuid>",
                      "key": "context-id",
                      "description": "(Required) ID of the context (UUID)"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "DELETE",
                "auth": null
              },
              "response": [
                {
                  "id": "81d1695b-6437-4c27-ad9c-300a9cfed776",
                  "name": "A confirmation message",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "context",
                        ":context-id"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<uuid>",
                          "key": "context-id",
                          "description": "(Required) ID of the context (UUID)"
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "Added as a part of security scheme: apikey",
                          "type": "text/plain"
                        },
                        "key": "Circle-Token",
                        "value": "<API Key>"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "DELETE",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n  \"message\": \"pariat\"\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json"
                },
                {
                  "id": "4cf4bd08-bbb4-479f-9d3e-ffa6510ca669",
                  "name": "Error response.",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "context",
                        ":context-id"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<uuid>",
                          "key": "context-id",
                          "description": "(Required) ID of the context (UUID)"
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "Added as a part of security scheme: apikey",
                          "type": "text/plain"
                        },
                        "key": "Circle-Token",
                        "value": "<API Key>"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "DELETE",
                    "body": {}
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n  \"message\": \"laborum\"\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json"
                }
              ],
              "event": [],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              }
            },
            {
              "id": "a9e806c4-b448-4a0a-b5bb-7f4f287d2aab",
              "name": "environment-variable",
              "item": [
                {
                  "id": "e97c6d7c-9623-4d9a-8a15-9d911e1e2c20",
                  "name": "List environment variables",
                  "request": {
                    "name": "List environment variables",
                    "description": {
                      "content": "List information about environment variables in a context, not including their values.",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "context",
                        ":context-id",
                        "environment-variable"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "disabled": false,
                          "key": "page-token",
                          "value": "<string>",
                          "description": "A token to retrieve the next page of results."
                        }
                      ],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<uuid>",
                          "key": "context-id",
                          "description": "(Required) ID of the context (UUID)"
                        }
                      ]
                    },
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "GET",
                    "auth": {
                      "type": "basic",
                      "basic": [
                        {
                          "key": "username",
                          "value": "{{basicAuthUsername}}"
                        },
                        {
                          "key": "password",
                          "value": "{{basicAuthPassword}}"
                        }
                      ]
                    }
                  },
                  "response": [
                    {
                      "id": "d7730689-8278-4d44-9f1c-50e2d7d3da1d",
                      "name": "A paginated list of environment variables",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "context",
                            ":context-id",
                            "environment-variable"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [
                            {
                              "key": "page-token",
                              "value": "<string>"
                            }
                          ],
                          "variable": [
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<uuid>",
                              "key": "context-id",
                              "description": "(Required) ID of the context (UUID)"
                            }
                          ]
                        },
                        "header": [
                          {
                            "description": {
                              "content": "Added as a part of security scheme: basic",
                              "type": "text/plain"
                            },
                            "key": "Authorization",
                            "value": "Basic <credentials>"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "method": "GET",
                        "body": {}
                      },
                      "status": "OK",
                      "code": 200,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n  \"items\": [\n    {\n      \"variable\": \"POSTGRES_USER\",\n      \"created_at\": \"2015-09-21T17:29:21.042Z\",\n      \"updated_at\": \"2015-09-21T17:29:21.042Z\",\n      \"context_id\": \"ff4b738c-4f8b-5e96-9522-db05ddb725fa\"\n    },\n    {\n      \"variable\": \"POSTGRES_USER\",\n      \"created_at\": \"2015-09-21T17:29:21.042Z\",\n      \"updated_at\": \"2015-09-21T17:29:21.042Z\",\n      \"context_id\": \"urn:uuid:9cf64a30-47e4-a6ab-f2fb-b61cdb3e8d78\"\n    }\n  ],\n  \"next_page_token\": \"Ut Excepteur\"\n}",
                      "cookie": [],
                      "_postman_previewlanguage": "json"
                    },
                    {
                      "id": "be77e15c-80b1-4e54-aec7-c0281105cf39",
                      "name": "Error response.",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "context",
                            ":context-id",
                            "environment-variable"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [
                            {
                              "key": "page-token",
                              "value": "<string>"
                            }
                          ],
                          "variable": [
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<uuid>",
                              "key": "context-id",
                              "description": "(Required) ID of the context (UUID)"
                            }
                          ]
                        },
                        "header": [
                          {
                            "description": {
                              "content": "Added as a part of security scheme: basic",
                              "type": "text/plain"
                            },
                            "key": "Authorization",
                            "value": "Basic <credentials>"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Internal Server Error",
                      "code": 500,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n  \"message\": \"laborum\"\n}",
                      "cookie": [],
                      "_postman_previewlanguage": "json"
                    }
                  ],
                  "event": [],
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  }
                },
                {
                  "id": "e57e76d6-399c-4096-8588-57e4190f9a61",
                  "name": "{env-var-name}",
                  "item": [
                    {
                      "id": "4746c725-622b-4485-b7cd-e24ba25d374a",
                      "name": "Remove an environment variable",
                      "request": {
                        "name": "Remove an environment variable",
                        "description": {
                          "content": "Delete an environment variable from a context.",
                          "type": "text/plain"
                        },
                        "url": {
                          "path": [
                            "context",
                            ":context-id",
                            "environment-variable",
                            ":env-var-name"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "env-var-name",
                              "description": "(Required) The name of the environment variable"
                            },
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<uuid>",
                              "key": "context-id",
                              "description": "(Required) ID of the context (UUID)"
                            }
                          ]
                        },
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "method": "DELETE",
                        "auth": null
                      },
                      "response": [
                        {
                          "id": "010c5bd8-59d1-49e8-a99d-9ea3a9bb9480",
                          "name": "A confirmation message",
                          "originalRequest": {
                            "url": {
                              "path": [
                                "context",
                                ":context-id",
                                "environment-variable",
                                ":env-var-name"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [],
                              "variable": [
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "<string>",
                                  "key": "env-var-name",
                                  "description": "(Required) The name of the environment variable"
                                },
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "<uuid>",
                                  "key": "context-id",
                                  "description": "(Required) ID of the context (UUID)"
                                }
                              ]
                            },
                            "header": [
                              {
                                "description": {
                                  "content": "Added as a part of security scheme: apikey",
                                  "type": "text/plain"
                                },
                                "key": "Circle-Token",
                                "value": "<API Key>"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "method": "DELETE",
                            "body": {}
                          },
                          "status": "OK",
                          "code": 200,
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": "{\n  \"message\": \"pariat\"\n}",
                          "cookie": [],
                          "_postman_previewlanguage": "json"
                        },
                        {
                          "id": "fb2fa607-36b9-4470-b5d4-5f6272781cad",
                          "name": "Error response.",
                          "originalRequest": {
                            "url": {
                              "path": [
                                "context",
                                ":context-id",
                                "environment-variable",
                                ":env-var-name"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [],
                              "variable": [
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "<string>",
                                  "key": "env-var-name",
                                  "description": "(Required) The name of the environment variable"
                                },
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "<uuid>",
                                  "key": "context-id",
                                  "description": "(Required) ID of the context (UUID)"
                                }
                              ]
                            },
                            "header": [
                              {
                                "description": {
                                  "content": "Added as a part of security scheme: apikey",
                                  "type": "text/plain"
                                },
                                "key": "Circle-Token",
                                "value": "<API Key>"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "method": "DELETE",
                            "body": {}
                          },
                          "status": "Internal Server Error",
                          "code": 500,
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": "{\n  \"message\": \"laborum\"\n}",
                          "cookie": [],
                          "_postman_previewlanguage": "json"
                        }
                      ],
                      "event": [],
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      }
                    },
                    {
                      "id": "8eda5a33-0cc4-4fac-9b5f-bd1d9e491485",
                      "name": "Add or update an environment variable",
                      "request": {
                        "name": "Add or update an environment variable",
                        "description": {
                          "content": "Create or update an environment variable within a context. Returns information about the environment variable, not including its value.",
                          "type": "text/plain"
                        },
                        "url": {
                          "path": [
                            "context",
                            ":context-id",
                            "environment-variable",
                            ":env-var-name"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<uuid>",
                              "key": "context-id",
                              "description": "(Required) ID of the context (UUID)"
                            },
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "env-var-name",
                              "description": "(Required) The name of the environment variable"
                            }
                          ]
                        },
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "method": "PUT",
                        "auth": null,
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"value\": \"<string>\"\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        }
                      },
                      "response": [
                        {
                          "id": "a24c2dd5-e74e-469b-a9f7-37f92a79a2b0",
                          "name": "The new environment variable",
                          "originalRequest": {
                            "url": {
                              "path": [
                                "context",
                                ":context-id",
                                "environment-variable",
                                ":env-var-name"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [],
                              "variable": [
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "<uuid>",
                                  "key": "context-id",
                                  "description": "(Required) ID of the context (UUID)"
                                },
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "<string>",
                                  "key": "env-var-name",
                                  "description": "(Required) The name of the environment variable"
                                }
                              ]
                            },
                            "header": [
                              {
                                "description": {
                                  "content": "Added as a part of security scheme: apikey",
                                  "type": "text/plain"
                                },
                                "key": "Circle-Token",
                                "value": "<API Key>"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "method": "PUT",
                            "body": {
                              "mode": "raw",
                              "raw": "{\n  \"value\": \"some-secret-value\"\n}",
                              "options": {
                                "raw": {
                                  "language": "json"
                                }
                              }
                            }
                          },
                          "status": "OK",
                          "code": 200,
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": "{\n  \"variable\": \"POSTGRES_USER\",\n  \"created_at\": \"2015-09-21T17:29:21.042Z\",\n  \"updated_at\": \"2015-09-21T17:29:21.042Z\",\n  \"context_id\": \"urn:uuid:a3b52d5b-a899-3833-e579-adbc8cb86899\"\n}",
                          "cookie": [],
                          "_postman_previewlanguage": "json"
                        },
                        {
                          "id": "45608365-12c5-435d-a9c9-fb2785f841d2",
                          "name": "Error response.",
                          "originalRequest": {
                            "url": {
                              "path": [
                                "context",
                                ":context-id",
                                "environment-variable",
                                ":env-var-name"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [],
                              "variable": [
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "<uuid>",
                                  "key": "context-id",
                                  "description": "(Required) ID of the context (UUID)"
                                },
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "<string>",
                                  "key": "env-var-name",
                                  "description": "(Required) The name of the environment variable"
                                }
                              ]
                            },
                            "header": [
                              {
                                "description": {
                                  "content": "Added as a part of security scheme: apikey",
                                  "type": "text/plain"
                                },
                                "key": "Circle-Token",
                                "value": "<API Key>"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "method": "PUT",
                            "body": {
                              "mode": "raw",
                              "raw": "{\n  \"value\": \"some-secret-value\"\n}",
                              "options": {
                                "raw": {
                                  "language": "json"
                                }
                              }
                            }
                          },
                          "status": "Internal Server Error",
                          "code": 500,
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": "{\n  \"message\": \"laborum\"\n}",
                          "cookie": [],
                          "_postman_previewlanguage": "json"
                        }
                      ],
                      "event": [],
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      }
                    }
                  ],
                  "event": []
                }
              ],
              "event": []
            }
          ],
          "event": []
        },
        {
          "id": "0121e81a-ceae-4b56-9fa5-28e45707d51a",
          "name": "{context_id}/restrictions",
          "item": [
            {
              "id": "166fc14f-c719-418a-8684-e0fa9544891b",
              "name": "Get context restrictions",
              "request": {
                "name": "Get context restrictions",
                "description": {
                  "content": "Gets a list of project and expression restrictions associated with a context.",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "context",
                    ":context_id",
                    "restrictions"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "context_id",
                      "description": "(Required) An opaque identifier of a context."
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "auth": null
              },
              "response": [
                {
                  "id": "85182692-8ba0-4080-a0ef-bf01a0303042",
                  "name": "Successful response.",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "context",
                        ":context_id",
                        "restrictions"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "context_id",
                          "description": "(Required) An opaque identifier of a context."
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "Added as a part of security scheme: apikey",
                          "type": "text/plain"
                        },
                        "key": "Circle-Token",
                        "value": "<API Key>"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n  \"items\": [\n    {\n      \"context_id\": \"urn:uuid:5b1bbcf5-6505-0561-82d3-bff8c666ca10\",\n      \"id\": \"2b07c2cb-a704-3fd7-dac9-615d639632ab\",\n      \"project_id\": \"urn:uuid:93686ded-b8dc-9208-b9e1-466acf82c6de\",\n      \"name\": \"esse id aliquip dolore\",\n      \"restriction_type\": \"project\",\n      \"restriction_value\": \"quis sed\"\n    },\n    {\n      \"context_id\": \"eb7a4035-2f9f-43d4-9f40-85d06ad5e551\",\n      \"id\": \"urn:uuid:4168a557-2ab0-7921-deee-b56b1e46e398\",\n      \"project_id\": \"urn:uuid:662c2d42-e4a0-7e53-52ec-f140c0de37e8\",\n      \"name\": \"est elit eu aliqua\",\n      \"restriction_type\": \"project\",\n      \"restriction_value\": \"nostrud culpa\"\n    }\n  ],\n  \"next_page_token\": \"laborum in minim et incididunt\"\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json"
                },
                {
                  "id": "52e395bb-dd05-48c7-9131-2ff742ed0fcf",
                  "name": "Context ID provided is invalid.",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "context",
                        ":context_id",
                        "restrictions"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "context_id",
                          "description": "(Required) An opaque identifier of a context."
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "Added as a part of security scheme: apikey",
                          "type": "text/plain"
                        },
                        "key": "Circle-Token",
                        "value": "<API Key>"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n  \"message\": \"context_id is invalid.\"\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json"
                },
                {
                  "id": "b2388620-3c7d-43bf-bb0b-68ec65bbcad5",
                  "name": "Credentials provided are invalid.",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "context",
                        ":context_id",
                        "restrictions"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "context_id",
                          "description": "(Required) An opaque identifier of a context."
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "Added as a part of security scheme: apikey",
                          "type": "text/plain"
                        },
                        "key": "Circle-Token",
                        "value": "<API Key>"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Unauthorized",
                  "code": 401,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n  \"message\": \"Invalid token provided.\"\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json"
                },
                {
                  "id": "20cc5be0-ec2e-4ad1-b4c8-2c1e2235297c",
                  "name": "Entity not found.",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "context",
                        ":context_id",
                        "restrictions"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "context_id",
                          "description": "(Required) An opaque identifier of a context."
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "Added as a part of security scheme: apikey",
                          "type": "text/plain"
                        },
                        "key": "Circle-Token",
                        "value": "<API Key>"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n  \"message\": \"Context not found.\"\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json"
                },
                {
                  "id": "fa3277fb-24ee-4cec-b1ea-c9d710735099",
                  "name": "API rate limits exceeded.",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "context",
                        ":context_id",
                        "restrictions"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "context_id",
                          "description": "(Required) An opaque identifier of a context."
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "Added as a part of security scheme: apikey",
                          "type": "text/plain"
                        },
                        "key": "Circle-Token",
                        "value": "<API Key>"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Too Many Requests",
                  "code": 429,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n  \"message\": \"Rate limit exceeded.\"\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json"
                },
                {
                  "id": "a0f50582-9280-420e-9aac-e024f1151a53",
                  "name": "Internal server error.",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "context",
                        ":context_id",
                        "restrictions"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "context_id",
                          "description": "(Required) An opaque identifier of a context."
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "Added as a part of security scheme: apikey",
                          "type": "text/plain"
                        },
                        "key": "Circle-Token",
                        "value": "<API Key>"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n  \"message\": \"Internal server error.\"\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json"
                }
              ],
              "event": [],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              }
            },
            {
              "id": "78b7fe93-24f0-4546-98be-ec116dd6edc3",
              "name": "Create context restriction",
              "request": {
                "name": "Create context restriction",
                "description": {
                  "content": "Creates project or expression restriction on a context.",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "context",
                    ":context_id",
                    "restrictions"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "context_id",
                      "description": "(Required) An opaque identifier of a context."
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "auth": null,
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"project_id\": \"<uuid>\",\n  \"restriction_type\": \"<string>\",\n  \"restriction_value\": \"<string>\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [
                {
                  "id": "57610642-862a-496d-b709-b2afda7e52b1",
                  "name": "Successful response.",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "context",
                        ":context_id",
                        "restrictions"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "context_id",
                          "description": "(Required) An opaque identifier of a context."
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "Added as a part of security scheme: apikey",
                          "type": "text/plain"
                        },
                        "key": "Circle-Token",
                        "value": "<API Key>"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"project_id\": \"405d8375-3514-403b-8c43-83ae74cfe0e9\",\n  \"restriction_type\": \"project\",\n  \"restriction_value\": \"405d8375-3514-403b-8c43-83ae74cfe0e9\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    }
                  },
                  "status": "Created",
                  "code": 201,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n  \"id\": \"497f6eca-6276-4993-bfeb-53cbbbba6f08\",\n  \"project_id\": \"405d8375-3514-403b-8c43-83ae74cfe0e9\",\n  \"name\": \"project-name\",\n  \"restriction_type\": \"project\",\n  \"restriction_value\": \"405d8375-3514-403b-8c43-83ae74cfe0e9\"\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json"
                },
                {
                  "id": "7f9214fa-97e5-4313-a034-1975226d465d",
                  "name": "Bad request.",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "context",
                        ":context_id",
                        "restrictions"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "context_id",
                          "description": "(Required) An opaque identifier of a context."
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "Added as a part of security scheme: apikey",
                          "type": "text/plain"
                        },
                        "key": "Circle-Token",
                        "value": "<API Key>"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"project_id\": \"405d8375-3514-403b-8c43-83ae74cfe0e9\",\n  \"restriction_type\": \"project\",\n  \"restriction_value\": \"405d8375-3514-403b-8c43-83ae74cfe0e9\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n  \"message\": \"This restriction cannot be applied to this context.\"\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json"
                },
                {
                  "id": "b6c19429-3640-465f-934c-a16dfe828f93",
                  "name": "Credentials provided are invalid.",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "context",
                        ":context_id",
                        "restrictions"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "context_id",
                          "description": "(Required) An opaque identifier of a context."
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "Added as a part of security scheme: apikey",
                          "type": "text/plain"
                        },
                        "key": "Circle-Token",
                        "value": "<API Key>"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"project_id\": \"405d8375-3514-403b-8c43-83ae74cfe0e9\",\n  \"restriction_type\": \"project\",\n  \"restriction_value\": \"405d8375-3514-403b-8c43-83ae74cfe0e9\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    }
                  },
                  "status": "Unauthorized",
                  "code": 401,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n  \"message\": \"Invalid token provided.\"\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json"
                },
                {
                  "id": "a9109e39-b23b-4d91-9c16-78ec8cabdf65",
                  "name": "Entity not found.",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "context",
                        ":context_id",
                        "restrictions"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "context_id",
                          "description": "(Required) An opaque identifier of a context."
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "Added as a part of security scheme: apikey",
                          "type": "text/plain"
                        },
                        "key": "Circle-Token",
                        "value": "<API Key>"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"project_id\": \"405d8375-3514-403b-8c43-83ae74cfe0e9\",\n  \"restriction_type\": \"project\",\n  \"restriction_value\": \"405d8375-3514-403b-8c43-83ae74cfe0e9\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n  \"message\": \"Context not found.\"\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json"
                },
                {
                  "id": "5b72424d-8356-49e3-8d7a-f90e08ec523d",
                  "name": "Request conflict.",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "context",
                        ":context_id",
                        "restrictions"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "context_id",
                          "description": "(Required) An opaque identifier of a context."
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "Added as a part of security scheme: apikey",
                          "type": "text/plain"
                        },
                        "key": "Circle-Token",
                        "value": "<API Key>"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"project_id\": \"405d8375-3514-403b-8c43-83ae74cfe0e9\",\n  \"restriction_type\": \"project\",\n  \"restriction_value\": \"405d8375-3514-403b-8c43-83ae74cfe0e9\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    }
                  },
                  "status": "Conflict",
                  "code": 409,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n  \"message\": \"The restriction you're trying to add already exists.\"\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json"
                },
                {
                  "id": "e30a4048-0f59-4dc8-995b-f91ebe47a8ff",
                  "name": "API rate limits exceeded.",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "context",
                        ":context_id",
                        "restrictions"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "context_id",
                          "description": "(Required) An opaque identifier of a context."
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "Added as a part of security scheme: apikey",
                          "type": "text/plain"
                        },
                        "key": "Circle-Token",
                        "value": "<API Key>"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"project_id\": \"405d8375-3514-403b-8c43-83ae74cfe0e9\",\n  \"restriction_type\": \"project\",\n  \"restriction_value\": \"405d8375-3514-403b-8c43-83ae74cfe0e9\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    }
                  },
                  "status": "Too Many Requests",
                  "code": 429,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n  \"message\": \"Rate limit exceeded.\"\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json"
                },
                {
                  "id": "ad18e73e-f61e-486a-a84b-fe286f57647a",
                  "name": "Internal server error.",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "context",
                        ":context_id",
                        "restrictions"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "context_id",
                          "description": "(Required) An opaque identifier of a context."
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "Added as a part of security scheme: apikey",
                          "type": "text/plain"
                        },
                        "key": "Circle-Token",
                        "value": "<API Key>"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"project_id\": \"405d8375-3514-403b-8c43-83ae74cfe0e9\",\n  \"restriction_type\": \"project\",\n  \"restriction_value\": \"405d8375-3514-403b-8c43-83ae74cfe0e9\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n  \"message\": \"Internal server error.\"\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json"
                }
              ],
              "event": [],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              }
            },
            {
              "id": "7b92585e-d7c6-481a-8e1a-8e41d924d262",
              "name": "Delete context restriction",
              "request": {
                "name": "Delete context restriction",
                "description": {
                  "content": "Deletes a project or expression restriction on a context.",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "context",
                    ":context_id",
                    "restrictions",
                    ":restriction_id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "context_id",
                      "description": "(Required) An opaque identifier of a context."
                    },
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "restriction_id",
                      "description": "(Required) An opaque identifier of a context restriction."
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "DELETE",
                "auth": null
              },
              "response": [
                {
                  "id": "275a06b8-7b51-4897-9ad6-ba8c0a09aa62",
                  "name": "Successful response.",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "context",
                        ":context_id",
                        "restrictions",
                        ":restriction_id"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "context_id",
                          "description": "(Required) An opaque identifier of a context."
                        },
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "restriction_id",
                          "description": "(Required) An opaque identifier of a context restriction."
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "Added as a part of security scheme: apikey",
                          "type": "text/plain"
                        },
                        "key": "Circle-Token",
                        "value": "<API Key>"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "DELETE",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n  \"message\": \"Context restriction deleted.\"\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json"
                },
                {
                  "id": "df8b1a43-81cd-48b6-af03-a3ef06a543e6",
                  "name": "Context restriction ID provided is invalid.",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "context",
                        ":context_id",
                        "restrictions",
                        ":restriction_id"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "context_id",
                          "description": "(Required) An opaque identifier of a context."
                        },
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "restriction_id",
                          "description": "(Required) An opaque identifier of a context restriction."
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "Added as a part of security scheme: apikey",
                          "type": "text/plain"
                        },
                        "key": "Circle-Token",
                        "value": "<API Key>"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "DELETE",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n  \"message\": \"restriction_id is invalid.\"\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json"
                },
                {
                  "id": "d1ff4816-e683-457e-b96d-9bb7a972cd0e",
                  "name": "Credentials provided are invalid.",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "context",
                        ":context_id",
                        "restrictions",
                        ":restriction_id"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "context_id",
                          "description": "(Required) An opaque identifier of a context."
                        },
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "restriction_id",
                          "description": "(Required) An opaque identifier of a context restriction."
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "Added as a part of security scheme: apikey",
                          "type": "text/plain"
                        },
                        "key": "Circle-Token",
                        "value": "<API Key>"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "DELETE",
                    "body": {}
                  },
                  "status": "Unauthorized",
                  "code": 401,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n  \"message\": \"Invalid token provided.\"\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json"
                },
                {
                  "id": "b5b89145-b69f-4f9b-a8e5-387cd0f41902",
                  "name": "Entity not found.",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "context",
                        ":context_id",
                        "restrictions",
                        ":restriction_id"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "context_id",
                          "description": "(Required) An opaque identifier of a context."
                        },
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "restriction_id",
                          "description": "(Required) An opaque identifier of a context restriction."
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "Added as a part of security scheme: apikey",
                          "type": "text/plain"
                        },
                        "key": "Circle-Token",
                        "value": "<API Key>"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "DELETE",
                    "body": {}
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n  \"message\": \"Context not found.\"\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json"
                },
                {
                  "id": "6168d676-892d-4f09-95d1-e6c632a1208e",
                  "name": "API rate limits exceeded.",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "context",
                        ":context_id",
                        "restrictions",
                        ":restriction_id"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "context_id",
                          "description": "(Required) An opaque identifier of a context."
                        },
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "restriction_id",
                          "description": "(Required) An opaque identifier of a context restriction."
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "Added as a part of security scheme: apikey",
                          "type": "text/plain"
                        },
                        "key": "Circle-Token",
                        "value": "<API Key>"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "DELETE",
                    "body": {}
                  },
                  "status": "Too Many Requests",
                  "code": 429,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n  \"message\": \"Rate limit exceeded.\"\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json"
                },
                {
                  "id": "26a16a53-c9aa-4958-a036-8af0fdd7883d",
                  "name": "Internal server error.",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "context",
                        ":context_id",
                        "restrictions",
                        ":restriction_id"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "context_id",
                          "description": "(Required) An opaque identifier of a context."
                        },
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "restriction_id",
                          "description": "(Required) An opaque identifier of a context restriction."
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "Added as a part of security scheme: apikey",
                          "type": "text/plain"
                        },
                        "key": "Circle-Token",
                        "value": "<API Key>"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "DELETE",
                    "body": {}
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n  \"message\": \"Internal server error.\"\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json"
                }
              ],
              "event": [],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              }
            }
          ],
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "df438f2f-747f-4eb8-b351-da4216d0b844",
      "name": "insights",
      "item": [
        {
          "id": "e0562ef5-58ec-491a-8a5e-e75cbe9acdd8",
          "name": "Get summary metrics and trends for a project across it's workflows and branches",
          "request": {
            "name": "Get summary metrics and trends for a project across it's workflows and branches",
            "description": {
              "content": "Get summary metrics and trends for a project at workflow and branch level.\n             Workflow runs going back at most 90 days are included in the aggregation window.\n             Trends are only supported upto last 30 days.\n             Please note that Insights is not a financial reporting tool and should not be used for precise credit reporting.  Credit reporting from Insights does not use the same source of truth as the billing information that is found in the Plan Overview page in the CircleCI UI, nor does the underlying data have the same data accuracy guarantees as the billing information in the CircleCI UI.  This may lead to discrepancies between credits reported from Insights and the billing information in the Plan Overview page of the CircleCI UI.  For precise credit reporting, always use the Plan Overview page in the CircleCI UI.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "insights",
                "pages",
                ":project-slug",
                "summary"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "reporting-window",
                  "value": "<string>",
                  "description": "The time window used to calculate summary metrics. If not provided, defaults to last-90-days"
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "project-slug",
                  "description": "(Required) Project slug in the form `vcs-slug/org-name/repo-name`. The `/` characters may be URL-escaped. For projects that use GitLab or GitHub App, use `circleci` as the `vcs-slug`, replace `org-name` with the organization ID (found in Organization Settings), and replace `repo-name` with the project ID (found in Project Settings)."
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "adca6dec-31c4-4b6f-a834-f2cdd9ab440b",
              "name": "Aggregated summary metrics and trends by workflow and branches",
              "originalRequest": {
                "url": {
                  "path": [
                    "insights",
                    "pages",
                    ":project-slug",
                    "summary"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "reporting-window",
                      "value": "last-90-days"
                    }
                  ],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "project-slug",
                      "description": "(Required) Project slug in the form `vcs-slug/org-name/repo-name`. The `/` characters may be URL-escaped. For projects that use GitLab or GitHub App, use `circleci` as the `vcs-slug`, replace `org-name` with the organization ID (found in Organization Settings), and replace `repo-name` with the project ID (found in Project Settings)."
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "Circle-Token",
                    "value": "<API Key>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"org_id\": {},\n  \"project_id\": {},\n  \"project_data\": {\n    \"metrics\": {\n      \"total_runs\": 3086265,\n      \"total_duration_secs\": 39990149,\n      \"total_credits_used\": 8075181,\n      \"success_rate\": -60440989.03043227,\n      \"throughput\": 33904436.2665713\n    },\n    \"trends\": {\n      \"total_runs\": 18679239.84663391,\n      \"total_duration_secs\": -28382112.715491652,\n      \"total_credits_used\": 84974085.68496042,\n      \"success_rate\": 48967264.03304905,\n      \"throughput\": 23262786.899558336\n    }\n  },\n  \"project_workflow_data\": [\n    {\n      \"workflow_name\": \"build-and-test\",\n      \"metrics\": {\n        \"total_credits_used\": 66680100,\n        \"p95_duration_secs\": 60582984.91170469,\n        \"total_runs\": 45649316,\n        \"success_rate\": -65260000.88457082\n      },\n      \"trends\": {\n        \"total_credits_used\": -87257453.46586296,\n        \"p95_duration_secs\": -27847553.794782788,\n        \"total_runs\": 88799046.07384393,\n        \"success_rate\": 95849953.06864932\n      }\n    },\n    {\n      \"workflow_name\": \"build-and-test\",\n      \"metrics\": {\n        \"total_credits_used\": 9242829,\n        \"p95_duration_secs\": -16755200.804601595,\n        \"total_runs\": 1244413,\n        \"success_rate\": 9695267.5674939\n      },\n      \"trends\": {\n        \"total_credits_used\": 63774511.49063584,\n        \"p95_duration_secs\": 79489566.46870294,\n        \"total_runs\": -29881883.48909983,\n        \"success_rate\": 82842500.06014138\n      }\n    }\n  ],\n  \"project_workflow_branch_data\": [\n    {\n      \"workflow_name\": \"build-and-test\",\n      \"branch\": \"main\",\n      \"metrics\": {\n        \"total_credits_used\": 11439959,\n        \"p95_duration_secs\": -99412937.36685699,\n        \"total_runs\": 66721758,\n        \"success_rate\": 71572274.21336114\n      },\n      \"trends\": {\n        \"total_credits_used\": -9592667.267427891,\n        \"p95_duration_secs\": -19615174.328420743,\n        \"total_runs\": -45456082.42805508,\n        \"success_rate\": -29486773.50675845\n      }\n    },\n    {\n      \"workflow_name\": \"build-and-test\",\n      \"branch\": \"main\",\n      \"metrics\": {\n        \"total_credits_used\": 56031498,\n        \"p95_duration_secs\": -67996276.49216431,\n        \"total_runs\": 90110516,\n        \"success_rate\": 87503020.04400498\n      },\n      \"trends\": {\n        \"total_credits_used\": 31500486.25078918,\n        \"p95_duration_secs\": 20111747.439971685,\n        \"total_runs\": -36006714.22011783,\n        \"success_rate\": -36364552.78024426\n      }\n    }\n  ],\n  \"all_branches\": [\n    \"main\",\n    \"main\"\n  ],\n  \"all_workflows\": [\n    \"build-and-test\",\n    \"build-and-test\"\n  ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "3b117858-ebd3-44d2-a103-9cd0b475ac98",
              "name": "Error response.",
              "originalRequest": {
                "url": {
                  "path": [
                    "insights",
                    "pages",
                    ":project-slug",
                    "summary"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "reporting-window",
                      "value": "last-90-days"
                    }
                  ],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "project-slug",
                      "description": "(Required) Project slug in the form `vcs-slug/org-name/repo-name`. The `/` characters may be URL-escaped. For projects that use GitLab or GitHub App, use `circleci` as the `vcs-slug`, replace `org-name` with the organization ID (found in Organization Settings), and replace `repo-name` with the project ID (found in Project Settings)."
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "Circle-Token",
                    "value": "<API Key>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"message\": \"laborum\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "134ad99e-f2aa-433f-b5e8-92b762e466d5",
          "name": "Job timeseries data",
          "request": {
            "name": "Job timeseries data",
            "description": {
              "content": "Get timeseries data for all jobs within a workflow. Hourly granularity data is only retained for 48 hours while daily granularity data is retained for 90 days.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "insights",
                "time-series",
                ":project-slug",
                "workflows",
                ":workflow-name",
                "jobs"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "branch",
                  "value": "<string>",
                  "description": "The name of a vcs branch. If not passed we will scope the API call to the default branch."
                },
                {
                  "disabled": false,
                  "key": "granularity",
                  "value": "<string>",
                  "description": "The granularity for which to query timeseries data."
                },
                {
                  "disabled": false,
                  "key": "start-date",
                  "value": "<dateTime>",
                  "description": "Include only executions that started at or after this date. This must be specified if an end-date is provided."
                },
                {
                  "disabled": false,
                  "key": "end-date",
                  "value": "<dateTime>",
                  "description": "Include only executions that started before this date. This date can be at most 90 days after the start-date."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "project-slug",
                  "description": "(Required) Project slug in the form `vcs-slug/org-name/repo-name`. The `/` characters may be URL-escaped. For projects that use GitLab or GitHub App, use `circleci` as the `vcs-slug`, replace `org-name` with the organization ID (found in Organization Settings), and replace `repo-name` with the project ID (found in Project Settings)."
                },
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "workflow-name",
                  "description": "(Required) The name of the workflow."
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "830f1587-ded0-432a-b0da-0cbc3f085c14",
              "name": "An array of timeseries data, one entry per job.",
              "originalRequest": {
                "url": {
                  "path": [
                    "insights",
                    "time-series",
                    ":project-slug",
                    "workflows",
                    ":workflow-name",
                    "jobs"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "branch",
                      "value": "<string>"
                    },
                    {
                      "key": "granularity",
                      "value": "hourly"
                    },
                    {
                      "key": "start-date",
                      "value": "2020-08-21T13:26:29Z"
                    },
                    {
                      "key": "end-date",
                      "value": "2020-09-04T13:26:29Z"
                    }
                  ],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "project-slug",
                      "description": "(Required) Project slug in the form `vcs-slug/org-name/repo-name`. The `/` characters may be URL-escaped. For projects that use GitLab or GitHub App, use `circleci` as the `vcs-slug`, replace `org-name` with the organization ID (found in Organization Settings), and replace `repo-name` with the project ID (found in Project Settings)."
                    },
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "workflow-name",
                      "description": "(Required) The name of the workflow."
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "Circle-Token",
                    "value": "<API Key>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"next_page_token\": \"anim velit est\",\n  \"items\": [\n    {\n      \"name\": \"build-and-test\",\n      \"min_started_at\": \"2009-07-04T06:30:26.308Z\",\n      \"max_ended_at\": \"1964-01-10T03:42:17.062Z\",\n      \"timestamp\": \"2020-08-08T09:01:42.177Z\",\n      \"metrics\": {\n        \"total_runs\": 16944890,\n        \"failed_runs\": 73649601,\n        \"successful_runs\": 33610502,\n        \"throughput\": -41185707.34174578,\n        \"median_credits_used\": 38024256,\n        \"total_credits_used\": 37419483,\n        \"duration_metrics\": {\n          \"min\": 35139141,\n          \"median\": 66301926,\n          \"max\": 85995517,\n          \"p95\": 48771111,\n          \"total\": 93935208\n        }\n      }\n    },\n    {\n      \"name\": \"build-and-test\",\n      \"min_started_at\": \"1959-09-10T06:43:33.111Z\",\n      \"max_ended_at\": \"2004-10-30T10:03:30.846Z\",\n      \"timestamp\": \"1961-12-20T16:49:46.940Z\",\n      \"metrics\": {\n        \"total_runs\": 18455937,\n        \"failed_runs\": 35711641,\n        \"successful_runs\": 90903106,\n        \"throughput\": 13151704.655934632,\n        \"median_credits_used\": 80492387,\n        \"total_credits_used\": 68625154,\n        \"duration_metrics\": {\n          \"min\": 97637002,\n          \"median\": 7086863,\n          \"max\": 85159405,\n          \"p95\": 5635516,\n          \"total\": 42960145\n        }\n      }\n    }\n  ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "4699d950-1881-42c8-b228-b990644a6c9a",
              "name": "Error response.",
              "originalRequest": {
                "url": {
                  "path": [
                    "insights",
                    "time-series",
                    ":project-slug",
                    "workflows",
                    ":workflow-name",
                    "jobs"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "branch",
                      "value": "<string>"
                    },
                    {
                      "key": "granularity",
                      "value": "hourly"
                    },
                    {
                      "key": "start-date",
                      "value": "2020-08-21T13:26:29Z"
                    },
                    {
                      "key": "end-date",
                      "value": "2020-09-04T13:26:29Z"
                    }
                  ],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "project-slug",
                      "description": "(Required) Project slug in the form `vcs-slug/org-name/repo-name`. The `/` characters may be URL-escaped. For projects that use GitLab or GitHub App, use `circleci` as the `vcs-slug`, replace `org-name` with the organization ID (found in Organization Settings), and replace `repo-name` with the project ID (found in Project Settings)."
                    },
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "workflow-name",
                      "description": "(Required) The name of the workflow."
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "Circle-Token",
                    "value": "<API Key>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"message\": \"laborum\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "62a20e34-e5d0-4583-8467-3ec6d18d1707",
          "name": "Get summary metrics with trends for the entire org, and for each project.",
          "request": {
            "name": "Get summary metrics with trends for the entire org, and for each project.",
            "description": {
              "content": "Gets aggregated summary metrics with trends for the entire org.\n              Also gets aggregated metrics and trends for each project belonging to the org.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "insights",
                ":org-slug",
                "summary"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "reporting-window",
                  "value": "<string>",
                  "description": "The time window used to calculate summary metrics. If not provided, defaults to last-90-days"
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "org-slug",
                  "description": "(Required) Org slug in the form `vcs-slug/org-name`. The `/` characters may be URL-escaped."
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "a7579c72-4864-4895-9710-13ca26a9a24d",
              "name": "summary metrics with trends for an entire org and it's projects.",
              "originalRequest": {
                "url": {
                  "path": [
                    "insights",
                    ":org-slug",
                    "summary"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "reporting-window",
                      "value": "last-90-days"
                    }
                  ],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "org-slug",
                      "description": "(Required) Org slug in the form `vcs-slug/org-name`. The `/` characters may be URL-escaped."
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "Circle-Token",
                    "value": "<API Key>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"org_data\": {\n    \"metrics\": {\n      \"total_runs\": 97518761,\n      \"total_duration_secs\": 68386645,\n      \"total_credits_used\": 9139863,\n      \"success_rate\": -37578864.57656099,\n      \"throughput\": -83465145.28057116\n    },\n    \"trends\": {\n      \"total_runs\": -55594192.64942136,\n      \"total_duration_secs\": 58977748.49368745,\n      \"total_credits_used\": -92456274.42957218,\n      \"success_rate\": -92880912.85143162,\n      \"throughput\": -20238738.398749277\n    }\n  },\n  \"org_project_data\": [\n    {\n      \"project_name\": \"api-preview-docs\",\n      \"metrics\": {\n        \"total_credits_used\": 96593974,\n        \"total_duration_secs\": 26387943,\n        \"total_runs\": 23141207,\n        \"success_rate\": -10562761.324212208\n      },\n      \"trends\": {\n        \"total_credits_used\": -48107528.41612778,\n        \"total_duration_secs\": -99656992.08349875,\n        \"total_runs\": 56617901.51813632,\n        \"success_rate\": -99133529.04650354\n      }\n    },\n    {\n      \"project_name\": \"api-preview-docs\",\n      \"metrics\": {\n        \"total_credits_used\": 39121080,\n        \"total_duration_secs\": 88514242,\n        \"total_runs\": 10290676,\n        \"success_rate\": -41428162.60979938\n      },\n      \"trends\": {\n        \"total_credits_used\": -79243556.36549221,\n        \"total_duration_secs\": -31420442.21594879,\n        \"total_runs\": 19538353.67026025,\n        \"success_rate\": 90537227.70591906\n      }\n    }\n  ],\n  \"all_projects\": [\n    \"qui proident eu in cillum\",\n    \"cillum Ut\"\n  ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "08bcfd43-7b6f-41ff-a186-dea0abf9fc25",
              "name": "Error response.",
              "originalRequest": {
                "url": {
                  "path": [
                    "insights",
                    ":org-slug",
                    "summary"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "reporting-window",
                      "value": "last-90-days"
                    }
                  ],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "org-slug",
                      "description": "(Required) Org slug in the form `vcs-slug/org-name`. The `/` characters may be URL-escaped."
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "Circle-Token",
                    "value": "<API Key>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"message\": \"laborum\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "9ce2ec5b-6f86-46ed-99b5-bdf3af0590bc",
          "name": "{project-slug}",
          "item": [
            {
              "id": "dbdf6c46-92df-44d0-98db-92a11f78cfc1",
              "name": "Get all branches for a project",
              "request": {
                "name": "Get all branches for a project",
                "description": {
                  "content": "Get a list of all branches for a specified project. The list will only contain branches currently available within Insights. The maximum number of branches returned by this endpoint is 5,000.",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "insights",
                    ":project-slug",
                    "branches"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "disabled": false,
                      "key": "workflow-name",
                      "value": "<string>",
                      "description": "The name of a workflow. If not passed we will scope the API call to the project."
                    }
                  ],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "project-slug",
                      "description": "(Required) Project slug in the form `vcs-slug/org-name/repo-name`. The `/` characters may be URL-escaped. For projects that use GitLab or GitHub App, use `circleci` as the `vcs-slug`, replace `org-name` with the organization ID (found in Organization Settings), and replace `repo-name` with the project ID (found in Project Settings)."
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "auth": null
              },
              "response": [
                {
                  "id": "47854f8b-8a25-4233-a3d7-d0b87c8cace9",
                  "name": "A list of branches for a project",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "insights",
                        ":project-slug",
                        "branches"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "workflow-name",
                          "value": "build-and-test"
                        }
                      ],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "project-slug",
                          "description": "(Required) Project slug in the form `vcs-slug/org-name/repo-name`. The `/` characters may be URL-escaped. For projects that use GitLab or GitHub App, use `circleci` as the `vcs-slug`, replace `org-name` with the organization ID (found in Organization Settings), and replace `repo-name` with the project ID (found in Project Settings)."
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "Added as a part of security scheme: apikey",
                          "type": "text/plain"
                        },
                        "key": "Circle-Token",
                        "value": "<API Key>"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n  \"org_id\": {},\n  \"project_id\": {},\n  \"branches\": [\n    \"main\",\n    \"main\"\n  ]\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json"
                },
                {
                  "id": "1c264a70-3111-4076-9838-76aa33978058",
                  "name": "Error response.",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "insights",
                        ":project-slug",
                        "branches"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "workflow-name",
                          "value": "build-and-test"
                        }
                      ],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "project-slug",
                          "description": "(Required) Project slug in the form `vcs-slug/org-name/repo-name`. The `/` characters may be URL-escaped. For projects that use GitLab or GitHub App, use `circleci` as the `vcs-slug`, replace `org-name` with the organization ID (found in Organization Settings), and replace `repo-name` with the project ID (found in Project Settings)."
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "Added as a part of security scheme: apikey",
                          "type": "text/plain"
                        },
                        "key": "Circle-Token",
                        "value": "<API Key>"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n  \"message\": \"laborum\"\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json"
                }
              ],
              "event": [],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              }
            },
            {
              "id": "b1495b70-55ff-4532-9a85-b8ec69c4a7ea",
              "name": "Get flaky tests for a project",
              "request": {
                "name": "Get flaky tests for a project",
                "description": {
                  "content": "Get a list of flaky tests for a given project. Flaky tests are branch agnostic.\n             A flaky test is a test that passed and failed in the same commit.",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "insights",
                    ":project-slug",
                    "flaky-tests"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "project-slug",
                      "description": "(Required) Project slug in the form `vcs-slug/org-name/repo-name`. The `/` characters may be URL-escaped. For projects that use GitLab or GitHub App, use `circleci` as the `vcs-slug`, replace `org-name` with the organization ID (found in Organization Settings), and replace `repo-name` with the project ID (found in Project Settings)."
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "auth": null
              },
              "response": [
                {
                  "id": "763dfcae-1c1c-4d2c-b5e7-0f4ed5170613",
                  "name": "A list of flaky tests for a project",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "insights",
                        ":project-slug",
                        "flaky-tests"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "project-slug",
                          "description": "(Required) Project slug in the form `vcs-slug/org-name/repo-name`. The `/` characters may be URL-escaped. For projects that use GitLab or GitHub App, use `circleci` as the `vcs-slug`, replace `org-name` with the organization ID (found in Organization Settings), and replace `repo-name` with the project ID (found in Project Settings)."
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "Added as a part of security scheme: apikey",
                          "type": "text/plain"
                        },
                        "key": "Circle-Token",
                        "value": "<API Key>"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n  \"flaky-tests\": [\n    {\n      \"workflow-created-at\": \"culpa magna commodo irure nostrud\",\n      \"classname\": \"consequat\",\n      \"job-number\": 63554892,\n      \"times-flaked\": 60035242,\n      \"source\": \"id ad pariatur\",\n      \"pipeline-number\": 76506344,\n      \"file\": \"tempor sint nulla magna ani\",\n      \"workflow-name\": \"aliquip enim id\",\n      \"job-name\": \"esse labore\",\n      \"workflow-id\": {},\n      \"test-name\": \"consectetur adipisicing sed culpa est\",\n      \"time-wasted\": 18073164\n    },\n    {\n      \"workflow-created-at\": \"pariatur laboris consectetur Ut\",\n      \"classname\": \"occaecat quis aute cillum irure\",\n      \"job-number\": 84690625,\n      \"times-flaked\": 83197275,\n      \"source\": \"ut officia sit\",\n      \"pipeline-number\": 84541389,\n      \"file\": \"adipisicing labore reprehenderit cillum\",\n      \"workflow-name\": \"aliqua\",\n      \"job-name\": \"dolor est consequat dolore\",\n      \"workflow-id\": {},\n      \"test-name\": \"nisi qui\",\n      \"time-wasted\": 69749718\n    }\n  ],\n  \"total-flaky-tests\": 5\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json"
                },
                {
                  "id": "e670465c-a9d0-4b8b-b163-dc953ab4088b",
                  "name": "Error response.",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "insights",
                        ":project-slug",
                        "flaky-tests"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "project-slug",
                          "description": "(Required) Project slug in the form `vcs-slug/org-name/repo-name`. The `/` characters may be URL-escaped. For projects that use GitLab or GitHub App, use `circleci` as the `vcs-slug`, replace `org-name` with the organization ID (found in Organization Settings), and replace `repo-name` with the project ID (found in Project Settings)."
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "Added as a part of security scheme: apikey",
                          "type": "text/plain"
                        },
                        "key": "Circle-Token",
                        "value": "<API Key>"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n  \"message\": \"laborum\"\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json"
                }
              ],
              "event": [],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              }
            },
            {
              "id": "235cbec4-eaa3-4f26-8b47-b2d097ccff90",
              "name": "workflows",
              "item": [
                {
                  "id": "688f81eb-caad-4181-ab03-72ba9c673db5",
                  "name": "Get summary metrics for a project's workflows",
                  "request": {
                    "name": "Get summary metrics for a project's workflows",
                    "description": {
                      "content": "Get summary metrics for a project's workflows.  Workflow runs going back at most 90 days are included in the aggregation window. Metrics are refreshed daily, and thus may not include executions from the last 24 hours.  Please note that Insights is not a financial reporting tool and should not be used for precise credit reporting.  Credit reporting from Insights does not use the same source of truth as the billing information that is found in the Plan Overview page in the CircleCI UI, nor does the underlying data have the same data accuracy guarantees as the billing information in the CircleCI UI.  This may lead to discrepancies between credits reported from Insights and the billing information in the Plan Overview page of the CircleCI UI.  For precise credit reporting, always use the Plan Overview page in the CircleCI UI.",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "insights",
                        ":project-slug",
                        "workflows"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "disabled": false,
                          "key": "page-token",
                          "value": "<string>",
                          "description": "A token to retrieve the next page of results."
                        },
                        {
                          "disabled": false,
                          "key": "all-branches",
                          "value": "<boolean>",
                          "description": "Whether to retrieve data for all branches combined. Use either this parameter OR the branch name parameter."
                        },
                        {
                          "disabled": false,
                          "key": "branch",
                          "value": "<string>",
                          "description": "The name of a vcs branch. If not passed we will scope the API call to the default branch."
                        },
                        {
                          "disabled": false,
                          "key": "reporting-window",
                          "value": "<string>",
                          "description": "The time window used to calculate summary metrics. If not provided, defaults to last-90-days"
                        }
                      ],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "project-slug",
                          "description": "(Required) Project slug in the form `vcs-slug/org-name/repo-name`. The `/` characters may be URL-escaped. For projects that use GitLab or GitHub App, use `circleci` as the `vcs-slug`, replace `org-name` with the organization ID (found in Organization Settings), and replace `repo-name` with the project ID (found in Project Settings)."
                        }
                      ]
                    },
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "GET",
                    "auth": null
                  },
                  "response": [
                    {
                      "id": "9082d672-9e19-4016-a436-b75cb9798fda",
                      "name": "A paginated list of summary metrics by workflow",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "insights",
                            ":project-slug",
                            "workflows"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [
                            {
                              "key": "page-token",
                              "value": "<string>"
                            },
                            {
                              "key": "all-branches",
                              "value": "<boolean>"
                            },
                            {
                              "key": "branch",
                              "value": "<string>"
                            },
                            {
                              "key": "reporting-window",
                              "value": "last-90-days"
                            }
                          ],
                          "variable": [
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "project-slug",
                              "description": "(Required) Project slug in the form `vcs-slug/org-name/repo-name`. The `/` characters may be URL-escaped. For projects that use GitLab or GitHub App, use `circleci` as the `vcs-slug`, replace `org-name` with the organization ID (found in Organization Settings), and replace `repo-name` with the project ID (found in Project Settings)."
                            }
                          ]
                        },
                        "header": [
                          {
                            "description": {
                              "content": "Added as a part of security scheme: apikey",
                              "type": "text/plain"
                            },
                            "key": "Circle-Token",
                            "value": "<API Key>"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "method": "GET",
                        "body": {}
                      },
                      "status": "OK",
                      "code": 200,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n  \"items\": [\n    {\n      \"name\": \"build-and-test\",\n      \"metrics\": {\n        \"total_runs\": 96265033,\n        \"successful_runs\": 54554364,\n        \"mttr\": 93370660,\n        \"total_credits_used\": 92382937,\n        \"failed_runs\": 81253483,\n        \"success_rate\": 88701897.52864715,\n        \"duration_metrics\": {\n          \"min\": 90658812,\n          \"mean\": 81175286,\n          \"median\": 44512036,\n          \"p95\": 6320416,\n          \"max\": 2770266,\n          \"standard_deviation\": 26185191.8582038\n        },\n        \"total_recoveries\": 66265681,\n        \"throughput\": -42745984.92418011\n      },\n      \"window_start\": \"2024-02-08T11:39:10.609Z\",\n      \"window_end\": \"1964-09-10T05:27:29.621Z\",\n      \"project_id\": {}\n    },\n    {\n      \"name\": \"build-and-test\",\n      \"metrics\": {\n        \"total_runs\": 93911309,\n        \"successful_runs\": 4167060,\n        \"mttr\": 21406161,\n        \"total_credits_used\": 92670144,\n        \"failed_runs\": 33424854,\n        \"success_rate\": 71197339.74130389,\n        \"duration_metrics\": {\n          \"min\": 63260782,\n          \"mean\": 77929340,\n          \"median\": 88003013,\n          \"p95\": 78014814,\n          \"max\": 35699641,\n          \"standard_deviation\": 11087652.148296505\n        },\n        \"total_recoveries\": 92953504,\n        \"throughput\": -58354849.935374275\n      },\n      \"window_start\": \"1987-10-12T03:42:55.560Z\",\n      \"window_end\": \"1970-04-17T03:37:28.112Z\",\n      \"project_id\": {}\n    }\n  ],\n  \"next_page_token\": \"Ut\"\n}",
                      "cookie": [],
                      "_postman_previewlanguage": "json"
                    },
                    {
                      "id": "d0fa15a0-8a39-437e-a3ab-858f5581fedc",
                      "name": "Error response.",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "insights",
                            ":project-slug",
                            "workflows"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [
                            {
                              "key": "page-token",
                              "value": "<string>"
                            },
                            {
                              "key": "all-branches",
                              "value": "<boolean>"
                            },
                            {
                              "key": "branch",
                              "value": "<string>"
                            },
                            {
                              "key": "reporting-window",
                              "value": "last-90-days"
                            }
                          ],
                          "variable": [
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "project-slug",
                              "description": "(Required) Project slug in the form `vcs-slug/org-name/repo-name`. The `/` characters may be URL-escaped. For projects that use GitLab or GitHub App, use `circleci` as the `vcs-slug`, replace `org-name` with the organization ID (found in Organization Settings), and replace `repo-name` with the project ID (found in Project Settings)."
                            }
                          ]
                        },
                        "header": [
                          {
                            "description": {
                              "content": "Added as a part of security scheme: apikey",
                              "type": "text/plain"
                            },
                            "key": "Circle-Token",
                            "value": "<API Key>"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Internal Server Error",
                      "code": 500,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n  \"message\": \"laborum\"\n}",
                      "cookie": [],
                      "_postman_previewlanguage": "json"
                    }
                  ],
                  "event": [],
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  }
                },
                {
                  "id": "fd5f1165-86db-4c01-8468-f353ab0729c3",
                  "name": "{workflow-name}",
                  "item": [
                    {
                      "id": "2dd5f99a-7bc2-4de5-b7b3-658f4575a718",
                      "name": "Get recent runs of a workflow",
                      "request": {
                        "name": "Get recent runs of a workflow",
                        "description": {
                          "content": "Get recent runs of a workflow. Runs going back at most 90 days are returned. Please note that Insights is not a financial reporting tool and should not be used for precise credit reporting.  Credit reporting from Insights does not use the same source of truth as the billing information that is found in the Plan Overview page in the CircleCI UI, nor does the underlying data have the same data accuracy guarantees as the billing information in the CircleCI UI.  This may lead to discrepancies between credits reported from Insights and the billing information in the Plan Overview page of the CircleCI UI.  For precise credit reporting, always use the Plan Overview page in the CircleCI UI.",
                          "type": "text/plain"
                        },
                        "url": {
                          "path": [
                            "insights",
                            ":project-slug",
                            "workflows",
                            ":workflow-name"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [
                            {
                              "disabled": false,
                              "key": "all-branches",
                              "value": "<boolean>",
                              "description": "Whether to retrieve data for all branches combined. Use either this parameter OR the branch name parameter."
                            },
                            {
                              "disabled": false,
                              "key": "branch",
                              "value": "<string>",
                              "description": "The name of a vcs branch. If not passed we will scope the API call to the default branch."
                            },
                            {
                              "disabled": false,
                              "key": "page-token",
                              "value": "<string>",
                              "description": "A token to retrieve the next page of results."
                            },
                            {
                              "disabled": false,
                              "key": "start-date",
                              "value": "<dateTime>",
                              "description": "Include only executions that started at or after this date. This must be specified if an end-date is provided."
                            },
                            {
                              "disabled": false,
                              "key": "end-date",
                              "value": "<dateTime>",
                              "description": "Include only executions that started before this date. This date can be at most 90 days after the start-date."
                            }
                          ],
                          "variable": [
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "project-slug",
                              "description": "(Required) Project slug in the form `vcs-slug/org-name/repo-name`. The `/` characters may be URL-escaped. For projects that use GitLab or GitHub App, use `circleci` as the `vcs-slug`, replace `org-name` with the organization ID (found in Organization Settings), and replace `repo-name` with the project ID (found in Project Settings)."
                            },
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "workflow-name",
                              "description": "(Required) The name of the workflow."
                            }
                          ]
                        },
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "method": "GET",
                        "auth": null
                      },
                      "response": [
                        {
                          "id": "f9bc4107-39af-4d5d-af53-58e6f936b7b2",
                          "name": "A paginated list of recent workflow runs",
                          "originalRequest": {
                            "url": {
                              "path": [
                                "insights",
                                ":project-slug",
                                "workflows",
                                ":workflow-name"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [
                                {
                                  "key": "all-branches",
                                  "value": "<boolean>"
                                },
                                {
                                  "key": "branch",
                                  "value": "<string>"
                                },
                                {
                                  "key": "page-token",
                                  "value": "<string>"
                                },
                                {
                                  "key": "start-date",
                                  "value": "2020-08-21T13:26:29Z"
                                },
                                {
                                  "key": "end-date",
                                  "value": "2020-09-04T13:26:29Z"
                                }
                              ],
                              "variable": [
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "<string>",
                                  "key": "project-slug",
                                  "description": "(Required) Project slug in the form `vcs-slug/org-name/repo-name`. The `/` characters may be URL-escaped. For projects that use GitLab or GitHub App, use `circleci` as the `vcs-slug`, replace `org-name` with the organization ID (found in Organization Settings), and replace `repo-name` with the project ID (found in Project Settings)."
                                },
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "<string>",
                                  "key": "workflow-name",
                                  "description": "(Required) The name of the workflow."
                                }
                              ]
                            },
                            "header": [
                              {
                                "description": {
                                  "content": "Added as a part of security scheme: apikey",
                                  "type": "text/plain"
                                },
                                "key": "Circle-Token",
                                "value": "<API Key>"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "method": "GET",
                            "body": {}
                          },
                          "status": "OK",
                          "code": 200,
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": "{\n  \"items\": [\n    {\n      \"id\": \"eaa7b863-72ef-0bdf-d888-9a030d2049f9\",\n      \"branch\": \"main\",\n      \"duration\": 12305896,\n      \"created_at\": \"2001-11-03T23:56:43.678Z\",\n      \"stopped_at\": \"2006-12-25T00:26:53.786Z\",\n      \"credits_used\": 84321831,\n      \"status\": \"failed\",\n      \"is_approval\": false\n    },\n    {\n      \"id\": \"urn:uuid:14c236b7-781a-02a3-058d-16a97aeea6bb\",\n      \"branch\": \"main\",\n      \"duration\": 8854493,\n      \"created_at\": \"2012-01-15T03:09:01.388Z\",\n      \"stopped_at\": \"2012-02-14T23:03:59.428Z\",\n      \"credits_used\": 99850888,\n      \"status\": \"failed\",\n      \"is_approval\": false\n    }\n  ],\n  \"next_page_token\": \"fugiat nostrud non culp\"\n}",
                          "cookie": [],
                          "_postman_previewlanguage": "json"
                        },
                        {
                          "id": "83ba27fe-8385-4561-8123-642daff0cdf0",
                          "name": "Error response.",
                          "originalRequest": {
                            "url": {
                              "path": [
                                "insights",
                                ":project-slug",
                                "workflows",
                                ":workflow-name"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [
                                {
                                  "key": "all-branches",
                                  "value": "<boolean>"
                                },
                                {
                                  "key": "branch",
                                  "value": "<string>"
                                },
                                {
                                  "key": "page-token",
                                  "value": "<string>"
                                },
                                {
                                  "key": "start-date",
                                  "value": "2020-08-21T13:26:29Z"
                                },
                                {
                                  "key": "end-date",
                                  "value": "2020-09-04T13:26:29Z"
                                }
                              ],
                              "variable": [
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "<string>",
                                  "key": "project-slug",
                                  "description": "(Required) Project slug in the form `vcs-slug/org-name/repo-name`. The `/` characters may be URL-escaped. For projects that use GitLab or GitHub App, use `circleci` as the `vcs-slug`, replace `org-name` with the organization ID (found in Organization Settings), and replace `repo-name` with the project ID (found in Project Settings)."
                                },
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "<string>",
                                  "key": "workflow-name",
                                  "description": "(Required) The name of the workflow."
                                }
                              ]
                            },
                            "header": [
                              {
                                "description": {
                                  "content": "Added as a part of security scheme: apikey",
                                  "type": "text/plain"
                                },
                                "key": "Circle-Token",
                                "value": "<API Key>"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "method": "GET",
                            "body": {}
                          },
                          "status": "Internal Server Error",
                          "code": 500,
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": "{\n  \"message\": \"laborum\"\n}",
                          "cookie": [],
                          "_postman_previewlanguage": "json"
                        }
                      ],
                      "event": [],
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      }
                    },
                    {
                      "id": "270f43f1-8cf1-4126-9c18-8416397931d1",
                      "name": "Get summary metrics for a project workflow's jobs.",
                      "request": {
                        "name": "Get summary metrics for a project workflow's jobs.",
                        "description": {
                          "content": "Get summary metrics for a project workflow's jobs. Job runs going back at most 90 days are included in the aggregation window. Metrics are refreshed daily, and thus may not include executions from the last 24 hours. Please note that Insights is not a financial reporting tool and should not be used for precise credit reporting.  Credit reporting from Insights does not use the same source of truth as the billing information that is found in the Plan Overview page in the CircleCI UI, nor does the underlying data have the same data accuracy guarantees as the billing information in the CircleCI UI.  This may lead to discrepancies between credits reported from Insights and the billing information in the Plan Overview page of the CircleCI UI.  For precise credit reporting, always use the Plan Overview page in the CircleCI UI.",
                          "type": "text/plain"
                        },
                        "url": {
                          "path": [
                            "insights",
                            ":project-slug",
                            "workflows",
                            ":workflow-name",
                            "jobs"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [
                            {
                              "disabled": false,
                              "key": "page-token",
                              "value": "<string>",
                              "description": "A token to retrieve the next page of results."
                            },
                            {
                              "disabled": false,
                              "key": "all-branches",
                              "value": "<boolean>",
                              "description": "Whether to retrieve data for all branches combined. Use either this parameter OR the branch name parameter."
                            },
                            {
                              "disabled": false,
                              "key": "branch",
                              "value": "<string>",
                              "description": "The name of a vcs branch. If not passed we will scope the API call to the default branch."
                            },
                            {
                              "disabled": false,
                              "key": "reporting-window",
                              "value": "<string>",
                              "description": "The time window used to calculate summary metrics. If not provided, defaults to last-90-days"
                            },
                            {
                              "disabled": false,
                              "key": "job-name",
                              "value": "<string>",
                              "description": "The name of the jobs you would like to filter from your workflow. If not specified, all workflow jobs will be returned. The job name can either be the full job name or just a substring of the job name."
                            }
                          ],
                          "variable": [
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "project-slug",
                              "description": "(Required) Project slug in the form `vcs-slug/org-name/repo-name`. The `/` characters may be URL-escaped. For projects that use GitLab or GitHub App, use `circleci` as the `vcs-slug`, replace `org-name` with the organization ID (found in Organization Settings), and replace `repo-name` with the project ID (found in Project Settings)."
                            },
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "workflow-name",
                              "description": "(Required) The name of the workflow."
                            }
                          ]
                        },
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "method": "GET",
                        "auth": null
                      },
                      "response": [
                        {
                          "id": "43cbb891-0409-4ad1-835f-cdb21217f4b0",
                          "name": "A paginated list of summary metrics by workflow job.",
                          "originalRequest": {
                            "url": {
                              "path": [
                                "insights",
                                ":project-slug",
                                "workflows",
                                ":workflow-name",
                                "jobs"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [
                                {
                                  "key": "page-token",
                                  "value": "<string>"
                                },
                                {
                                  "key": "all-branches",
                                  "value": "<boolean>"
                                },
                                {
                                  "key": "branch",
                                  "value": "<string>"
                                },
                                {
                                  "key": "reporting-window",
                                  "value": "last-90-days"
                                },
                                {
                                  "key": "job-name",
                                  "value": "lint"
                                }
                              ],
                              "variable": [
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "<string>",
                                  "key": "project-slug",
                                  "description": "(Required) Project slug in the form `vcs-slug/org-name/repo-name`. The `/` characters may be URL-escaped. For projects that use GitLab or GitHub App, use `circleci` as the `vcs-slug`, replace `org-name` with the organization ID (found in Organization Settings), and replace `repo-name` with the project ID (found in Project Settings)."
                                },
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "<string>",
                                  "key": "workflow-name",
                                  "description": "(Required) The name of the workflow."
                                }
                              ]
                            },
                            "header": [
                              {
                                "description": {
                                  "content": "Added as a part of security scheme: apikey",
                                  "type": "text/plain"
                                },
                                "key": "Circle-Token",
                                "value": "<API Key>"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "method": "GET",
                            "body": {}
                          },
                          "status": "OK",
                          "code": 200,
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": "{\n  \"items\": [\n    {\n      \"name\": \"ipsum ea magna\",\n      \"metrics\": {\n        \"total_runs\": 35513315,\n        \"failed_runs\": 21253919,\n        \"successful_runs\": 32117476,\n        \"duration_metrics\": {\n          \"min\": 57817374,\n          \"mean\": 17970918,\n          \"median\": 29143407,\n          \"p95\": 69871920,\n          \"max\": 26893955,\n          \"standard_deviation\": -40547641.85219968\n        },\n        \"success_rate\": 92010126.72625569,\n        \"total_credits_used\": 73413139,\n        \"throughput\": 92511003.20059419\n      },\n      \"window_start\": \"1986-06-11T08:39:25.266Z\",\n      \"window_end\": \"1972-10-10T14:21:35.025Z\"\n    },\n    {\n      \"name\": \"incididunt\",\n      \"metrics\": {\n        \"total_runs\": 86439334,\n        \"failed_runs\": 21244128,\n        \"successful_runs\": 37073900,\n        \"duration_metrics\": {\n          \"min\": 34190836,\n          \"mean\": 92401106,\n          \"median\": 98933794,\n          \"p95\": 69416334,\n          \"max\": 60158414,\n          \"standard_deviation\": -8540996.57500185\n        },\n        \"success_rate\": -6817663.494218573,\n        \"total_credits_used\": 42311453,\n        \"throughput\": 39682008.13658452\n      },\n      \"window_start\": \"1980-06-07T04:04:33.262Z\",\n      \"window_end\": \"1959-10-26T03:39:23.318Z\"\n    }\n  ],\n  \"next_page_token\": \"in\"\n}",
                          "cookie": [],
                          "_postman_previewlanguage": "json"
                        },
                        {
                          "id": "faaeed8e-216e-42f8-bf41-f48a49b7a25d",
                          "name": "Error response.",
                          "originalRequest": {
                            "url": {
                              "path": [
                                "insights",
                                ":project-slug",
                                "workflows",
                                ":workflow-name",
                                "jobs"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [
                                {
                                  "key": "page-token",
                                  "value": "<string>"
                                },
                                {
                                  "key": "all-branches",
                                  "value": "<boolean>"
                                },
                                {
                                  "key": "branch",
                                  "value": "<string>"
                                },
                                {
                                  "key": "reporting-window",
                                  "value": "last-90-days"
                                },
                                {
                                  "key": "job-name",
                                  "value": "lint"
                                }
                              ],
                              "variable": [
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "<string>",
                                  "key": "project-slug",
                                  "description": "(Required) Project slug in the form `vcs-slug/org-name/repo-name`. The `/` characters may be URL-escaped. For projects that use GitLab or GitHub App, use `circleci` as the `vcs-slug`, replace `org-name` with the organization ID (found in Organization Settings), and replace `repo-name` with the project ID (found in Project Settings)."
                                },
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "<string>",
                                  "key": "workflow-name",
                                  "description": "(Required) The name of the workflow."
                                }
                              ]
                            },
                            "header": [
                              {
                                "description": {
                                  "content": "Added as a part of security scheme: apikey",
                                  "type": "text/plain"
                                },
                                "key": "Circle-Token",
                                "value": "<API Key>"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "method": "GET",
                            "body": {}
                          },
                          "status": "Internal Server Error",
                          "code": 500,
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": "{\n  \"message\": \"laborum\"\n}",
                          "cookie": [],
                          "_postman_previewlanguage": "json"
                        }
                      ],
                      "event": [],
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      }
                    },
                    {
                      "id": "8eba73cf-b297-47c5-a46e-6181cccd5cd7",
                      "name": "Get metrics and trends for workflows",
                      "request": {
                        "name": "Get metrics and trends for workflows",
                        "description": {
                          "content": "Get the metrics and trends for a particular workflow on a single branch or all branches",
                          "type": "text/plain"
                        },
                        "url": {
                          "path": [
                            "insights",
                            ":project-slug",
                            "workflows",
                            ":workflow-name",
                            "summary"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [
                            {
                              "disabled": false,
                              "key": "all-branches",
                              "value": "<boolean>",
                              "description": "Whether to retrieve data for all branches combined. Use either this parameter OR the branch name parameter."
                            },
                            {
                              "disabled": false,
                              "key": "branch",
                              "value": "<string>",
                              "description": "The name of a vcs branch. If not passed we will scope the API call to the default branch."
                            }
                          ],
                          "variable": [
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "project-slug",
                              "description": "(Required) Project slug in the form `vcs-slug/org-name/repo-name`. The `/` characters may be URL-escaped. For projects that use GitLab or GitHub App, use `circleci` as the `vcs-slug`, replace `org-name` with the organization ID (found in Organization Settings), and replace `repo-name` with the project ID (found in Project Settings)."
                            },
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "workflow-name",
                              "description": "(Required) The name of the workflow."
                            }
                          ]
                        },
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "method": "GET",
                        "auth": null
                      },
                      "response": [
                        {
                          "id": "ab0cbe68-56c8-4d4e-8667-41861eae7a76",
                          "name": "Metrics and trends for a workflow",
                          "originalRequest": {
                            "url": {
                              "path": [
                                "insights",
                                ":project-slug",
                                "workflows",
                                ":workflow-name",
                                "summary"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [
                                {
                                  "key": "all-branches",
                                  "value": "<boolean>"
                                },
                                {
                                  "key": "branch",
                                  "value": "<string>"
                                }
                              ],
                              "variable": [
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "<string>",
                                  "key": "project-slug",
                                  "description": "(Required) Project slug in the form `vcs-slug/org-name/repo-name`. The `/` characters may be URL-escaped. For projects that use GitLab or GitHub App, use `circleci` as the `vcs-slug`, replace `org-name` with the organization ID (found in Organization Settings), and replace `repo-name` with the project ID (found in Project Settings)."
                                },
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "<string>",
                                  "key": "workflow-name",
                                  "description": "(Required) The name of the workflow."
                                }
                              ]
                            },
                            "header": [
                              {
                                "description": {
                                  "content": "Added as a part of security scheme: apikey",
                                  "type": "text/plain"
                                },
                                "key": "Circle-Token",
                                "value": "<API Key>"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "method": "GET",
                            "body": {}
                          },
                          "status": "OK",
                          "code": 200,
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": "{\n  \"metrics\": {\n    \"total_runs\": 10623969,\n    \"successful_runs\": 22427612,\n    \"mttr\": 69755629,\n    \"total_credits_used\": 35313090,\n    \"failed_runs\": 1779557,\n    \"success_rate\": 88458908.59307212,\n    \"window_start\": \"2025-02-27T03:52:46.841Z\",\n    \"duration_metrics\": {\n      \"min\": 92521108,\n      \"mean\": 27362021,\n      \"median\": 16662960,\n      \"p95\": 62882187,\n      \"max\": 54764087,\n      \"standard_deviation\": 99832732.1328179\n    },\n    \"window_end\": \"1954-09-03T01:34:51.478Z\",\n    \"throughput\": 25121129.450848743,\n    \"completed_runs\": 18779452\n  },\n  \"trends\": {\n    \"total_runs\": 70910420.03443119,\n    \"failed_runs\": -94171983.4923454,\n    \"success_rate\": 11234257.28681013,\n    \"p95_duration_secs\": 32869005.294587657,\n    \"median_duration_secs\": 89731280.50064504,\n    \"total_credits_used\": 55434258.58732572,\n    \"mttr\": -43435192.4463741,\n    \"throughput\": 76499787.94537881\n  },\n  \"workflow_names\": [\n    \"velit commodo aute\",\n    \"aliqua sed do Excepteur sint\"\n  ]\n}",
                          "cookie": [],
                          "_postman_previewlanguage": "json"
                        },
                        {
                          "id": "713ee543-dd29-4606-a222-64576067493c",
                          "name": "Error response.",
                          "originalRequest": {
                            "url": {
                              "path": [
                                "insights",
                                ":project-slug",
                                "workflows",
                                ":workflow-name",
                                "summary"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [
                                {
                                  "key": "all-branches",
                                  "value": "<boolean>"
                                },
                                {
                                  "key": "branch",
                                  "value": "<string>"
                                }
                              ],
                              "variable": [
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "<string>",
                                  "key": "project-slug",
                                  "description": "(Required) Project slug in the form `vcs-slug/org-name/repo-name`. The `/` characters may be URL-escaped. For projects that use GitLab or GitHub App, use `circleci` as the `vcs-slug`, replace `org-name` with the organization ID (found in Organization Settings), and replace `repo-name` with the project ID (found in Project Settings)."
                                },
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "<string>",
                                  "key": "workflow-name",
                                  "description": "(Required) The name of the workflow."
                                }
                              ]
                            },
                            "header": [
                              {
                                "description": {
                                  "content": "Added as a part of security scheme: apikey",
                                  "type": "text/plain"
                                },
                                "key": "Circle-Token",
                                "value": "<API Key>"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "method": "GET",
                            "body": {}
                          },
                          "status": "Internal Server Error",
                          "code": 500,
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": "{\n  \"message\": \"laborum\"\n}",
                          "cookie": [],
                          "_postman_previewlanguage": "json"
                        }
                      ],
                      "event": [],
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      }
                    },
                    {
                      "id": "5df1af63-3f70-44e0-8987-14fd6cdbbfb0",
                      "name": "Get test metrics for a project's workflows",
                      "request": {
                        "name": "Get test metrics for a project's workflows",
                        "description": {
                          "content": "Get test metrics for a project's workflows. Currently tests metrics are calculated based on 10 most recent workflow runs.",
                          "type": "text/plain"
                        },
                        "url": {
                          "path": [
                            "insights",
                            ":project-slug",
                            "workflows",
                            ":workflow-name",
                            "test-metrics"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [
                            {
                              "disabled": false,
                              "key": "branch",
                              "value": "<string>",
                              "description": "The name of a vcs branch. If not passed we will scope the API call to the default branch."
                            },
                            {
                              "disabled": false,
                              "key": "all-branches",
                              "value": "<boolean>",
                              "description": "Whether to retrieve data for all branches combined. Use either this parameter OR the branch name parameter."
                            }
                          ],
                          "variable": [
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "project-slug",
                              "description": "(Required) Project slug in the form `vcs-slug/org-name/repo-name`. The `/` characters may be URL-escaped. For projects that use GitLab or GitHub App, use `circleci` as the `vcs-slug`, replace `org-name` with the organization ID (found in Organization Settings), and replace `repo-name` with the project ID (found in Project Settings)."
                            },
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "workflow-name",
                              "description": "(Required) The name of the workflow."
                            }
                          ]
                        },
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "method": "GET",
                        "auth": null
                      },
                      "response": [
                        {
                          "id": "d36c99e2-8b60-4132-80f3-0ad069df0e81",
                          "name": "A list of test metrics by workflow",
                          "originalRequest": {
                            "url": {
                              "path": [
                                "insights",
                                ":project-slug",
                                "workflows",
                                ":workflow-name",
                                "test-metrics"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [
                                {
                                  "key": "branch",
                                  "value": "<string>"
                                },
                                {
                                  "key": "all-branches",
                                  "value": "<boolean>"
                                }
                              ],
                              "variable": [
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "<string>",
                                  "key": "project-slug",
                                  "description": "(Required) Project slug in the form `vcs-slug/org-name/repo-name`. The `/` characters may be URL-escaped. For projects that use GitLab or GitHub App, use `circleci` as the `vcs-slug`, replace `org-name` with the organization ID (found in Organization Settings), and replace `repo-name` with the project ID (found in Project Settings)."
                                },
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "<string>",
                                  "key": "workflow-name",
                                  "description": "(Required) The name of the workflow."
                                }
                              ]
                            },
                            "header": [
                              {
                                "description": {
                                  "content": "Added as a part of security scheme: apikey",
                                  "type": "text/plain"
                                },
                                "key": "Circle-Token",
                                "value": "<API Key>"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "method": "GET",
                            "body": {}
                          },
                          "status": "OK",
                          "code": 200,
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": "{\n  \"average_test_count\": 73371137,\n  \"most_failed_tests\": [\n    {\n      \"failed_runs\": 67080866,\n      \"job_name\": \"dolore anim cillum ut\",\n      \"p95_duration\": -7195137.983330697,\n      \"test_name\": \"quis veniam laboris veli\",\n      \"file\": \"et laboris qui ut\",\n      \"source\": \"proident exercitation nisi adipisicing sed\",\n      \"classname\": \"reprehenderit ut ea Dui\",\n      \"total_runs\": 98534434,\n      \"flaky\": true\n    },\n    {\n      \"failed_runs\": 28316252,\n      \"job_name\": \"pariatur qui ea\",\n      \"p95_duration\": 27641566.463815972,\n      \"test_name\": \"dolore nisi cupidatat proident Ut\",\n      \"file\": \"velit in\",\n      \"source\": \"cillum veniam culpa\",\n      \"classname\": \"dolor anim\",\n      \"total_runs\": 13235928,\n      \"flaky\": false\n    }\n  ],\n  \"most_failed_tests_extra\": 82895115,\n  \"slowest_tests\": [\n    {\n      \"failed_runs\": 15956139,\n      \"job_name\": \"adipisicing elit laborum in\",\n      \"p95_duration\": -63335780.79541442,\n      \"test_name\": \"velit mollit ad\",\n      \"file\": \"voluptate pariatur sit laboris\",\n      \"source\": \"eiusmod Ut proident\",\n      \"classname\": \"fugiat et\",\n      \"total_runs\": 71158922,\n      \"flaky\": false\n    },\n    {\n      \"failed_runs\": 59945184,\n      \"job_name\": \"ullamco nostrud repreh\",\n      \"p95_duration\": 79648108.91452864,\n      \"test_name\": \"officia labore\",\n      \"file\": \"ipsum mollit dolor dolor\",\n      \"source\": \"dolor Duis ut elit laboris\",\n      \"classname\": \"enim velit aute\",\n      \"total_runs\": 49297927,\n      \"flaky\": true\n    }\n  ],\n  \"slowest_tests_extra\": 10621333,\n  \"total_test_runs\": 87425506,\n  \"test_runs\": [\n    {\n      \"pipeline_number\": 22077607,\n      \"workflow_id\": {},\n      \"success_rate\": 24597865.66486439,\n      \"test_counts\": {\n        \"error\": 19055476,\n        \"failure\": 46892375,\n        \"skipped\": 82194580,\n        \"success\": 88302993,\n        \"total\": 90742324\n      }\n    },\n    {\n      \"pipeline_number\": 71887021,\n      \"workflow_id\": {},\n      \"success_rate\": 76103984.55053762,\n      \"test_counts\": {\n        \"error\": 4423540,\n        \"failure\": 47659808,\n        \"skipped\": 74679070,\n        \"success\": 1722852,\n        \"total\": 38164474\n      }\n    }\n  ]\n}",
                          "cookie": [],
                          "_postman_previewlanguage": "json"
                        },
                        {
                          "id": "22af5fca-c08e-4d9e-a0a6-e548eb38108e",
                          "name": "Error response.",
                          "originalRequest": {
                            "url": {
                              "path": [
                                "insights",
                                ":project-slug",
                                "workflows",
                                ":workflow-name",
                                "test-metrics"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [
                                {
                                  "key": "branch",
                                  "value": "<string>"
                                },
                                {
                                  "key": "all-branches",
                                  "value": "<boolean>"
                                }
                              ],
                              "variable": [
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "<string>",
                                  "key": "project-slug",
                                  "description": "(Required) Project slug in the form `vcs-slug/org-name/repo-name`. The `/` characters may be URL-escaped. For projects that use GitLab or GitHub App, use `circleci` as the `vcs-slug`, replace `org-name` with the organization ID (found in Organization Settings), and replace `repo-name` with the project ID (found in Project Settings)."
                                },
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "<string>",
                                  "key": "workflow-name",
                                  "description": "(Required) The name of the workflow."
                                }
                              ]
                            },
                            "header": [
                              {
                                "description": {
                                  "content": "Added as a part of security scheme: apikey",
                                  "type": "text/plain"
                                },
                                "key": "Circle-Token",
                                "value": "<API Key>"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "method": "GET",
                            "body": {}
                          },
                          "status": "Internal Server Error",
                          "code": 500,
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": "{\n  \"message\": \"laborum\"\n}",
                          "cookie": [],
                          "_postman_previewlanguage": "json"
                        }
                      ],
                      "event": [],
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      }
                    }
                  ],
                  "event": []
                }
              ],
              "event": []
            }
          ],
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "414a053b-e6bb-4eed-a0bd-60c7bfaa75b0",
      "name": "Cancel job by job ID",
      "request": {
        "name": "Cancel job by job ID",
        "description": {
          "content": "Cancel job with a given job ID.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "jobs",
            ":job-id",
            "cancel"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": [
            {
              "disabled": false,
              "type": "any",
              "value": "<uuid>",
              "key": "job-id",
              "description": "(Required) The unique ID of the job."
            }
          ]
        },
        "header": [
          {
            "key": "Accept",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null
      },
      "response": [
        {
          "id": "6cbd8f73-e6ec-4e3e-9da3-906617b9f2c5",
          "name": "Job cancelled successfully.",
          "originalRequest": {
            "url": {
              "path": [
                "jobs",
                ":job-id",
                "cancel"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<uuid>",
                  "key": "job-id",
                  "description": "(Required) The unique ID of the job."
                }
              ]
            },
            "header": [
              {
                "description": {
                  "content": "Added as a part of security scheme: apikey",
                  "type": "text/plain"
                },
                "key": "Circle-Token",
                "value": "<API Key>"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {}
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n  \"message\": \"pariat\"\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "edf679f5-50f3-4f5e-8fb9-234ba1390c16",
          "name": "Bad request error.",
          "originalRequest": {
            "url": {
              "path": [
                "jobs",
                ":job-id",
                "cancel"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<uuid>",
                  "key": "job-id",
                  "description": "(Required) The unique ID of the job."
                }
              ]
            },
            "header": [
              {
                "description": {
                  "content": "Added as a part of security scheme: apikey",
                  "type": "text/plain"
                },
                "key": "Circle-Token",
                "value": "<API Key>"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {}
          },
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n  \"message\": \"pariat\"\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "0a7d0508-dbea-4ac3-b2e4-224e5b120047",
          "name": "Unauthorized error.",
          "originalRequest": {
            "url": {
              "path": [
                "jobs",
                ":job-id",
                "cancel"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<uuid>",
                  "key": "job-id",
                  "description": "(Required) The unique ID of the job."
                }
              ]
            },
            "header": [
              {
                "description": {
                  "content": "Added as a part of security scheme: apikey",
                  "type": "text/plain"
                },
                "key": "Circle-Token",
                "value": "<API Key>"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {}
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n  \"message\": \"pariat\"\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "2a0dc28a-faa9-4904-8b1a-6c48369d083e",
          "name": "Forbidden error.",
          "originalRequest": {
            "url": {
              "path": [
                "jobs",
                ":job-id",
                "cancel"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<uuid>",
                  "key": "job-id",
                  "description": "(Required) The unique ID of the job."
                }
              ]
            },
            "header": [
              {
                "description": {
                  "content": "Added as a part of security scheme: apikey",
                  "type": "text/plain"
                },
                "key": "Circle-Token",
                "value": "<API Key>"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {}
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n  \"message\": \"pariat\"\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "f5281927-f023-4ca0-9a80-f7e877e506a7",
          "name": "Job not found error.",
          "originalRequest": {
            "url": {
              "path": [
                "jobs",
                ":job-id",
                "cancel"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<uuid>",
                  "key": "job-id",
                  "description": "(Required) The unique ID of the job."
                }
              ]
            },
            "header": [
              {
                "description": {
                  "content": "Added as a part of security scheme: apikey",
                  "type": "text/plain"
                },
                "key": "Circle-Token",
                "value": "<API Key>"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {}
          },
          "status": "Not Found",
          "code": 404,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n  \"message\": \"pariat\"\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "ace73f01-c526-4505-8927-d263bd648f95",
          "name": "Error response.",
          "originalRequest": {
            "url": {
              "path": [
                "jobs",
                ":job-id",
                "cancel"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<uuid>",
                  "key": "job-id",
                  "description": "(Required) The unique ID of the job."
                }
              ]
            },
            "header": [
              {
                "description": {
                  "content": "Added as a part of security scheme: apikey",
                  "type": "text/plain"
                },
                "key": "Circle-Token",
                "value": "<API Key>"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {}
          },
          "status": "Internal Server Error",
          "code": 500,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n  \"message\": \"laborum\"\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        }
      ],
      "event": [],
      "protocolProfileBehavior": {
        "disableBodyPruning": true
      }
    },
    {
      "id": "78592512-76c9-4245-b176-d781483421d3",
      "name": "me",
      "item": [
        {
          "id": "7668b979-15ea-4561-acf2-83e371f409a5",
          "name": "User Information",
          "request": {
            "name": "User Information",
            "description": {
              "content": "Provides information about the user that is currently signed in.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "me"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "b938bb1b-bd2f-47d7-a678-5ab6c1514daf",
              "name": "User login information.",
              "originalRequest": {
                "url": {
                  "path": [
                    "me"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "Circle-Token",
                    "value": "<API Key>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"id\": \"urn:uuid:69dcadf1-f035-0f3e-580a-a28e1435ba5e\",\n  \"login\": \"aliqua velit eiusmod\",\n  \"name\": \"magna eu quis sed\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "1093d18f-76d2-4436-b939-7f1658958170",
              "name": "Error response.",
              "originalRequest": {
                "url": {
                  "path": [
                    "me"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "Circle-Token",
                    "value": "<API Key>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"message\": \"laborum\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "f3cffd1b-118e-4dfe-992b-82f0381bd421",
          "name": "Collaborations",
          "request": {
            "name": "Collaborations",
            "description": {
              "content": "Provides the set of organizations of which a user is a member or a collaborator.\n\nThe set of organizations that a user can collaborate on is composed of:\n\n* Organizations that the current user belongs to across VCS types (e.g. BitBucket, GitHub)\n* The parent organization of repository that the user can collaborate on, but is not necessarily a member of\n* The organization of the current user's account",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "me",
                "collaborations"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "88758e98-c318-4ae3-b208-dffba4048671",
              "name": "Collaborations",
              "originalRequest": {
                "url": {
                  "path": [
                    "me",
                    "collaborations"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "Circle-Token",
                    "value": "<API Key>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "[\n  {\n    \"id\": \"8d8f5fb0-52dc-38a9-0ae3-f8520598d0e6\",\n    \"vcs-type\": \"laborum ipsum\",\n    \"name\": \"culpa mollit\",\n    \"avatar_url\": \"aliqua eu\",\n    \"slug\": \"exercitation\"\n  },\n  {\n    \"id\": \"urn:uuid:200b46b0-86a1-eb78-1ad5-26af082e09f4\",\n    \"vcs-type\": \"velit laborum eu irure commodo\",\n    \"name\": \"et cillum aliqua quis sunt\",\n    \"avatar_url\": \"Ut deserunt\",\n    \"slug\": \"et anim dolore aute\"\n  }\n]",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "64e00ffd-0bda-4b32-bc50-d710f710c278",
              "name": "Error response.",
              "originalRequest": {
                "url": {
                  "path": [
                    "me",
                    "collaborations"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "Circle-Token",
                    "value": "<API Key>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"message\": \"laborum\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "17a853a7-35b5-4ff4-97f1-67be02dda00d",
      "name": "organization",
      "item": [
        {
          "id": "0471971e-9656-42d2-b2be-aea3d6a02cef",
          "name": "🧪 Create a new organization",
          "request": {
            "name": "🧪 Create a new organization",
            "description": {
              "content": "[EXPERIMENTAL] Create a new organization. For VCS providers (GitHub/Bitbucket), this validates access and syncs org data. For standalone orgs, this creates a new CircleCI organization.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "organization"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"<string>\",\n  \"vcs_type\": \"<string>\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "id": "39d19de4-544c-40e1-b2fa-6d4e6aa4f78e",
              "name": "The newly created organization",
              "originalRequest": {
                "url": {
                  "path": [
                    "organization"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "Circle-Token",
                    "value": "<API Key>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"<string>\",\n  \"vcs_type\": \"github\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Created",
              "code": 201,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"id\": \"adipisicing Duis\",\n  \"name\": \"pariatur sunt laboris in\",\n  \"slug\": \"consequat pa\",\n  \"vcs_type\": \"github\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "93ba19b0-ed2b-4d32-bafe-25df0b15d43e",
              "name": "Error response.",
              "originalRequest": {
                "url": {
                  "path": [
                    "organization"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "Circle-Token",
                    "value": "<API Key>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"<string>\",\n  \"vcs_type\": \"github\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"message\": \"laborum\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "6032a1aa-24df-43ea-8661-a71532034487",
          "name": "{org-slug-or-id}",
          "item": [
            {
              "id": "5636bfa7-c87f-48ba-b690-921c42405f55",
              "name": "🧪 Delete an organization",
              "request": {
                "name": "🧪 Delete an organization",
                "description": {
                  "content": "[EXPERIMENTAL] Delete an organization. This action will delete all projects including all build data for the organization.",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "organization",
                    ":org-slug-or-id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "org-slug-or-id",
                      "description": "(Required) Org UUID or slug in the form `vcs-slug/org-name`. For projects that use GitLab or GitHub App, use `circleci` as the `vcs-slug` and replace the `org-name` with the organization ID (found in Organization Settings)."
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "DELETE",
                "auth": null
              },
              "response": [
                {
                  "id": "32356755-36ca-454b-8dc4-6ac04d748d84",
                  "name": "A confirmation message.",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "organization",
                        ":org-slug-or-id"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "org-slug-or-id",
                          "description": "(Required) Org UUID or slug in the form `vcs-slug/org-name`. For projects that use GitLab or GitHub App, use `circleci` as the `vcs-slug` and replace the `org-name` with the organization ID (found in Organization Settings)."
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "Added as a part of security scheme: apikey",
                          "type": "text/plain"
                        },
                        "key": "Circle-Token",
                        "value": "<API Key>"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "DELETE",
                    "body": {}
                  },
                  "status": "Accepted",
                  "code": 202,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n  \"message\": \"pariat\"\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json"
                },
                {
                  "id": "5a1ba5e7-2d94-4a08-bc31-f6f12c4c1a2b",
                  "name": "Error response.",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "organization",
                        ":org-slug-or-id"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "org-slug-or-id",
                          "description": "(Required) Org UUID or slug in the form `vcs-slug/org-name`. For projects that use GitLab or GitHub App, use `circleci` as the `vcs-slug` and replace the `org-name` with the organization ID (found in Organization Settings)."
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "Added as a part of security scheme: apikey",
                          "type": "text/plain"
                        },
                        "key": "Circle-Token",
                        "value": "<API Key>"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "DELETE",
                    "body": {}
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n  \"message\": \"laborum\"\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json"
                }
              ],
              "event": [],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              }
            },
            {
              "id": "81b5fa66-7a58-4b03-b78b-30a370360009",
              "name": "Create a new project",
              "request": {
                "name": "Create a new project",
                "description": {
                  "content": "Create a new project. Works for all organization types.",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "organization",
                    ":org-slug-or-id",
                    "project"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "org-slug-or-id",
                      "description": "(Required) Org UUID or slug in the form `vcs-slug/org-name`. For projects that use GitLab or GitHub App, use `circleci` as the `vcs-slug` and replace the `org-name` with the organization ID (found in Organization Settings)."
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "auth": null,
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"<string>\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [
                {
                  "id": "2efd1f72-c673-451d-9e28-0f34a5a42145",
                  "name": "The new project",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "organization",
                        ":org-slug-or-id",
                        "project"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "org-slug-or-id",
                          "description": "(Required) Org UUID or slug in the form `vcs-slug/org-name`. For projects that use GitLab or GitHub App, use `circleci` as the `vcs-slug` and replace the `org-name` with the organization ID (found in Organization Settings)."
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "Added as a part of security scheme: apikey",
                          "type": "text/plain"
                        },
                        "key": "Circle-Token",
                        "value": "<API Key>"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"name\": \"api-preview-docs\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n  \"slug\": \"gh/CircleCI-Public/api-preview-docs\",\n  \"name\": \"api-preview-docs\",\n  \"id\": \"aab122fa-4a70-918e-21f4-d44228f3d8b2\",\n  \"organization_name\": \"CircleCI-Public\",\n  \"organization_slug\": \"gh/CircleCI-Public\",\n  \"organization_id\": \"ec6887ec-7d44-4b31-b468-7e552408ee32\",\n  \"vcs_info\": {\n    \"vcs_url\": \"https://github.com/CircleCI-Public/api-preview-docs\",\n    \"provider\": \"CircleCI\",\n    \"default_branch\": \"main\"\n  }\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json"
                },
                {
                  "id": "4d0c4993-c919-4bb3-8c18-09da027af027",
                  "name": "Error response.",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "organization",
                        ":org-slug-or-id",
                        "project"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "org-slug-or-id",
                          "description": "(Required) Org UUID or slug in the form `vcs-slug/org-name`. For projects that use GitLab or GitHub App, use `circleci` as the `vcs-slug` and replace the `org-name` with the organization ID (found in Organization Settings)."
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "Added as a part of security scheme: apikey",
                          "type": "text/plain"
                        },
                        "key": "Circle-Token",
                        "value": "<API Key>"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"name\": \"api-preview-docs\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n  \"message\": \"laborum\"\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json"
                }
              ],
              "event": [],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              }
            },
            {
              "id": "865d43d6-cae5-4ff7-aef9-a6c3d3550c68",
              "name": "url-orb-allow-list",
              "item": [
                {
                  "id": "201d932c-3d56-4f5c-9fb9-ef868187b551",
                  "name": "List the entries in the org's URL Orb allow-list",
                  "request": {
                    "name": "List the entries in the org's URL Orb allow-list",
                    "description": {
                      "content": "List the entries in the org's URL Orb allow-list",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "organization",
                        ":org-slug-or-id",
                        "url-orb-allow-list"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "org-slug-or-id",
                          "description": "(Required) Org UUID or slug in the form `vcs-slug/org-name`. For projects that use GitLab or GitHub App, use `circleci` as the `vcs-slug` and replace the `org-name` with the organization ID (found in Organization Settings)."
                        }
                      ]
                    },
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "GET",
                    "auth": null
                  },
                  "response": [
                    {
                      "id": "3cc1c1fc-dcaf-4b96-95f8-59deedd8d50c",
                      "name": "URL Orb allow-list entries",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "organization",
                            ":org-slug-or-id",
                            "url-orb-allow-list"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "org-slug-or-id",
                              "description": "(Required) Org UUID or slug in the form `vcs-slug/org-name`. For projects that use GitLab or GitHub App, use `circleci` as the `vcs-slug` and replace the `org-name` with the organization ID (found in Organization Settings)."
                            }
                          ]
                        },
                        "header": [
                          {
                            "description": {
                              "content": "Added as a part of security scheme: apikey",
                              "type": "text/plain"
                            },
                            "key": "Circle-Token",
                            "value": "<API Key>"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "method": "GET",
                        "body": {}
                      },
                      "status": "OK",
                      "code": 200,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n  \"items\": [\n    {\n      \"id\": \"ba98990a-5a00-4cad-b55e-b44117b92e0c\",\n      \"name\": \"Allow URL orbs from raw.githubusercontent.com/CircleCI-Public\",\n      \"prefix\": {},\n      \"auth\": \"github-app\"\n    },\n    {\n      \"id\": \"ba98990a-5a00-4cad-b55e-b44117b92e0c\",\n      \"name\": \"Allow URL orbs from raw.githubusercontent.com/CircleCI-Public\",\n      \"prefix\": {},\n      \"auth\": \"github-app\"\n    }\n  ]\n}",
                      "cookie": [],
                      "_postman_previewlanguage": "json"
                    },
                    {
                      "id": "3a7452bc-b78c-4c88-9732-93f8ef425308",
                      "name": "Error response.",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "organization",
                            ":org-slug-or-id",
                            "url-orb-allow-list"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "org-slug-or-id",
                              "description": "(Required) Org UUID or slug in the form `vcs-slug/org-name`. For projects that use GitLab or GitHub App, use `circleci` as the `vcs-slug` and replace the `org-name` with the organization ID (found in Organization Settings)."
                            }
                          ]
                        },
                        "header": [
                          {
                            "description": {
                              "content": "Added as a part of security scheme: apikey",
                              "type": "text/plain"
                            },
                            "key": "Circle-Token",
                            "value": "<API Key>"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Internal Server Error",
                      "code": 500,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n  \"message\": \"laborum\"\n}",
                      "cookie": [],
                      "_postman_previewlanguage": "json"
                    }
                  ],
                  "event": [],
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  }
                },
                {
                  "id": "cc843c36-ddc6-4eb8-a39a-60b64a8ea417",
                  "name": "Create a new URL Orb allow-list entry",
                  "request": {
                    "name": "Create a new URL Orb allow-list entry",
                    "description": {
                      "content": "Create a new URL Orb allow-list entry",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "organization",
                        ":org-slug-or-id",
                        "url-orb-allow-list"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "org-slug-or-id",
                          "description": "(Required) Org UUID or slug in the form `vcs-slug/org-name`. For projects that use GitLab or GitHub App, use `circleci` as the `vcs-slug` and replace the `org-name` with the organization ID (found in Organization Settings)."
                        }
                      ]
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "POST",
                    "auth": null,
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"name\": \"<string>\",\n  \"prefix\": {},\n  \"auth\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    }
                  },
                  "response": [
                    {
                      "id": "923648d5-169c-45c6-a6f2-7898270f0054",
                      "name": "The ID of the new URL Orb allow-list entry",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "organization",
                            ":org-slug-or-id",
                            "url-orb-allow-list"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "org-slug-or-id",
                              "description": "(Required) Org UUID or slug in the form `vcs-slug/org-name`. For projects that use GitLab or GitHub App, use `circleci` as the `vcs-slug` and replace the `org-name` with the organization ID (found in Organization Settings)."
                            }
                          ]
                        },
                        "header": [
                          {
                            "description": {
                              "content": "Added as a part of security scheme: apikey",
                              "type": "text/plain"
                            },
                            "key": "Circle-Token",
                            "value": "<API Key>"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "method": "POST",
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"name\": \"Allow URL orbs from raw.githubusercontent.com/CircleCI-Public\",\n  \"prefix\": {},\n  \"auth\": \"github-app\"\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n  \"id\": \"ba98990a-5a00-4cad-b55e-b44117b92e0c\",\n  \"message\": \"Created.\"\n}",
                      "cookie": [],
                      "_postman_previewlanguage": "json"
                    },
                    {
                      "id": "45657d0d-2a45-4fea-bbf9-9a5d457f8237",
                      "name": "Error response.",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "organization",
                            ":org-slug-or-id",
                            "url-orb-allow-list"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "org-slug-or-id",
                              "description": "(Required) Org UUID or slug in the form `vcs-slug/org-name`. For projects that use GitLab or GitHub App, use `circleci` as the `vcs-slug` and replace the `org-name` with the organization ID (found in Organization Settings)."
                            }
                          ]
                        },
                        "header": [
                          {
                            "description": {
                              "content": "Added as a part of security scheme: apikey",
                              "type": "text/plain"
                            },
                            "key": "Circle-Token",
                            "value": "<API Key>"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "method": "POST",
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"name\": \"Allow URL orbs from raw.githubusercontent.com/CircleCI-Public\",\n  \"prefix\": {},\n  \"auth\": \"github-app\"\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        }
                      },
                      "status": "Internal Server Error",
                      "code": 500,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n  \"message\": \"laborum\"\n}",
                      "cookie": [],
                      "_postman_previewlanguage": "json"
                    }
                  ],
                  "event": [],
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  }
                },
                {
                  "id": "456d1267-8dbf-4580-8b17-8f8a08492551",
                  "name": "Remove an entry from the org's URL orb allow-list",
                  "request": {
                    "name": "Remove an entry from the org's URL orb allow-list",
                    "description": {
                      "content": "Remove an entry from the org's URL orb allow-list",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "organization",
                        ":org-slug-or-id",
                        "url-orb-allow-list",
                        ":allow-list-entry-id"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "org-slug-or-id",
                          "description": "(Required) Org UUID or slug in the form `vcs-slug/org-name`. For projects that use GitLab or GitHub App, use `circleci` as the `vcs-slug` and replace the `org-name` with the organization ID (found in Organization Settings)."
                        },
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "allow-list-entry-id",
                          "description": "(Required) URL orb allow-list entry UUID."
                        }
                      ]
                    },
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "DELETE",
                    "auth": null
                  },
                  "response": [
                    {
                      "id": "ed489864-3328-4e50-b4bb-6c8ae5e29cfe",
                      "name": "The ID of the removed URL Orb allow-list entry",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "organization",
                            ":org-slug-or-id",
                            "url-orb-allow-list",
                            ":allow-list-entry-id"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "org-slug-or-id",
                              "description": "(Required) Org UUID or slug in the form `vcs-slug/org-name`. For projects that use GitLab or GitHub App, use `circleci` as the `vcs-slug` and replace the `org-name` with the organization ID (found in Organization Settings)."
                            },
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "allow-list-entry-id",
                              "description": "(Required) URL orb allow-list entry UUID."
                            }
                          ]
                        },
                        "header": [
                          {
                            "description": {
                              "content": "Added as a part of security scheme: apikey",
                              "type": "text/plain"
                            },
                            "key": "Circle-Token",
                            "value": "<API Key>"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "method": "DELETE",
                        "body": {}
                      },
                      "status": "OK",
                      "code": 200,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n  \"id\": \"ba98990a-5a00-4cad-b55e-b44117b92e0c\",\n  \"message\": \"Created.\"\n}",
                      "cookie": [],
                      "_postman_previewlanguage": "json"
                    },
                    {
                      "id": "6cd8545f-432c-4289-8b41-b3e4813ce088",
                      "name": "Error response.",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "organization",
                            ":org-slug-or-id",
                            "url-orb-allow-list",
                            ":allow-list-entry-id"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "org-slug-or-id",
                              "description": "(Required) Org UUID or slug in the form `vcs-slug/org-name`. For projects that use GitLab or GitHub App, use `circleci` as the `vcs-slug` and replace the `org-name` with the organization ID (found in Organization Settings)."
                            },
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "allow-list-entry-id",
                              "description": "(Required) URL orb allow-list entry UUID."
                            }
                          ]
                        },
                        "header": [
                          {
                            "description": {
                              "content": "Added as a part of security scheme: apikey",
                              "type": "text/plain"
                            },
                            "key": "Circle-Token",
                            "value": "<API Key>"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "method": "DELETE",
                        "body": {}
                      },
                      "status": "Internal Server Error",
                      "code": 500,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n  \"message\": \"laborum\"\n}",
                      "cookie": [],
                      "_postman_previewlanguage": "json"
                    }
                  ],
                  "event": [],
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  }
                }
              ],
              "event": []
            }
          ],
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "3d9a5e21-ccd9-4044-824e-456e61655ece",
      "name": "pipeline",
      "item": [
        {
          "id": "d1232c2d-5852-4140-853f-beec8dae1d04",
          "name": "Get a list of pipelines",
          "request": {
            "name": "Get a list of pipelines",
            "description": {
              "content": "Returns all pipelines for the most recently built projects (max 250) you follow in an organization.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "pipeline"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "org-slug",
                  "value": "<string>",
                  "description": "Org slug in the form `vcs-slug/org-name`. For projects that use GitLab or GitHub App, use `circleci` as the `vcs-slug` and replace the `org-name` with the organization ID (found in Organization Settings)."
                },
                {
                  "disabled": false,
                  "key": "page-token",
                  "value": "<string>",
                  "description": "A token to retrieve the next page of results."
                },
                {
                  "disabled": false,
                  "key": "mine",
                  "value": "<boolean>",
                  "description": "Only include entries created by your user."
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "4ba75508-9250-47e4-9e6f-4b3f32b57a53",
              "name": "A sequence of pipelines.",
              "originalRequest": {
                "url": {
                  "path": [
                    "pipeline"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "org-slug",
                      "value": "gh/CircleCI-Public"
                    },
                    {
                      "key": "page-token",
                      "value": "<string>"
                    },
                    {
                      "key": "mine",
                      "value": "<boolean>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "Circle-Token",
                    "value": "<API Key>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"items\": [\n    {\n      \"id\": \"5034460f-c7c4-4c43-9457-de07e2029e7b\",\n      \"number\": 25,\n      \"project_slug\": \"gh/CircleCI-Public/api-preview-docs\",\n      \"created_at\": \"1947-08-23T14:47:44.163Z\",\n      \"errors\": [\n        {\n          \"type\": \"invalid-trigger-setup\",\n          \"message\": \"cillum ex Lorem adipisicing officia\"\n        },\n        {\n          \"type\": \"other\",\n          \"message\": \"cupidatat dolor laboris sed\"\n        }\n      ],\n      \"state\": \"errored\",\n      \"trigger\": {\n        \"type\": \"explicit\",\n        \"received_at\": \"1963-01-20T00:46:13.335Z\",\n        \"actor\": {\n          \"login\": \"magna sit ea\",\n          \"avatar_url\": \"ea et sit nulla magna\"\n        }\n      },\n      \"updated_at\": \"1995-09-02T23:04:44.316Z\",\n      \"trigger_parameters\": {\n        \"amet_98\": \"amet irure \",\n        \"commodo59\": \"sunt Excepteur exercitation aliqua veniam\",\n        \"ut_3d1\": \"in exercitation quis aliquip\"\n      },\n      \"vcs\": {\n        \"provider_name\": \"GitHub\",\n        \"origin_repository_url\": \"https://github.com/CircleCI-Public/api-preview-docs\",\n        \"target_repository_url\": \"https://github.com/CircleCI-Public/api-preview-docs\",\n        \"revision\": \"f454a02b5d10fcccfd7d9dd7608a76d6493a98b4\",\n        \"branch\": \"feature/design-new-api\",\n        \"review_id\": \"123\",\n        \"review_url\": \"https://github.com/CircleCI-Public/api-preview-docs/pull/123\",\n        \"tag\": \"v3.1.4159\",\n        \"commit\": {\n          \"subject\": \"mollit aliquip labore\",\n          \"body\": \"sint qui laboris\"\n        }\n      }\n    },\n    {\n      \"id\": \"5034460f-c7c4-4c43-9457-de07e2029e7b\",\n      \"number\": 25,\n      \"project_slug\": \"gh/CircleCI-Public/api-preview-docs\",\n      \"created_at\": \"1984-10-02T19:52:15.408Z\",\n      \"errors\": [\n        {\n          \"type\": \"plan\",\n          \"message\": \"qui\"\n        },\n        {\n          \"type\": \"permission\",\n          \"message\": \"est occaecat et\"\n        }\n      ],\n      \"state\": \"pending\",\n      \"trigger\": {\n        \"type\": \"webhook\",\n        \"received_at\": \"1973-01-23T00:31:10.572Z\",\n        \"actor\": {\n          \"login\": \"mollit est\",\n          \"avatar_url\": \"Duis pariatur\"\n        }\n      },\n      \"updated_at\": \"1996-11-13T07:30:29.563Z\",\n      \"trigger_parameters\": {\n        \"aliquip_05\": \"tempor\",\n        \"ut29\": \"dolore\",\n        \"dolore53\": \"proident et eu\",\n        \"sint_da\": \"eiusmod exercitation voluptate commodo esse\"\n      },\n      \"vcs\": {\n        \"provider_name\": \"GitHub\",\n        \"origin_repository_url\": \"https://github.com/CircleCI-Public/api-preview-docs\",\n        \"target_repository_url\": \"https://github.com/CircleCI-Public/api-preview-docs\",\n        \"revision\": \"f454a02b5d10fcccfd7d9dd7608a76d6493a98b4\",\n        \"branch\": \"feature/design-new-api\",\n        \"review_id\": \"123\",\n        \"review_url\": \"https://github.com/CircleCI-Public/api-preview-docs/pull/123\",\n        \"tag\": \"v3.1.4159\",\n        \"commit\": {\n          \"subject\": \"ipsum esse\",\n          \"body\": \"aliqua eu elit\"\n        }\n      }\n    }\n  ],\n  \"next_page_token\": \"consectetur fugiat aute\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "0a69508d-8596-44c8-aca0-95c48fd33c39",
              "name": "Error response.",
              "originalRequest": {
                "url": {
                  "path": [
                    "pipeline"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "org-slug",
                      "value": "gh/CircleCI-Public"
                    },
                    {
                      "key": "page-token",
                      "value": "<string>"
                    },
                    {
                      "key": "mine",
                      "value": "<boolean>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "Circle-Token",
                    "value": "<API Key>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"message\": \"laborum\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "1a4d59b4-7e26-4fe1-8c88-0410731e6eb8",
          "name": "Continue a pipeline",
          "request": {
            "name": "Continue a pipeline",
            "description": {
              "content": "Continue a pipeline from the setup phase. For information on using pipeline parameters with dynamic configuration, see the [Pipeline values and parameters](https://circleci.com/docs/pipeline-variables/#pipeline-parameters-and-dynamic-configuration) docs.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "pipeline",
                "continue"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n  \"continuation-key\": \"<string>\",\n  \"configuration\": \"<string>\",\n  \"parameters\": {\n    \"qui6c\": \"<integer>\",\n    \"ut_265\": \"<integer>\",\n    \"amet_c4\": \"<integer>\"\n  }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "id": "5e8f29c5-b444-4b20-ac22-c14d8f81d7e4",
              "name": "A confirmation message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "pipeline",
                    "continue"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "Circle-Token",
                    "value": "<API Key>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"continuation-key\": \"<string>\",\n  \"configuration\": \"<string>\",\n  \"parameters\": {\n    \"cillum_e2\": \"<integer>\",\n    \"dolor_3\": \"<integer>\"\n  }\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"message\": \"pariat\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "5386bb62-e75c-46cd-ad6e-c2f711ca8bba",
              "name": "Error response.",
              "originalRequest": {
                "url": {
                  "path": [
                    "pipeline",
                    "continue"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "Circle-Token",
                    "value": "<API Key>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"continuation-key\": \"<string>\",\n  \"configuration\": \"<string>\",\n  \"parameters\": {\n    \"cillum_e2\": \"<integer>\",\n    \"dolor_3\": \"<integer>\"\n  }\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"message\": \"laborum\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "1b7f1ea6-db31-4538-8818-1033af24bdc3",
          "name": "{pipeline-id}",
          "item": [
            {
              "id": "c49a9d54-34aa-460f-8093-c25a2a26b78b",
              "name": "Get a pipeline by ID",
              "request": {
                "name": "Get a pipeline by ID",
                "description": {
                  "content": "Returns a pipeline by the pipeline ID.",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pipeline",
                    ":pipeline-id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<uuid>",
                      "key": "pipeline-id",
                      "description": "(Required) The unique ID of the pipeline."
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "auth": null
              },
              "response": [
                {
                  "id": "530bd1c0-6da1-4339-bd5b-0a086cbf4004",
                  "name": "A pipeline object.",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pipeline",
                        ":pipeline-id"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<uuid>",
                          "key": "pipeline-id",
                          "description": "(Required) The unique ID of the pipeline."
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "Added as a part of security scheme: apikey",
                          "type": "text/plain"
                        },
                        "key": "Circle-Token",
                        "value": "<API Key>"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n  \"id\": \"5034460f-c7c4-4c43-9457-de07e2029e7b\",\n  \"number\": 25,\n  \"project_slug\": \"gh/CircleCI-Public/api-preview-docs\",\n  \"created_at\": \"1986-03-13T09:45:17.939Z\",\n  \"errors\": [\n    {\n      \"type\": \"invalid-trigger-setup\",\n      \"message\": \"sunt Ut laboris ut labore\"\n    },\n    {\n      \"type\": \"trigger-rule\",\n      \"message\": \"incididunt occaecat deserunt ut in\"\n    }\n  ],\n  \"state\": \"setup-pending\",\n  \"trigger\": {\n    \"type\": \"webhook\",\n    \"received_at\": \"1971-01-14T09:55:28.436Z\",\n    \"actor\": {\n      \"login\": \"mollit proident consectetur\",\n      \"avatar_url\": \"occaecat ut laborum\"\n    }\n  },\n  \"updated_at\": \"2013-02-03T17:33:04.786Z\",\n  \"trigger_parameters\": {\n    \"cillumf2\": \"Duis\"\n  },\n  \"vcs\": {\n    \"provider_name\": \"GitHub\",\n    \"origin_repository_url\": \"https://github.com/CircleCI-Public/api-preview-docs\",\n    \"target_repository_url\": \"https://github.com/CircleCI-Public/api-preview-docs\",\n    \"revision\": \"f454a02b5d10fcccfd7d9dd7608a76d6493a98b4\",\n    \"branch\": \"feature/design-new-api\",\n    \"review_id\": \"123\",\n    \"review_url\": \"https://github.com/CircleCI-Public/api-preview-docs/pull/123\",\n    \"tag\": \"v3.1.4159\",\n    \"commit\": {\n      \"subject\": \"officia\",\n      \"body\": \"id consequat\"\n    }\n  }\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json"
                },
                {
                  "id": "2055d510-bf49-41c8-9eb9-63cacf1a11ef",
                  "name": "Error response.",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pipeline",
                        ":pipeline-id"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<uuid>",
                          "key": "pipeline-id",
                          "description": "(Required) The unique ID of the pipeline."
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "Added as a part of security scheme: apikey",
                          "type": "text/plain"
                        },
                        "key": "Circle-Token",
                        "value": "<API Key>"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n  \"message\": \"laborum\"\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json"
                }
              ],
              "event": [],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              }
            },
            {
              "id": "bb394235-0ecf-438d-8084-5d29f29688b0",
              "name": "Get a pipeline's configuration",
              "request": {
                "name": "Get a pipeline's configuration",
                "description": {
                  "content": "Returns a pipeline's configuration by ID.",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pipeline",
                    ":pipeline-id",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<uuid>",
                      "key": "pipeline-id",
                      "description": "(Required) The unique ID of the pipeline."
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "auth": null
              },
              "response": [
                {
                  "id": "e331d73a-3427-4654-8df3-1126f24fb236",
                  "name": "The configuration strings for the pipeline.",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pipeline",
                        ":pipeline-id",
                        "config"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<uuid>",
                          "key": "pipeline-id",
                          "description": "(Required) The unique ID of the pipeline."
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "Added as a part of security scheme: apikey",
                          "type": "text/plain"
                        },
                        "key": "Circle-Token",
                        "value": "<API Key>"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n  \"source\": \"laboris irure ut\",\n  \"compiled\": \"in aliquip officia consecte\",\n  \"setup-config\": \"voluptate aliquip\",\n  \"compiled-setup-config\": \"aliqua eiusmod nulla exercitation\"\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json"
                },
                {
                  "id": "6545cac4-43f9-406e-acb2-e687aff89ac9",
                  "name": "Error response.",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pipeline",
                        ":pipeline-id",
                        "config"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<uuid>",
                          "key": "pipeline-id",
                          "description": "(Required) The unique ID of the pipeline."
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "Added as a part of security scheme: apikey",
                          "type": "text/plain"
                        },
                        "key": "Circle-Token",
                        "value": "<API Key>"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n  \"message\": \"laborum\"\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json"
                }
              ],
              "event": [],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              }
            },
            {
              "id": "7400c680-7873-475f-a5dc-8ea9409c7c1f",
              "name": "Get pipeline values for a pipeline",
              "request": {
                "name": "Get pipeline values for a pipeline",
                "description": {
                  "content": "Returns a map of pipeline values by pipeline ID. For more information see the [pipeline values reference page](https://circleci.com/docs/variables/#pipeline-values).",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pipeline",
                    ":pipeline-id",
                    "values"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<uuid>",
                      "key": "pipeline-id",
                      "description": "(Required) The unique ID of the pipeline."
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "auth": null
              },
              "response": [
                {
                  "id": "6da02d90-97b5-43a9-989e-248d1c822f7d",
                  "name": "A JSON object of pipeline values",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pipeline",
                        ":pipeline-id",
                        "values"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<uuid>",
                          "key": "pipeline-id",
                          "description": "(Required) The unique ID of the pipeline."
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "Added as a part of security scheme: apikey",
                          "type": "text/plain"
                        },
                        "key": "Circle-Token",
                        "value": "<API Key>"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n  \"in_48\": \"ut proident do elit\",\n  \"cillum_1\": \"id commodo Duis aliquip labore\"\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json"
                },
                {
                  "id": "199e21b4-3fdf-4628-8bbb-562a63a2faf9",
                  "name": "Error response.",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pipeline",
                        ":pipeline-id",
                        "values"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<uuid>",
                          "key": "pipeline-id",
                          "description": "(Required) The unique ID of the pipeline."
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "Added as a part of security scheme: apikey",
                          "type": "text/plain"
                        },
                        "key": "Circle-Token",
                        "value": "<API Key>"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n  \"message\": \"laborum\"\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json"
                }
              ],
              "event": [],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              }
            },
            {
              "id": "88a7bb87-776e-4161-a538-9df3a95bbc76",
              "name": "Get a pipeline's workflows",
              "request": {
                "name": "Get a pipeline's workflows",
                "description": {
                  "content": "Returns a paginated list of workflows by pipeline ID.",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pipeline",
                    ":pipeline-id",
                    "workflow"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "disabled": false,
                      "key": "page-token",
                      "value": "<string>",
                      "description": "A token to retrieve the next page of results."
                    }
                  ],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<uuid>",
                      "key": "pipeline-id",
                      "description": "(Required) The unique ID of the pipeline."
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "auth": null
              },
              "response": [
                {
                  "id": "bc37d4a6-283f-4497-935d-04d6cb7b09a1",
                  "name": "A paginated list of workflow objects.",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pipeline",
                        ":pipeline-id",
                        "workflow"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "page-token",
                          "value": "<string>"
                        }
                      ],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<uuid>",
                          "key": "pipeline-id",
                          "description": "(Required) The unique ID of the pipeline."
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "Added as a part of security scheme: apikey",
                          "type": "text/plain"
                        },
                        "key": "Circle-Token",
                        "value": "<API Key>"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n  \"items\": [\n    {\n      \"id\": \"d1527d6f-f664-b25f-33dc-2280e39c26aa\",\n      \"name\": \"build-and-test\",\n      \"status\": \"failing\",\n      \"created_at\": \"1995-03-04T08:59:35.593Z\",\n      \"stopped_at\": \"1947-10-17T19:23:03.747Z\",\n      \"pipeline_id\": \"5034460f-c7c4-4c43-9457-de07e2029e7b\",\n      \"pipeline_number\": 25,\n      \"project_slug\": \"gh/CircleCI-Public/api-preview-docs\",\n      \"started_by\": \"urn:uuid:ec11bda2-a26d-d5e8-46c0-1aaad1c4dac4\",\n      \"canceled_by\": \"urn:uuid:b507b926-af98-09a0-0ed3-cdf562139280\",\n      \"errored_by\": \"a897d1f2-5317-cbdd-45ca-1a88d00daefc\",\n      \"tag\": \"setup\"\n    },\n    {\n      \"id\": \"c36ff332-9d83-9123-6a05-3aedcdd5568c\",\n      \"name\": \"build-and-test\",\n      \"status\": \"failed\",\n      \"created_at\": \"2003-12-26T04:53:11.296Z\",\n      \"stopped_at\": \"1975-10-21T14:37:49.573Z\",\n      \"pipeline_id\": \"5034460f-c7c4-4c43-9457-de07e2029e7b\",\n      \"pipeline_number\": 25,\n      \"project_slug\": \"gh/CircleCI-Public/api-preview-docs\",\n      \"started_by\": \"urn:uuid:926a1bf2-0a81-bab8-714a-60dab1567d1e\",\n      \"canceled_by\": \"4e1c0c2c-49cc-5be7-bf94-018e32265fbc\",\n      \"errored_by\": \"urn:uuid:a443422c-86ab-2e12-a2f1-b72ca354209b\",\n      \"tag\": \"setup\"\n    }\n  ],\n  \"next_page_token\": \"ullamco ipsum et irure\"\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json"
                },
                {
                  "id": "ab76c16f-e80c-4531-bcda-734be6355b51",
                  "name": "Error response.",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pipeline",
                        ":pipeline-id",
                        "workflow"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "page-token",
                          "value": "<string>"
                        }
                      ],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<uuid>",
                          "key": "pipeline-id",
                          "description": "(Required) The unique ID of the pipeline."
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "Added as a part of security scheme: apikey",
                          "type": "text/plain"
                        },
                        "key": "Circle-Token",
                        "value": "<API Key>"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n  \"message\": \"laborum\"\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json"
                }
              ],
              "event": [],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              }
            }
          ],
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "6c37351f-4b44-4c87-9c9e-9c86dd22f43c",
      "name": "project",
      "item": [
        {
          "id": "976ef06e-85cf-4ad6-ab88-f9a6029474d3",
          "name": "{project-slug}",
          "item": [
            {
              "id": "7557272d-6ba0-41bd-baff-624ab86ebe42",
              "name": "Delete a project",
              "request": {
                "name": "Delete a project",
                "description": {
                  "content": "Deletes a project by project slug",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "project",
                    ":project-slug"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "project-slug",
                      "description": "(Required) Project slug in the form `vcs-slug/org-name/repo-name`. The `/` characters may be URL-escaped. For projects that use GitLab or GitHub App, use `circleci` as the `vcs-slug`, replace `org-name` with the organization ID (found in Organization Settings), and replace `repo-name` with the project ID (found in Project Settings)."
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "DELETE",
                "auth": null
              },
              "response": [
                {
                  "id": "0087d123-bd5a-46b8-a5e3-7d759d0699b1",
                  "name": "A confirmation message.",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "project",
                        ":project-slug"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "project-slug",
                          "description": "(Required) Project slug in the form `vcs-slug/org-name/repo-name`. The `/` characters may be URL-escaped. For projects that use GitLab or GitHub App, use `circleci` as the `vcs-slug`, replace `org-name` with the organization ID (found in Organization Settings), and replace `repo-name` with the project ID (found in Project Settings)."
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "Added as a part of security scheme: apikey",
                          "type": "text/plain"
                        },
                        "key": "Circle-Token",
                        "value": "<API Key>"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "DELETE",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n  \"message\": \"pariat\"\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json"
                },
                {
                  "id": "79860d05-70df-4f1f-bade-c385269a094d",
                  "name": "Error response.",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "project",
                        ":project-slug"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "project-slug",
                          "description": "(Required) Project slug in the form `vcs-slug/org-name/repo-name`. The `/` characters may be URL-escaped. For projects that use GitLab or GitHub App, use `circleci` as the `vcs-slug`, replace `org-name` with the organization ID (found in Organization Settings), and replace `repo-name` with the project ID (found in Project Settings)."
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "Added as a part of security scheme: apikey",
                          "type": "text/plain"
                        },
                        "key": "Circle-Token",
                        "value": "<API Key>"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "DELETE",
                    "body": {}
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n  \"message\": \"laborum\"\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json"
                }
              ],
              "event": [],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              }
            },
            {
              "id": "71c17065-7dfc-4e95-a60b-ad0539700791",
              "name": "Get a project",
              "request": {
                "name": "Get a project",
                "description": {
                  "content": "Retrieves a project by project slug.",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "project",
                    ":project-slug"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "project-slug",
                      "description": "(Required) Project slug in the form `vcs-slug/org-name/repo-name`. The `/` characters may be URL-escaped. For projects that use GitLab or GitHub App, use `circleci` as the `vcs-slug`, replace `org-name` with the organization ID (found in Organization Settings), and replace `repo-name` with the project ID (found in Project Settings)."
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "auth": null
              },
              "response": [
                {
                  "id": "41e0b959-72b9-405d-964e-cce7f73581bb",
                  "name": "A project object",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "project",
                        ":project-slug"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "project-slug",
                          "description": "(Required) Project slug in the form `vcs-slug/org-name/repo-name`. The `/` characters may be URL-escaped. For projects that use GitLab or GitHub App, use `circleci` as the `vcs-slug`, replace `org-name` with the organization ID (found in Organization Settings), and replace `repo-name` with the project ID (found in Project Settings)."
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "Added as a part of security scheme: apikey",
                          "type": "text/plain"
                        },
                        "key": "Circle-Token",
                        "value": "<API Key>"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n  \"slug\": \"gh/CircleCI-Public/api-preview-docs\",\n  \"name\": \"api-preview-docs\",\n  \"id\": \"aab122fa-4a70-918e-21f4-d44228f3d8b2\",\n  \"organization_name\": \"CircleCI-Public\",\n  \"organization_slug\": \"gh/CircleCI-Public\",\n  \"organization_id\": \"ec6887ec-7d44-4b31-b468-7e552408ee32\",\n  \"vcs_info\": {\n    \"vcs_url\": \"https://github.com/CircleCI-Public/api-preview-docs\",\n    \"provider\": \"CircleCI\",\n    \"default_branch\": \"main\"\n  }\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json"
                },
                {
                  "id": "90e02a5f-fd4a-489d-9faa-83afd39ce06d",
                  "name": "Error response.",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "project",
                        ":project-slug"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "project-slug",
                          "description": "(Required) Project slug in the form `vcs-slug/org-name/repo-name`. The `/` characters may be URL-escaped. For projects that use GitLab or GitHub App, use `circleci` as the `vcs-slug`, replace `org-name` with the organization ID (found in Organization Settings), and replace `repo-name` with the project ID (found in Project Settings)."
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "Added as a part of security scheme: apikey",
                          "type": "text/plain"
                        },
                        "key": "Circle-Token",
                        "value": "<API Key>"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n  \"message\": \"laborum\"\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json"
                }
              ],
              "event": [],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              }
            },
            {
              "id": "7e561bf1-28f2-4e1e-a139-61df8dc84c1c",
              "name": "checkout-key",
              "item": [
                {
                  "id": "f6226a70-4846-470a-84ca-1eb402d336ba",
                  "name": "Get all checkout keys",
                  "request": {
                    "name": "Get all checkout keys",
                    "description": {
                      "content": "Returns a sequence of checkout keys for `:project`.",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "project",
                        ":project-slug",
                        "checkout-key"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "disabled": false,
                          "key": "digest",
                          "value": "<string>",
                          "description": "The fingerprint digest type to return. This may be either `md5` or `sha256`. If not passed, defaults to `md5`."
                        }
                      ],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "project-slug",
                          "description": "(Required) Project slug in the form `vcs-slug/org-name/repo-name`. The `/` characters may be URL-escaped. For projects that use GitLab or GitHub App, use `circleci` as the `vcs-slug`, replace `org-name` with the organization ID (found in Organization Settings), and replace `repo-name` with the project ID (found in Project Settings)."
                        }
                      ]
                    },
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "GET",
                    "auth": null
                  },
                  "response": [
                    {
                      "id": "38c48821-28de-4177-aee4-dddc124aee05",
                      "name": "A sequence of checkout keys.",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "project",
                            ":project-slug",
                            "checkout-key"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [
                            {
                              "key": "digest",
                              "value": "<string>"
                            }
                          ],
                          "variable": [
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "project-slug",
                              "description": "(Required) Project slug in the form `vcs-slug/org-name/repo-name`. The `/` characters may be URL-escaped. For projects that use GitLab or GitHub App, use `circleci` as the `vcs-slug`, replace `org-name` with the organization ID (found in Organization Settings), and replace `repo-name` with the project ID (found in Project Settings)."
                            }
                          ]
                        },
                        "header": [
                          {
                            "description": {
                              "content": "Added as a part of security scheme: apikey",
                              "type": "text/plain"
                            },
                            "key": "Circle-Token",
                            "value": "<API Key>"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "method": "GET",
                        "body": {}
                      },
                      "status": "OK",
                      "code": 200,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n  \"items\": [\n    {\n      \"public-key\": \"ssh-rsa ...\",\n      \"type\": \"deploy-key\",\n      \"fingerprint\": \"c9:0b:1c:4f:d5:65:56:b9:ad:88:f9:81:2b:37:74:2f\",\n      \"preferred\": true,\n      \"created-at\": \"2015-09-21T17:29:21.042Z\"\n    },\n    {\n      \"public-key\": \"ssh-rsa ...\",\n      \"type\": \"deploy-key\",\n      \"fingerprint\": \"c9:0b:1c:4f:d5:65:56:b9:ad:88:f9:81:2b:37:74:2f\",\n      \"preferred\": true,\n      \"created-at\": \"2015-09-21T17:29:21.042Z\"\n    }\n  ],\n  \"next_page_token\": \"aliquip sed Ut\"\n}",
                      "cookie": [],
                      "_postman_previewlanguage": "json"
                    },
                    {
                      "id": "9d70df07-c499-42cd-b478-af84f152a7f1",
                      "name": "Error response.",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "project",
                            ":project-slug",
                            "checkout-key"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [
                            {
                              "key": "digest",
                              "value": "<string>"
                            }
                          ],
                          "variable": [
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "project-slug",
                              "description": "(Required) Project slug in the form `vcs-slug/org-name/repo-name`. The `/` characters may be URL-escaped. For projects that use GitLab or GitHub App, use `circleci` as the `vcs-slug`, replace `org-name` with the organization ID (found in Organization Settings), and replace `repo-name` with the project ID (found in Project Settings)."
                            }
                          ]
                        },
                        "header": [
                          {
                            "description": {
                              "content": "Added as a part of security scheme: apikey",
                              "type": "text/plain"
                            },
                            "key": "Circle-Token",
                            "value": "<API Key>"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Internal Server Error",
                      "code": 500,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n  \"message\": \"laborum\"\n}",
                      "cookie": [],
                      "_postman_previewlanguage": "json"
                    }
                  ],
                  "event": [],
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  }
                },
                {
                  "id": "a289f502-1a32-4e1e-83b5-e6302dd148ba",
                  "name": "Create a new checkout key",
                  "request": {
                    "name": "Create a new checkout key",
                    "description": {
                      "content": "Not available to projects that use GitLab or GitHub App. Creates a new checkout key. This API request is only usable with a user API token.\n                           Please ensure that you have authorized your account with GitHub before creating user keys.\n                           This is necessary to give CircleCI the permission to create a user key associated with\n                           your GitHub user account. You can find this page by visiting Project Settings > Checkout SSH Keys",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "project",
                        ":project-slug",
                        "checkout-key"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "project-slug",
                          "description": "(Required) Project slug in the form `vcs-slug/org-name/repo-name`. The `/` characters may be URL-escaped. For projects that use GitLab or GitHub App, use `circleci` as the `vcs-slug`, replace `org-name` with the organization ID (found in Organization Settings), and replace `repo-name` with the project ID (found in Project Settings)."
                        }
                      ]
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "POST",
                    "auth": null,
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"type\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    }
                  },
                  "response": [
                    {
                      "id": "1c697362-970b-4d56-b961-70f03ece1594",
                      "name": "The checkout key.",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "project",
                            ":project-slug",
                            "checkout-key"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "project-slug",
                              "description": "(Required) Project slug in the form `vcs-slug/org-name/repo-name`. The `/` characters may be URL-escaped. For projects that use GitLab or GitHub App, use `circleci` as the `vcs-slug`, replace `org-name` with the organization ID (found in Organization Settings), and replace `repo-name` with the project ID (found in Project Settings)."
                            }
                          ]
                        },
                        "header": [
                          {
                            "description": {
                              "content": "Added as a part of security scheme: apikey",
                              "type": "text/plain"
                            },
                            "key": "Circle-Token",
                            "value": "<API Key>"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "method": "POST",
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"type\": \"deploy-key\"\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        }
                      },
                      "status": "Created",
                      "code": 201,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n  \"public-key\": \"ssh-rsa ...\",\n  \"type\": \"deploy-key\",\n  \"fingerprint\": \"c9:0b:1c:4f:d5:65:56:b9:ad:88:f9:81:2b:37:74:2f\",\n  \"preferred\": true,\n  \"created-at\": \"2015-09-21T17:29:21.042Z\"\n}",
                      "cookie": [],
                      "_postman_previewlanguage": "json"
                    },
                    {
                      "id": "b7f2e706-18ee-4abb-94b6-978016b4d0a6",
                      "name": "Error response.",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "project",
                            ":project-slug",
                            "checkout-key"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "project-slug",
                              "description": "(Required) Project slug in the form `vcs-slug/org-name/repo-name`. The `/` characters may be URL-escaped. For projects that use GitLab or GitHub App, use `circleci` as the `vcs-slug`, replace `org-name` with the organization ID (found in Organization Settings), and replace `repo-name` with the project ID (found in Project Settings)."
                            }
                          ]
                        },
                        "header": [
                          {
                            "description": {
                              "content": "Added as a part of security scheme: apikey",
                              "type": "text/plain"
                            },
                            "key": "Circle-Token",
                            "value": "<API Key>"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "method": "POST",
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"type\": \"deploy-key\"\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        }
                      },
                      "status": "Internal Server Error",
                      "code": 500,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n  \"message\": \"laborum\"\n}",
                      "cookie": [],
                      "_postman_previewlanguage": "json"
                    }
                  ],
                  "event": [],
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  }
                },
                {
                  "id": "44bc7a3b-111d-49d1-bfb4-59dd3f9d0229",
                  "name": "{fingerprint}",
                  "item": [
                    {
                      "id": "60259a7f-1cb6-44cb-ad6b-62f2ecd98008",
                      "name": "Get a checkout key",
                      "request": {
                        "name": "Get a checkout key",
                        "description": {
                          "content": "Returns an individual checkout key via md5 or sha256 fingerprint. sha256 keys should be url-encoded.",
                          "type": "text/plain"
                        },
                        "url": {
                          "path": [
                            "project",
                            ":project-slug",
                            "checkout-key",
                            ":fingerprint"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "project-slug",
                              "description": "(Required) Project slug in the form `vcs-slug/org-name/repo-name`. The `/` characters may be URL-escaped. For projects that use GitLab or GitHub App, use `circleci` as the `vcs-slug`, replace `org-name` with the organization ID (found in Organization Settings), and replace `repo-name` with the project ID (found in Project Settings)."
                            },
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "fingerprint",
                              "description": "(Required) An SSH key fingerprint."
                            }
                          ]
                        },
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "method": "GET",
                        "auth": null
                      },
                      "response": [
                        {
                          "id": "630ac9ab-87bc-4d39-aa0e-74b1cebd7b3a",
                          "name": "The checkout key.",
                          "originalRequest": {
                            "url": {
                              "path": [
                                "project",
                                ":project-slug",
                                "checkout-key",
                                ":fingerprint"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [],
                              "variable": [
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "<string>",
                                  "key": "project-slug",
                                  "description": "(Required) Project slug in the form `vcs-slug/org-name/repo-name`. The `/` characters may be URL-escaped. For projects that use GitLab or GitHub App, use `circleci` as the `vcs-slug`, replace `org-name` with the organization ID (found in Organization Settings), and replace `repo-name` with the project ID (found in Project Settings)."
                                },
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "<string>",
                                  "key": "fingerprint",
                                  "description": "(Required) An SSH key fingerprint."
                                }
                              ]
                            },
                            "header": [
                              {
                                "description": {
                                  "content": "Added as a part of security scheme: apikey",
                                  "type": "text/plain"
                                },
                                "key": "Circle-Token",
                                "value": "<API Key>"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "method": "GET",
                            "body": {}
                          },
                          "status": "OK",
                          "code": 200,
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": "{\n  \"public-key\": \"ssh-rsa ...\",\n  \"type\": \"deploy-key\",\n  \"fingerprint\": \"c9:0b:1c:4f:d5:65:56:b9:ad:88:f9:81:2b:37:74:2f\",\n  \"preferred\": true,\n  \"created-at\": \"2015-09-21T17:29:21.042Z\"\n}",
                          "cookie": [],
                          "_postman_previewlanguage": "json"
                        },
                        {
                          "id": "9005e865-ff23-4318-801e-0c65cf94058a",
                          "name": "Error response.",
                          "originalRequest": {
                            "url": {
                              "path": [
                                "project",
                                ":project-slug",
                                "checkout-key",
                                ":fingerprint"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [],
                              "variable": [
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "<string>",
                                  "key": "project-slug",
                                  "description": "(Required) Project slug in the form `vcs-slug/org-name/repo-name`. The `/` characters may be URL-escaped. For projects that use GitLab or GitHub App, use `circleci` as the `vcs-slug`, replace `org-name` with the organization ID (found in Organization Settings), and replace `repo-name` with the project ID (found in Project Settings)."
                                },
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "<string>",
                                  "key": "fingerprint",
                                  "description": "(Required) An SSH key fingerprint."
                                }
                              ]
                            },
                            "header": [
                              {
                                "description": {
                                  "content": "Added as a part of security scheme: apikey",
                                  "type": "text/plain"
                                },
                                "key": "Circle-Token",
                                "value": "<API Key>"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "method": "GET",
                            "body": {}
                          },
                          "status": "Internal Server Error",
                          "code": 500,
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": "{\n  \"message\": \"laborum\"\n}",
                          "cookie": [],
                          "_postman_previewlanguage": "json"
                        }
                      ],
                      "event": [],
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      }
                    },
                    {
                      "id": "1a20baba-5d59-489b-929b-8d4759a2fd3c",
                      "name": "Delete a checkout key",
                      "request": {
                        "name": "Delete a checkout key",
                        "description": {
                          "content": "Deletes the checkout key via md5 or sha256 fingerprint. sha256 keys should be url-encoded.",
                          "type": "text/plain"
                        },
                        "url": {
                          "path": [
                            "project",
                            ":project-slug",
                            "checkout-key",
                            ":fingerprint"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "project-slug",
                              "description": "(Required) Project slug in the form `vcs-slug/org-name/repo-name`. The `/` characters may be URL-escaped. For projects that use GitLab or GitHub App, use `circleci` as the `vcs-slug`, replace `org-name` with the organization ID (found in Organization Settings), and replace `repo-name` with the project ID (found in Project Settings)."
                            },
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "fingerprint",
                              "description": "(Required) An SSH key fingerprint."
                            }
                          ]
                        },
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "method": "DELETE",
                        "auth": null
                      },
                      "response": [
                        {
                          "id": "32cab2a1-5fdb-4e13-a405-853697f00fba",
                          "name": "A confirmation message.",
                          "originalRequest": {
                            "url": {
                              "path": [
                                "project",
                                ":project-slug",
                                "checkout-key",
                                ":fingerprint"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [],
                              "variable": [
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "<string>",
                                  "key": "project-slug",
                                  "description": "(Required) Project slug in the form `vcs-slug/org-name/repo-name`. The `/` characters may be URL-escaped. For projects that use GitLab or GitHub App, use `circleci` as the `vcs-slug`, replace `org-name` with the organization ID (found in Organization Settings), and replace `repo-name` with the project ID (found in Project Settings)."
                                },
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "<string>",
                                  "key": "fingerprint",
                                  "description": "(Required) An SSH key fingerprint."
                                }
                              ]
                            },
                            "header": [
                              {
                                "description": {
                                  "content": "Added as a part of security scheme: apikey",
                                  "type": "text/plain"
                                },
                                "key": "Circle-Token",
                                "value": "<API Key>"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "method": "DELETE",
                            "body": {}
                          },
                          "status": "OK",
                          "code": 200,
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": "{\n  \"message\": \"pariat\"\n}",
                          "cookie": [],
                          "_postman_previewlanguage": "json"
                        },
                        {
                          "id": "fdbbeac4-b06e-41ae-b3ab-d4fb74eb315b",
                          "name": "Error response.",
                          "originalRequest": {
                            "url": {
                              "path": [
                                "project",
                                ":project-slug",
                                "checkout-key",
                                ":fingerprint"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [],
                              "variable": [
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "<string>",
                                  "key": "project-slug",
                                  "description": "(Required) Project slug in the form `vcs-slug/org-name/repo-name`. The `/` characters may be URL-escaped. For projects that use GitLab or GitHub App, use `circleci` as the `vcs-slug`, replace `org-name` with the organization ID (found in Organization Settings), and replace `repo-name` with the project ID (found in Project Settings)."
                                },
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "<string>",
                                  "key": "fingerprint",
                                  "description": "(Required) An SSH key fingerprint."
                                }
                              ]
                            },
                            "header": [
                              {
                                "description": {
                                  "content": "Added as a part of security scheme: apikey",
                                  "type": "text/plain"
                                },
                                "key": "Circle-Token",
                                "value": "<API Key>"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "method": "DELETE",
                            "body": {}
                          },
                          "status": "Internal Server Error",
                          "code": 500,
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": "{\n  \"message\": \"laborum\"\n}",
                          "cookie": [],
                          "_postman_previewlanguage": "json"
                        }
                      ],
                      "event": [],
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      }
                    }
                  ],
                  "event": []
                }
              ],
              "event": []
            },
            {
              "id": "1098e3d3-4ff1-4638-9f98-7c2df6e980c8",
              "name": "envvar",
              "item": [
                {
                  "id": "bfcfa10f-bfda-4183-a794-6b8635ab0e7e",
                  "name": "List all environment variables",
                  "request": {
                    "name": "List all environment variables",
                    "description": {
                      "content": "Returns four 'x' characters, in addition to the last four ASCII characters of the value, consistent with the display of environment variable values on the CircleCI website.",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "project",
                        ":project-slug",
                        "envvar"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "project-slug",
                          "description": "(Required) Project slug in the form `vcs-slug/org-name/repo-name`. The `/` characters may be URL-escaped. For projects that use GitLab or GitHub App, use `circleci` as the `vcs-slug`, replace `org-name` with the organization ID (found in Organization Settings), and replace `repo-name` with the project ID (found in Project Settings)."
                        }
                      ]
                    },
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "GET",
                    "auth": null
                  },
                  "response": [
                    {
                      "id": "aed3f8e4-059e-4a62-ac1d-7d0dcf1f0c2e",
                      "name": "A sequence of environment variables.",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "project",
                            ":project-slug",
                            "envvar"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "project-slug",
                              "description": "(Required) Project slug in the form `vcs-slug/org-name/repo-name`. The `/` characters may be URL-escaped. For projects that use GitLab or GitHub App, use `circleci` as the `vcs-slug`, replace `org-name` with the organization ID (found in Organization Settings), and replace `repo-name` with the project ID (found in Project Settings)."
                            }
                          ]
                        },
                        "header": [
                          {
                            "description": {
                              "content": "Added as a part of security scheme: apikey",
                              "type": "text/plain"
                            },
                            "key": "Circle-Token",
                            "value": "<API Key>"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "method": "GET",
                        "body": {}
                      },
                      "status": "OK",
                      "code": 200,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n  \"items\": [\n    {\n      \"name\": \"foo\",\n      \"value\": \"xxxx1234\",\n      \"created-at\": {}\n    },\n    {\n      \"name\": \"foo\",\n      \"value\": \"xxxx1234\",\n      \"created-at\": {}\n    }\n  ],\n  \"next_page_token\": \"laborum laboris in tempor\"\n}",
                      "cookie": [],
                      "_postman_previewlanguage": "json"
                    },
                    {
                      "id": "597fd85f-1ab3-4731-9582-80cbd1f7520f",
                      "name": "Error response.",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "project",
                            ":project-slug",
                            "envvar"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "project-slug",
                              "description": "(Required) Project slug in the form `vcs-slug/org-name/repo-name`. The `/` characters may be URL-escaped. For projects that use GitLab or GitHub App, use `circleci` as the `vcs-slug`, replace `org-name` with the organization ID (found in Organization Settings), and replace `repo-name` with the project ID (found in Project Settings)."
                            }
                          ]
                        },
                        "header": [
                          {
                            "description": {
                              "content": "Added as a part of security scheme: apikey",
                              "type": "text/plain"
                            },
                            "key": "Circle-Token",
                            "value": "<API Key>"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Internal Server Error",
                      "code": 500,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n  \"message\": \"laborum\"\n}",
                      "cookie": [],
                      "_postman_previewlanguage": "json"
                    }
                  ],
                  "event": [],
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  }
                },
                {
                  "id": "45acfbbd-a969-4cca-926b-1fdd889c1d9a",
                  "name": "Create an environment variable",
                  "request": {
                    "name": "Create an environment variable",
                    "description": {
                      "content": "Creates a new environment variable.",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "project",
                        ":project-slug",
                        "envvar"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "project-slug",
                          "description": "(Required) Project slug in the form `vcs-slug/org-name/repo-name`. The `/` characters may be URL-escaped. For projects that use GitLab or GitHub App, use `circleci` as the `vcs-slug`, replace `org-name` with the organization ID (found in Organization Settings), and replace `repo-name` with the project ID (found in Project Settings)."
                        }
                      ]
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "POST",
                    "auth": null,
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"name\": \"<string>\",\n  \"value\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    }
                  },
                  "response": [
                    {
                      "id": "b1a2bfbd-d94a-45d5-8107-7f59c5e18ce0",
                      "name": "The environment variable.",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "project",
                            ":project-slug",
                            "envvar"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "project-slug",
                              "description": "(Required) Project slug in the form `vcs-slug/org-name/repo-name`. The `/` characters may be URL-escaped. For projects that use GitLab or GitHub App, use `circleci` as the `vcs-slug`, replace `org-name` with the organization ID (found in Organization Settings), and replace `repo-name` with the project ID (found in Project Settings)."
                            }
                          ]
                        },
                        "header": [
                          {
                            "description": {
                              "content": "Added as a part of security scheme: apikey",
                              "type": "text/plain"
                            },
                            "key": "Circle-Token",
                            "value": "<API Key>"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "method": "POST",
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"name\": \"foo\",\n  \"value\": \"xxxx1234\"\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        }
                      },
                      "status": "Created",
                      "code": 201,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n  \"name\": \"foo\",\n  \"value\": \"xxxx1234\",\n  \"created-at\": {}\n}",
                      "cookie": [],
                      "_postman_previewlanguage": "json"
                    },
                    {
                      "id": "49792f6e-e588-4a23-963f-a01200099ac8",
                      "name": "Error response.",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "project",
                            ":project-slug",
                            "envvar"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "project-slug",
                              "description": "(Required) Project slug in the form `vcs-slug/org-name/repo-name`. The `/` characters may be URL-escaped. For projects that use GitLab or GitHub App, use `circleci` as the `vcs-slug`, replace `org-name` with the organization ID (found in Organization Settings), and replace `repo-name` with the project ID (found in Project Settings)."
                            }
                          ]
                        },
                        "header": [
                          {
                            "description": {
                              "content": "Added as a part of security scheme: apikey",
                              "type": "text/plain"
                            },
                            "key": "Circle-Token",
                            "value": "<API Key>"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "method": "POST",
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"name\": \"foo\",\n  \"value\": \"xxxx1234\"\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        }
                      },
                      "status": "Internal Server Error",
                      "code": 500,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n  \"message\": \"laborum\"\n}",
                      "cookie": [],
                      "_postman_previewlanguage": "json"
                    }
                  ],
                  "event": [],
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  }
                },
                {
                  "id": "81704a91-e3d8-472b-ad9a-34e951001ef4",
                  "name": "{name}",
                  "item": [
                    {
                      "id": "c5029f2f-7f56-42b5-9d49-eb1539a89dab",
                      "name": "Delete an environment variable",
                      "request": {
                        "name": "Delete an environment variable",
                        "description": {
                          "content": "Deletes the environment variable named :name.",
                          "type": "text/plain"
                        },
                        "url": {
                          "path": [
                            "project",
                            ":project-slug",
                            "envvar",
                            ":name"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "project-slug",
                              "description": "(Required) Project slug in the form `vcs-slug/org-name/repo-name`. The `/` characters may be URL-escaped. For projects that use GitLab or GitHub App, use `circleci` as the `vcs-slug`, replace `org-name` with the organization ID (found in Organization Settings), and replace `repo-name` with the project ID (found in Project Settings)."
                            },
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "name",
                              "description": "(Required) The name of the environment variable."
                            }
                          ]
                        },
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "method": "DELETE",
                        "auth": null
                      },
                      "response": [
                        {
                          "id": "492a0b21-7c50-4f58-ad32-18bd6c154fbd",
                          "name": "A confirmation message.",
                          "originalRequest": {
                            "url": {
                              "path": [
                                "project",
                                ":project-slug",
                                "envvar",
                                ":name"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [],
                              "variable": [
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "<string>",
                                  "key": "project-slug",
                                  "description": "(Required) Project slug in the form `vcs-slug/org-name/repo-name`. The `/` characters may be URL-escaped. For projects that use GitLab or GitHub App, use `circleci` as the `vcs-slug`, replace `org-name` with the organization ID (found in Organization Settings), and replace `repo-name` with the project ID (found in Project Settings)."
                                },
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "<string>",
                                  "key": "name",
                                  "description": "(Required) The name of the environment variable."
                                }
                              ]
                            },
                            "header": [
                              {
                                "description": {
                                  "content": "Added as a part of security scheme: apikey",
                                  "type": "text/plain"
                                },
                                "key": "Circle-Token",
                                "value": "<API Key>"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "method": "DELETE",
                            "body": {}
                          },
                          "status": "OK",
                          "code": 200,
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": "{\n  \"message\": \"pariat\"\n}",
                          "cookie": [],
                          "_postman_previewlanguage": "json"
                        },
                        {
                          "id": "c4617011-f95c-4676-bc8a-aab9bc114b90",
                          "name": "Error response.",
                          "originalRequest": {
                            "url": {
                              "path": [
                                "project",
                                ":project-slug",
                                "envvar",
                                ":name"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [],
                              "variable": [
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "<string>",
                                  "key": "project-slug",
                                  "description": "(Required) Project slug in the form `vcs-slug/org-name/repo-name`. The `/` characters may be URL-escaped. For projects that use GitLab or GitHub App, use `circleci` as the `vcs-slug`, replace `org-name` with the organization ID (found in Organization Settings), and replace `repo-name` with the project ID (found in Project Settings)."
                                },
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "<string>",
                                  "key": "name",
                                  "description": "(Required) The name of the environment variable."
                                }
                              ]
                            },
                            "header": [
                              {
                                "description": {
                                  "content": "Added as a part of security scheme: apikey",
                                  "type": "text/plain"
                                },
                                "key": "Circle-Token",
                                "value": "<API Key>"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "method": "DELETE",
                            "body": {}
                          },
                          "status": "Internal Server Error",
                          "code": 500,
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": "{\n  \"message\": \"laborum\"\n}",
                          "cookie": [],
                          "_postman_previewlanguage": "json"
                        }
                      ],
                      "event": [],
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      }
                    },
                    {
                      "id": "bdea1f3c-f709-4be3-b788-0c039972b3eb",
                      "name": "Get a masked environment variable",
                      "request": {
                        "name": "Get a masked environment variable",
                        "description": {
                          "content": "Returns the masked value of environment variable :name.",
                          "type": "text/plain"
                        },
                        "url": {
                          "path": [
                            "project",
                            ":project-slug",
                            "envvar",
                            ":name"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "project-slug",
                              "description": "(Required) Project slug in the form `vcs-slug/org-name/repo-name`. The `/` characters may be URL-escaped. For projects that use GitLab or GitHub App, use `circleci` as the `vcs-slug`, replace `org-name` with the organization ID (found in Organization Settings), and replace `repo-name` with the project ID (found in Project Settings)."
                            },
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "name",
                              "description": "(Required) The name of the environment variable."
                            }
                          ]
                        },
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "method": "GET",
                        "auth": null
                      },
                      "response": [
                        {
                          "id": "30d5f2e6-f803-40ed-8b65-158211b06a48",
                          "name": "The environment variable.",
                          "originalRequest": {
                            "url": {
                              "path": [
                                "project",
                                ":project-slug",
                                "envvar",
                                ":name"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [],
                              "variable": [
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "<string>",
                                  "key": "project-slug",
                                  "description": "(Required) Project slug in the form `vcs-slug/org-name/repo-name`. The `/` characters may be URL-escaped. For projects that use GitLab or GitHub App, use `circleci` as the `vcs-slug`, replace `org-name` with the organization ID (found in Organization Settings), and replace `repo-name` with the project ID (found in Project Settings)."
                                },
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "<string>",
                                  "key": "name",
                                  "description": "(Required) The name of the environment variable."
                                }
                              ]
                            },
                            "header": [
                              {
                                "description": {
                                  "content": "Added as a part of security scheme: apikey",
                                  "type": "text/plain"
                                },
                                "key": "Circle-Token",
                                "value": "<API Key>"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "method": "GET",
                            "body": {}
                          },
                          "status": "OK",
                          "code": 200,
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": "{\n  \"name\": \"foo\",\n  \"value\": \"xxxx1234\",\n  \"created-at\": {}\n}",
                          "cookie": [],
                          "_postman_previewlanguage": "json"
                        },
                        {
                          "id": "71b34331-422f-499f-907c-7c548f4a7f84",
                          "name": "Error response.",
                          "originalRequest": {
                            "url": {
                              "path": [
                                "project",
                                ":project-slug",
                                "envvar",
                                ":name"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [],
                              "variable": [
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "<string>",
                                  "key": "project-slug",
                                  "description": "(Required) Project slug in the form `vcs-slug/org-name/repo-name`. The `/` characters may be URL-escaped. For projects that use GitLab or GitHub App, use `circleci` as the `vcs-slug`, replace `org-name` with the organization ID (found in Organization Settings), and replace `repo-name` with the project ID (found in Project Settings)."
                                },
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "<string>",
                                  "key": "name",
                                  "description": "(Required) The name of the environment variable."
                                }
                              ]
                            },
                            "header": [
                              {
                                "description": {
                                  "content": "Added as a part of security scheme: apikey",
                                  "type": "text/plain"
                                },
                                "key": "Circle-Token",
                                "value": "<API Key>"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "method": "GET",
                            "body": {}
                          },
                          "status": "Internal Server Error",
                          "code": 500,
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": "{\n  \"message\": \"laborum\"\n}",
                          "cookie": [],
                          "_postman_previewlanguage": "json"
                        }
                      ],
                      "event": [],
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      }
                    }
                  ],
                  "event": []
                }
              ],
              "event": []
            },
            {
              "id": "7f069eb3-9e57-467b-a58a-c7d49a1d2ccb",
              "name": "job/{job-number}",
              "item": [
                {
                  "id": "dd487df3-9a22-44ff-9362-258d89750a6d",
                  "name": "Get job details",
                  "request": {
                    "name": "Get job details",
                    "description": {
                      "content": "Returns job details.",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "project",
                        ":project-slug",
                        "job",
                        ":job-number"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "",
                          "key": "job-number",
                          "description": "(Required) The number of the job."
                        },
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "project-slug",
                          "description": "(Required) Project slug in the form `vcs-slug/org-name/repo-name`. The `/` characters may be URL-escaped. For projects that use GitLab or GitHub App, use `circleci` as the `vcs-slug`, replace `org-name` with the organization ID (found in Organization Settings), and replace `repo-name` with the project ID (found in Project Settings)."
                        }
                      ]
                    },
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "GET",
                    "auth": null
                  },
                  "response": [
                    {
                      "id": "dbd93c7f-1f72-4f83-aebe-c5a865a82110",
                      "name": "Job details.",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "project",
                            ":project-slug",
                            "job",
                            ":job-number"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "",
                              "key": "job-number",
                              "description": "(Required) The number of the job."
                            },
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "project-slug",
                              "description": "(Required) Project slug in the form `vcs-slug/org-name/repo-name`. The `/` characters may be URL-escaped. For projects that use GitLab or GitHub App, use `circleci` as the `vcs-slug`, replace `org-name` with the organization ID (found in Organization Settings), and replace `repo-name` with the project ID (found in Project Settings)."
                            }
                          ]
                        },
                        "header": [
                          {
                            "description": {
                              "content": "Added as a part of security scheme: apikey",
                              "type": "text/plain"
                            },
                            "key": "Circle-Token",
                            "value": "<API Key>"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "method": "GET",
                        "body": {}
                      },
                      "status": "OK",
                      "code": 200,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n  \"number\": 1,\n  \"name\": \"minim cupidatat consequat\",\n  \"status\": \"not_run\",\n  \"started_at\": \"2010-09-05T20:17:00.641Z\",\n  \"created_at\": \"1977-11-04T13:26:30.026Z\",\n  \"queued_at\": \"1978-07-02T23:20:35.658Z\",\n  \"duration\": -19609610,\n  \"executor\": {\n    \"resource_class\": \"cupidatat sed quis\",\n    \"type\": \"do Duis\"\n  },\n  \"project\": {\n    \"id\": \"urn:uuid:140108c8-0626-3a7f-5244-49504a59c366\",\n    \"slug\": \"gh/CircleCI-Public/api-preview-docs\",\n    \"name\": \"api-preview-docs\",\n    \"external_url\": \"https://github.com/CircleCI-Public/api-preview-docs\"\n  },\n  \"organization\": {\n    \"name\": \"ut dolore tempor\"\n  },\n  \"contexts\": [\n    {\n      \"name\": \"ad\"\n    },\n    {\n      \"name\": \"ex aliquip ut\"\n    }\n  ],\n  \"web_url\": \"Ut non sed\",\n  \"parallel_runs\": [\n    {\n      \"index\": -80323062,\n      \"status\": \"\"\n    },\n    {\n      \"index\": -95666286,\n      \"status\": \"commodo dolor quis non\"\n    }\n  ],\n  \"latest_workflow\": {\n    \"id\": \"830278f0-4d93-894b-50e7-7ffac6a2e6cb\",\n    \"name\": \"build-and-test\"\n  },\n  \"pipeline\": {\n    \"id\": \"5034460f-c7c4-4c43-9457-de07e2029e7b\"\n  },\n  \"parallelism\": -75373365,\n  \"messages\": [\n    {\n      \"type\": \"anim eu\",\n      \"message\": \"nulla minim eiusmod in aliqua\",\n      \"reason\": \"exercitation nulla \"\n    },\n    {\n      \"type\": \"tempor \",\n      \"message\": \"tempor occaecat aliqua sit\",\n      \"reason\": \"est\"\n    }\n  ],\n  \"stopped_at\": \"1978-10-04T10:57:40.073Z\"\n}",
                      "cookie": [],
                      "_postman_previewlanguage": "json"
                    },
                    {
                      "id": "c4201b85-69ab-4b0b-be9c-a94e994c94c8",
                      "name": "Error response.",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "project",
                            ":project-slug",
                            "job",
                            ":job-number"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "",
                              "key": "job-number",
                              "description": "(Required) The number of the job."
                            },
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "project-slug",
                              "description": "(Required) Project slug in the form `vcs-slug/org-name/repo-name`. The `/` characters may be URL-escaped. For projects that use GitLab or GitHub App, use `circleci` as the `vcs-slug`, replace `org-name` with the organization ID (found in Organization Settings), and replace `repo-name` with the project ID (found in Project Settings)."
                            }
                          ]
                        },
                        "header": [
                          {
                            "description": {
                              "content": "Added as a part of security scheme: apikey",
                              "type": "text/plain"
                            },
                            "key": "Circle-Token",
                            "value": "<API Key>"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Internal Server Error",
                      "code": 500,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n  \"message\": \"laborum\"\n}",
                      "cookie": [],
                      "_postman_previewlanguage": "json"
                    }
                  ],
                  "event": [],
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  }
                },
                {
                  "id": "fc32da3d-e780-41b1-8d12-4949b02ad0c3",
                  "name": "Cancel job by job number",
                  "request": {
                    "name": "Cancel job by job number",
                    "description": {
                      "content": "Cancel job with a given job number.",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "project",
                        ":project-slug",
                        "job",
                        ":job-number",
                        "cancel"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "",
                          "key": "job-number",
                          "description": "(Required) The number of the job."
                        },
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "project-slug",
                          "description": "(Required) Project slug in the form `vcs-slug/org-name/repo-name`. The `/` characters may be URL-escaped. For projects that use GitLab or GitHub App, use `circleci` as the `vcs-slug`, replace `org-name` with the organization ID (found in Organization Settings), and replace `repo-name` with the project ID (found in Project Settings)."
                        }
                      ]
                    },
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "POST",
                    "auth": null
                  },
                  "response": [
                    {
                      "id": "d5ba5278-01b7-49f8-85b5-c0c347fca0d7",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "project",
                            ":project-slug",
                            "job",
                            ":job-number",
                            "cancel"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "",
                              "key": "job-number",
                              "description": "(Required) The number of the job."
                            },
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "project-slug",
                              "description": "(Required) Project slug in the form `vcs-slug/org-name/repo-name`. The `/` characters may be URL-escaped. For projects that use GitLab or GitHub App, use `circleci` as the `vcs-slug`, replace `org-name` with the organization ID (found in Organization Settings), and replace `repo-name` with the project ID (found in Project Settings)."
                            }
                          ]
                        },
                        "header": [
                          {
                            "description": {
                              "content": "Added as a part of security scheme: apikey",
                              "type": "text/plain"
                            },
                            "key": "Circle-Token",
                            "value": "<API Key>"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "method": "POST",
                        "body": {}
                      },
                      "status": "OK",
                      "code": 200,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n  \"message\": \"pariat\"\n}",
                      "cookie": [],
                      "_postman_previewlanguage": "json"
                    },
                    {
                      "id": "512793e7-1c21-4d2c-8d2d-f97d48569026",
                      "name": "Error response.",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "project",
                            ":project-slug",
                            "job",
                            ":job-number",
                            "cancel"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "",
                              "key": "job-number",
                              "description": "(Required) The number of the job."
                            },
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "project-slug",
                              "description": "(Required) Project slug in the form `vcs-slug/org-name/repo-name`. The `/` characters may be URL-escaped. For projects that use GitLab or GitHub App, use `circleci` as the `vcs-slug`, replace `org-name` with the organization ID (found in Organization Settings), and replace `repo-name` with the project ID (found in Project Settings)."
                            }
                          ]
                        },
                        "header": [
                          {
                            "description": {
                              "content": "Added as a part of security scheme: apikey",
                              "type": "text/plain"
                            },
                            "key": "Circle-Token",
                            "value": "<API Key>"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "method": "POST",
                        "body": {}
                      },
                      "status": "Internal Server Error",
                      "code": 500,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n  \"message\": \"laborum\"\n}",
                      "cookie": [],
                      "_postman_previewlanguage": "json"
                    }
                  ],
                  "event": [],
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  }
                }
              ],
              "event": []
            },
            {
              "id": "1dc8bcc9-fc31-4322-8c4c-77e6f34c75c1",
              "name": "pipeline",
              "item": [
                {
                  "id": "9ac65089-932e-4277-9d88-44ae8b4682f8",
                  "name": "Get all pipelines",
                  "request": {
                    "name": "Get all pipelines",
                    "description": {
                      "content": "Returns all pipelines for this project.",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "project",
                        ":project-slug",
                        "pipeline"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "disabled": false,
                          "key": "branch",
                          "value": "<string>",
                          "description": "The name of a vcs branch."
                        },
                        {
                          "disabled": false,
                          "key": "page-token",
                          "value": "<string>",
                          "description": "A token to retrieve the next page of results."
                        }
                      ],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "project-slug",
                          "description": "(Required) Project slug in the form `vcs-slug/org-name/repo-name`. The `/` characters may be URL-escaped. For projects that use GitLab or GitHub App, use `circleci` as the `vcs-slug`, replace `org-name` with the organization ID (found in Organization Settings), and replace `repo-name` with the project ID (found in Project Settings)."
                        }
                      ]
                    },
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "GET",
                    "auth": null
                  },
                  "response": [
                    {
                      "id": "82f2542e-a5c2-43d7-9cac-a0246268f466",
                      "name": "A sequence of pipelines.",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "project",
                            ":project-slug",
                            "pipeline"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [
                            {
                              "key": "branch",
                              "value": "<string>"
                            },
                            {
                              "key": "page-token",
                              "value": "<string>"
                            }
                          ],
                          "variable": [
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "project-slug",
                              "description": "(Required) Project slug in the form `vcs-slug/org-name/repo-name`. The `/` characters may be URL-escaped. For projects that use GitLab or GitHub App, use `circleci` as the `vcs-slug`, replace `org-name` with the organization ID (found in Organization Settings), and replace `repo-name` with the project ID (found in Project Settings)."
                            }
                          ]
                        },
                        "header": [
                          {
                            "description": {
                              "content": "Added as a part of security scheme: apikey",
                              "type": "text/plain"
                            },
                            "key": "Circle-Token",
                            "value": "<API Key>"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "method": "GET",
                        "body": {}
                      },
                      "status": "OK",
                      "code": 200,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n  \"items\": [\n    {\n      \"id\": \"5034460f-c7c4-4c43-9457-de07e2029e7b\",\n      \"number\": 25,\n      \"project_slug\": \"gh/CircleCI-Public/api-preview-docs\",\n      \"created_at\": \"1947-08-23T14:47:44.163Z\",\n      \"errors\": [\n        {\n          \"type\": \"invalid-trigger-setup\",\n          \"message\": \"cillum ex Lorem adipisicing officia\"\n        },\n        {\n          \"type\": \"other\",\n          \"message\": \"cupidatat dolor laboris sed\"\n        }\n      ],\n      \"state\": \"errored\",\n      \"trigger\": {\n        \"type\": \"explicit\",\n        \"received_at\": \"1963-01-20T00:46:13.335Z\",\n        \"actor\": {\n          \"login\": \"magna sit ea\",\n          \"avatar_url\": \"ea et sit nulla magna\"\n        }\n      },\n      \"updated_at\": \"1995-09-02T23:04:44.316Z\",\n      \"trigger_parameters\": {\n        \"amet_98\": \"amet irure \",\n        \"commodo59\": \"sunt Excepteur exercitation aliqua veniam\",\n        \"ut_3d1\": \"in exercitation quis aliquip\"\n      },\n      \"vcs\": {\n        \"provider_name\": \"GitHub\",\n        \"origin_repository_url\": \"https://github.com/CircleCI-Public/api-preview-docs\",\n        \"target_repository_url\": \"https://github.com/CircleCI-Public/api-preview-docs\",\n        \"revision\": \"f454a02b5d10fcccfd7d9dd7608a76d6493a98b4\",\n        \"branch\": \"feature/design-new-api\",\n        \"review_id\": \"123\",\n        \"review_url\": \"https://github.com/CircleCI-Public/api-preview-docs/pull/123\",\n        \"tag\": \"v3.1.4159\",\n        \"commit\": {\n          \"subject\": \"mollit aliquip labore\",\n          \"body\": \"sint qui laboris\"\n        }\n      }\n    },\n    {\n      \"id\": \"5034460f-c7c4-4c43-9457-de07e2029e7b\",\n      \"number\": 25,\n      \"project_slug\": \"gh/CircleCI-Public/api-preview-docs\",\n      \"created_at\": \"1984-10-02T19:52:15.408Z\",\n      \"errors\": [\n        {\n          \"type\": \"plan\",\n          \"message\": \"qui\"\n        },\n        {\n          \"type\": \"permission\",\n          \"message\": \"est occaecat et\"\n        }\n      ],\n      \"state\": \"pending\",\n      \"trigger\": {\n        \"type\": \"webhook\",\n        \"received_at\": \"1973-01-23T00:31:10.572Z\",\n        \"actor\": {\n          \"login\": \"mollit est\",\n          \"avatar_url\": \"Duis pariatur\"\n        }\n      },\n      \"updated_at\": \"1996-11-13T07:30:29.563Z\",\n      \"trigger_parameters\": {\n        \"aliquip_05\": \"tempor\",\n        \"ut29\": \"dolore\",\n        \"dolore53\": \"proident et eu\",\n        \"sint_da\": \"eiusmod exercitation voluptate commodo esse\"\n      },\n      \"vcs\": {\n        \"provider_name\": \"GitHub\",\n        \"origin_repository_url\": \"https://github.com/CircleCI-Public/api-preview-docs\",\n        \"target_repository_url\": \"https://github.com/CircleCI-Public/api-preview-docs\",\n        \"revision\": \"f454a02b5d10fcccfd7d9dd7608a76d6493a98b4\",\n        \"branch\": \"feature/design-new-api\",\n        \"review_id\": \"123\",\n        \"review_url\": \"https://github.com/CircleCI-Public/api-preview-docs/pull/123\",\n        \"tag\": \"v3.1.4159\",\n        \"commit\": {\n          \"subject\": \"ipsum esse\",\n          \"body\": \"aliqua eu elit\"\n        }\n      }\n    }\n  ],\n  \"next_page_token\": \"consectetur fugiat aute\"\n}",
                      "cookie": [],
                      "_postman_previewlanguage": "json"
                    },
                    {
                      "id": "5956ddfc-f6d8-41ac-a6e9-29078decd249",
                      "name": "Error response.",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "project",
                            ":project-slug",
                            "pipeline"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [
                            {
                              "key": "branch",
                              "value": "<string>"
                            },
                            {
                              "key": "page-token",
                              "value": "<string>"
                            }
                          ],
                          "variable": [
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "project-slug",
                              "description": "(Required) Project slug in the form `vcs-slug/org-name/repo-name`. The `/` characters may be URL-escaped. For projects that use GitLab or GitHub App, use `circleci` as the `vcs-slug`, replace `org-name` with the organization ID (found in Organization Settings), and replace `repo-name` with the project ID (found in Project Settings)."
                            }
                          ]
                        },
                        "header": [
                          {
                            "description": {
                              "content": "Added as a part of security scheme: apikey",
                              "type": "text/plain"
                            },
                            "key": "Circle-Token",
                            "value": "<API Key>"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Internal Server Error",
                      "code": 500,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n  \"message\": \"laborum\"\n}",
                      "cookie": [],
                      "_postman_previewlanguage": "json"
                    }
                  ],
                  "event": [],
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  }
                },
                {
                  "id": "16518b7e-e1b5-4818-99fd-e2b955c97b63",
                  "name": "Trigger a new pipeline",
                  "request": {
                    "name": "Trigger a new pipeline",
                    "description": {
                      "content": "**[This endpoint is superseded by the [new Trigger Pipeline API](#tag/Pipeline/operation/triggerPipelineRun), which supports all organization and pipeline types except GitLab.]** Triggers a new pipeline on the project. Does not support triggering pipelines integrated with GitLab or GitHub App.",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "project",
                        ":project-slug",
                        "pipeline"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "project-slug",
                          "description": "(Required) Project slug in the form `vcs-slug/org-name/repo-name`. The `/` characters may be URL-escaped. For projects that use GitLab or GitHub App, use `circleci` as the `vcs-slug`, replace `org-name` with the organization ID (found in Organization Settings), and replace `repo-name` with the project ID (found in Project Settings)."
                        }
                      ]
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "POST",
                    "auth": null,
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"branch\": \"<string>\",\n  \"tag\": \"<string>\",\n  \"parameters\": {\n    \"commodo_b\": \"<integer>\",\n    \"do4\": \"<integer>\"\n  }\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    }
                  },
                  "response": [
                    {
                      "id": "d966073a-dd7e-4508-b5d6-19da23321c30",
                      "name": "The created pipeline.",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "project",
                            ":project-slug",
                            "pipeline"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "project-slug",
                              "description": "(Required) Project slug in the form `vcs-slug/org-name/repo-name`. The `/` characters may be URL-escaped. For projects that use GitLab or GitHub App, use `circleci` as the `vcs-slug`, replace `org-name` with the organization ID (found in Organization Settings), and replace `repo-name` with the project ID (found in Project Settings)."
                            }
                          ]
                        },
                        "header": [
                          {
                            "description": {
                              "content": "Added as a part of security scheme: apikey",
                              "type": "text/plain"
                            },
                            "key": "Circle-Token",
                            "value": "<API Key>"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "method": "POST",
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"branch\": \"feature/design-new-api\",\n  \"tag\": \"v3.1.4159\",\n  \"parameters\": {\n    \"culpa_2f1\": \"<integer>\",\n    \"ut_62\": \"<integer>\",\n    \"irure7\": \"<integer>\"\n  }\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        }
                      },
                      "status": "Created",
                      "code": 201,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n  \"id\": \"5034460f-c7c4-4c43-9457-de07e2029e7b\",\n  \"state\": \"setup-pending\",\n  \"number\": 25,\n  \"created_at\": \"2010-06-28T22:52:30.027Z\"\n}",
                      "cookie": [],
                      "_postman_previewlanguage": "json"
                    },
                    {
                      "id": "e97f9585-150f-4672-a514-a23b88ff6349",
                      "name": "Error response.",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "project",
                            ":project-slug",
                            "pipeline"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "project-slug",
                              "description": "(Required) Project slug in the form `vcs-slug/org-name/repo-name`. The `/` characters may be URL-escaped. For projects that use GitLab or GitHub App, use `circleci` as the `vcs-slug`, replace `org-name` with the organization ID (found in Organization Settings), and replace `repo-name` with the project ID (found in Project Settings)."
                            }
                          ]
                        },
                        "header": [
                          {
                            "description": {
                              "content": "Added as a part of security scheme: apikey",
                              "type": "text/plain"
                            },
                            "key": "Circle-Token",
                            "value": "<API Key>"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "method": "POST",
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"branch\": \"feature/design-new-api\",\n  \"tag\": \"v3.1.4159\",\n  \"parameters\": {\n    \"culpa_2f1\": \"<integer>\",\n    \"ut_62\": \"<integer>\",\n    \"irure7\": \"<integer>\"\n  }\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        }
                      },
                      "status": "Internal Server Error",
                      "code": 500,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n  \"message\": \"laborum\"\n}",
                      "cookie": [],
                      "_postman_previewlanguage": "json"
                    }
                  ],
                  "event": [],
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  }
                },
                {
                  "id": "29a87e57-a378-4418-a4dc-2e1ea0644962",
                  "name": "Get your pipelines",
                  "request": {
                    "name": "Get your pipelines",
                    "description": {
                      "content": "Returns a sequence of all pipelines for this project triggered by the user.",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "project",
                        ":project-slug",
                        "pipeline",
                        "mine"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "disabled": false,
                          "key": "page-token",
                          "value": "<string>",
                          "description": "A token to retrieve the next page of results."
                        }
                      ],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "project-slug",
                          "description": "(Required) Project slug in the form `vcs-slug/org-name/repo-name`. The `/` characters may be URL-escaped. For projects that use GitLab or GitHub App, use `circleci` as the `vcs-slug`, replace `org-name` with the organization ID (found in Organization Settings), and replace `repo-name` with the project ID (found in Project Settings)."
                        }
                      ]
                    },
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "GET",
                    "auth": null
                  },
                  "response": [
                    {
                      "id": "8e810b23-cab3-4228-945f-cf33393759db",
                      "name": "A sequence of pipelines.",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "project",
                            ":project-slug",
                            "pipeline",
                            "mine"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [
                            {
                              "key": "page-token",
                              "value": "<string>"
                            }
                          ],
                          "variable": [
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "project-slug",
                              "description": "(Required) Project slug in the form `vcs-slug/org-name/repo-name`. The `/` characters may be URL-escaped. For projects that use GitLab or GitHub App, use `circleci` as the `vcs-slug`, replace `org-name` with the organization ID (found in Organization Settings), and replace `repo-name` with the project ID (found in Project Settings)."
                            }
                          ]
                        },
                        "header": [
                          {
                            "description": {
                              "content": "Added as a part of security scheme: apikey",
                              "type": "text/plain"
                            },
                            "key": "Circle-Token",
                            "value": "<API Key>"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "method": "GET",
                        "body": {}
                      },
                      "status": "OK",
                      "code": 200,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n  \"items\": [\n    {\n      \"id\": \"5034460f-c7c4-4c43-9457-de07e2029e7b\",\n      \"number\": 25,\n      \"project_slug\": \"gh/CircleCI-Public/api-preview-docs\",\n      \"created_at\": \"1947-08-23T14:47:44.163Z\",\n      \"errors\": [\n        {\n          \"type\": \"invalid-trigger-setup\",\n          \"message\": \"cillum ex Lorem adipisicing officia\"\n        },\n        {\n          \"type\": \"other\",\n          \"message\": \"cupidatat dolor laboris sed\"\n        }\n      ],\n      \"state\": \"errored\",\n      \"trigger\": {\n        \"type\": \"explicit\",\n        \"received_at\": \"1963-01-20T00:46:13.335Z\",\n        \"actor\": {\n          \"login\": \"magna sit ea\",\n          \"avatar_url\": \"ea et sit nulla magna\"\n        }\n      },\n      \"updated_at\": \"1995-09-02T23:04:44.316Z\",\n      \"trigger_parameters\": {\n        \"amet_98\": \"amet irure \",\n        \"commodo59\": \"sunt Excepteur exercitation aliqua veniam\",\n        \"ut_3d1\": \"in exercitation quis aliquip\"\n      },\n      \"vcs\": {\n        \"provider_name\": \"GitHub\",\n        \"origin_repository_url\": \"https://github.com/CircleCI-Public/api-preview-docs\",\n        \"target_repository_url\": \"https://github.com/CircleCI-Public/api-preview-docs\",\n        \"revision\": \"f454a02b5d10fcccfd7d9dd7608a76d6493a98b4\",\n        \"branch\": \"feature/design-new-api\",\n        \"review_id\": \"123\",\n        \"review_url\": \"https://github.com/CircleCI-Public/api-preview-docs/pull/123\",\n        \"tag\": \"v3.1.4159\",\n        \"commit\": {\n          \"subject\": \"mollit aliquip labore\",\n          \"body\": \"sint qui laboris\"\n        }\n      }\n    },\n    {\n      \"id\": \"5034460f-c7c4-4c43-9457-de07e2029e7b\",\n      \"number\": 25,\n      \"project_slug\": \"gh/CircleCI-Public/api-preview-docs\",\n      \"created_at\": \"1984-10-02T19:52:15.408Z\",\n      \"errors\": [\n        {\n          \"type\": \"plan\",\n          \"message\": \"qui\"\n        },\n        {\n          \"type\": \"permission\",\n          \"message\": \"est occaecat et\"\n        }\n      ],\n      \"state\": \"pending\",\n      \"trigger\": {\n        \"type\": \"webhook\",\n        \"received_at\": \"1973-01-23T00:31:10.572Z\",\n        \"actor\": {\n          \"login\": \"mollit est\",\n          \"avatar_url\": \"Duis pariatur\"\n        }\n      },\n      \"updated_at\": \"1996-11-13T07:30:29.563Z\",\n      \"trigger_parameters\": {\n        \"aliquip_05\": \"tempor\",\n        \"ut29\": \"dolore\",\n        \"dolore53\": \"proident et eu\",\n        \"sint_da\": \"eiusmod exercitation voluptate commodo esse\"\n      },\n      \"vcs\": {\n        \"provider_name\": \"GitHub\",\n        \"origin_repository_url\": \"https://github.com/CircleCI-Public/api-preview-docs\",\n        \"target_repository_url\": \"https://github.com/CircleCI-Public/api-preview-docs\",\n        \"revision\": \"f454a02b5d10fcccfd7d9dd7608a76d6493a98b4\",\n        \"branch\": \"feature/design-new-api\",\n        \"review_id\": \"123\",\n        \"review_url\": \"https://github.com/CircleCI-Public/api-preview-docs/pull/123\",\n        \"tag\": \"v3.1.4159\",\n        \"commit\": {\n          \"subject\": \"ipsum esse\",\n          \"body\": \"aliqua eu elit\"\n        }\n      }\n    }\n  ],\n  \"next_page_token\": \"consectetur fugiat aute\"\n}",
                      "cookie": [],
                      "_postman_previewlanguage": "json"
                    },
                    {
                      "id": "e2742de1-c9fa-4e58-a6be-9951acb9be6e",
                      "name": "Error response.",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "project",
                            ":project-slug",
                            "pipeline",
                            "mine"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [
                            {
                              "key": "page-token",
                              "value": "<string>"
                            }
                          ],
                          "variable": [
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "project-slug",
                              "description": "(Required) Project slug in the form `vcs-slug/org-name/repo-name`. The `/` characters may be URL-escaped. For projects that use GitLab or GitHub App, use `circleci` as the `vcs-slug`, replace `org-name` with the organization ID (found in Organization Settings), and replace `repo-name` with the project ID (found in Project Settings)."
                            }
                          ]
                        },
                        "header": [
                          {
                            "description": {
                              "content": "Added as a part of security scheme: apikey",
                              "type": "text/plain"
                            },
                            "key": "Circle-Token",
                            "value": "<API Key>"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Internal Server Error",
                      "code": 500,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n  \"message\": \"laborum\"\n}",
                      "cookie": [],
                      "_postman_previewlanguage": "json"
                    }
                  ],
                  "event": [],
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  }
                },
                {
                  "id": "66bba09f-96ad-4c5a-b197-441ba968fc6c",
                  "name": "Get a pipeline by pipeline number",
                  "request": {
                    "name": "Get a pipeline by pipeline number",
                    "description": {
                      "content": "Returns a pipeline by the pipeline number.",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "project",
                        ":project-slug",
                        "pipeline",
                        ":pipeline-number"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "project-slug",
                          "description": "(Required) Project slug in the form `vcs-slug/org-name/repo-name`. The `/` characters may be URL-escaped. For projects that use GitLab or GitHub App, use `circleci` as the `vcs-slug`, replace `org-name` with the organization ID (found in Organization Settings), and replace `repo-name` with the project ID (found in Project Settings)."
                        },
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "",
                          "key": "pipeline-number",
                          "description": "(Required) The number of the pipeline."
                        }
                      ]
                    },
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "GET",
                    "auth": null
                  },
                  "response": [
                    {
                      "id": "b0c8e1d0-d281-44df-b6ae-ed45fa8d9c02",
                      "name": "A pipeline object.",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "project",
                            ":project-slug",
                            "pipeline",
                            ":pipeline-number"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "project-slug",
                              "description": "(Required) Project slug in the form `vcs-slug/org-name/repo-name`. The `/` characters may be URL-escaped. For projects that use GitLab or GitHub App, use `circleci` as the `vcs-slug`, replace `org-name` with the organization ID (found in Organization Settings), and replace `repo-name` with the project ID (found in Project Settings)."
                            },
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "",
                              "key": "pipeline-number",
                              "description": "(Required) The number of the pipeline."
                            }
                          ]
                        },
                        "header": [
                          {
                            "description": {
                              "content": "Added as a part of security scheme: apikey",
                              "type": "text/plain"
                            },
                            "key": "Circle-Token",
                            "value": "<API Key>"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "method": "GET",
                        "body": {}
                      },
                      "status": "OK",
                      "code": 200,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n  \"id\": \"5034460f-c7c4-4c43-9457-de07e2029e7b\",\n  \"number\": 25,\n  \"project_slug\": \"gh/CircleCI-Public/api-preview-docs\",\n  \"created_at\": \"1986-03-13T09:45:17.939Z\",\n  \"errors\": [\n    {\n      \"type\": \"invalid-trigger-setup\",\n      \"message\": \"sunt Ut laboris ut labore\"\n    },\n    {\n      \"type\": \"trigger-rule\",\n      \"message\": \"incididunt occaecat deserunt ut in\"\n    }\n  ],\n  \"state\": \"setup-pending\",\n  \"trigger\": {\n    \"type\": \"webhook\",\n    \"received_at\": \"1971-01-14T09:55:28.436Z\",\n    \"actor\": {\n      \"login\": \"mollit proident consectetur\",\n      \"avatar_url\": \"occaecat ut laborum\"\n    }\n  },\n  \"updated_at\": \"2013-02-03T17:33:04.786Z\",\n  \"trigger_parameters\": {\n    \"cillumf2\": \"Duis\"\n  },\n  \"vcs\": {\n    \"provider_name\": \"GitHub\",\n    \"origin_repository_url\": \"https://github.com/CircleCI-Public/api-preview-docs\",\n    \"target_repository_url\": \"https://github.com/CircleCI-Public/api-preview-docs\",\n    \"revision\": \"f454a02b5d10fcccfd7d9dd7608a76d6493a98b4\",\n    \"branch\": \"feature/design-new-api\",\n    \"review_id\": \"123\",\n    \"review_url\": \"https://github.com/CircleCI-Public/api-preview-docs/pull/123\",\n    \"tag\": \"v3.1.4159\",\n    \"commit\": {\n      \"subject\": \"officia\",\n      \"body\": \"id consequat\"\n    }\n  }\n}",
                      "cookie": [],
                      "_postman_previewlanguage": "json"
                    },
                    {
                      "id": "8070879e-3c14-4778-9c64-459fff07fb5e",
                      "name": "Error response.",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "project",
                            ":project-slug",
                            "pipeline",
                            ":pipeline-number"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "project-slug",
                              "description": "(Required) Project slug in the form `vcs-slug/org-name/repo-name`. The `/` characters may be URL-escaped. For projects that use GitLab or GitHub App, use `circleci` as the `vcs-slug`, replace `org-name` with the organization ID (found in Organization Settings), and replace `repo-name` with the project ID (found in Project Settings)."
                            },
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "",
                              "key": "pipeline-number",
                              "description": "(Required) The number of the pipeline."
                            }
                          ]
                        },
                        "header": [
                          {
                            "description": {
                              "content": "Added as a part of security scheme: apikey",
                              "type": "text/plain"
                            },
                            "key": "Circle-Token",
                            "value": "<API Key>"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Internal Server Error",
                      "code": 500,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n  \"message\": \"laborum\"\n}",
                      "cookie": [],
                      "_postman_previewlanguage": "json"
                    }
                  ],
                  "event": [],
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  }
                }
              ],
              "event": []
            },
            {
              "id": "2f3d72ae-8cf3-4bfc-98f9-70a0cca74f17",
              "name": "schedule",
              "item": [
                {
                  "id": "17a64e0e-e217-479a-be1c-4232b853a332",
                  "name": "Create a schedule",
                  "request": {
                    "name": "Create a schedule",
                    "description": {
                      "content": "Not yet available to projects that use GitLab or GitHub App. Creates a schedule and returns the created schedule.",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "project",
                        ":project-slug",
                        "schedule"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "project-slug",
                          "description": "(Required) Project slug in the form `vcs-slug/org-name/repo-name`. The `/` characters may be URL-escaped. For projects that use GitLab or GitHub App, use `circleci` as the `vcs-slug`, replace `org-name` with the organization ID (found in Organization Settings), and replace `repo-name` with the project ID (found in Project Settings)."
                        }
                      ]
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "POST",
                    "auth": null,
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"name\": \"<string>\",\n  \"timetable\": {\n    \"per-hour\": \"<integer>\",\n    \"hours-of-day\": [\n      \"<integer>\",\n      \"<integer>\"\n    ],\n    \"days-of-week\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"days-of-month\": [\n      \"<integer>\",\n      \"<integer>\"\n    ],\n    \"months\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"attribution-actor\": \"<string>\",\n  \"parameters\": {\n    \"dolor7\": \"<integer>\",\n    \"aliqua_c\": \"<integer>\"\n  },\n  \"description\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    }
                  },
                  "response": [
                    {
                      "id": "5219724a-8cfc-4bdf-bb18-08e2874698eb",
                      "name": "A schedule object.",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "project",
                            ":project-slug",
                            "schedule"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "project-slug",
                              "description": "(Required) Project slug in the form `vcs-slug/org-name/repo-name`. The `/` characters may be URL-escaped. For projects that use GitLab or GitHub App, use `circleci` as the `vcs-slug`, replace `org-name` with the organization ID (found in Organization Settings), and replace `repo-name` with the project ID (found in Project Settings)."
                            }
                          ]
                        },
                        "header": [
                          {
                            "description": {
                              "content": "Added as a part of security scheme: apikey",
                              "type": "text/plain"
                            },
                            "key": "Circle-Token",
                            "value": "<API Key>"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "method": "POST",
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"name\": \"<string>\",\n  \"timetable\": {\n    \"per-hour\": \"<integer>\",\n    \"hours-of-day\": [\n      \"<integer>\",\n      \"<integer>\"\n    ],\n    \"days-of-week\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"days-of-month\": [\n      \"<integer>\",\n      \"<integer>\"\n    ],\n    \"months\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"attribution-actor\": \"current\",\n  \"parameters\": {\n    \"magna_98\": \"<integer>\"\n  },\n  \"description\": \"<string>\"\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        }
                      },
                      "status": "Created",
                      "code": 201,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n  \"id\": \"urn:uuid:1d04628e-0549-e405-337c-57fa1b1ad168\",\n  \"name\": \"nostrud officia aliqua\",\n  \"timetable\": {\n    \"per-hour\": 52489918,\n    \"hours-of-day\": [\n      51541250,\n      -73859999\n    ],\n    \"days-of-week\": [\n      \"TUE\",\n      \"SAT\"\n    ],\n    \"days-of-month\": [\n      -79108026,\n      13134983\n    ],\n    \"months\": [\n      \"SEP\",\n      \"AUG\"\n    ]\n  },\n  \"description\": \"in qui minim elit\",\n  \"project-slug\": \"gh/CircleCI-Public/api-preview-docs\",\n  \"actor\": {\n    \"id\": \"urn:uuid:9cc7c8a9-6c50-4214-05e6-b73d0a4cee2b\",\n    \"login\": \"ad\",\n    \"name\": \"nisi veniam incididunt\"\n  },\n  \"created-at\": \"1970-04-07T03:09:23.515Z\",\n  \"updated-at\": \"1987-06-01T14:08:29.742Z\",\n  \"parameters\": {\n    \"minim__c\": -21048291,\n    \"nulla_56\": 10112419\n  }\n}",
                      "cookie": [],
                      "_postman_previewlanguage": "json"
                    },
                    {
                      "id": "14ee5764-73aa-4615-9d8d-b707e8d06ddf",
                      "name": "Error response.",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "project",
                            ":project-slug",
                            "schedule"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "project-slug",
                              "description": "(Required) Project slug in the form `vcs-slug/org-name/repo-name`. The `/` characters may be URL-escaped. For projects that use GitLab or GitHub App, use `circleci` as the `vcs-slug`, replace `org-name` with the organization ID (found in Organization Settings), and replace `repo-name` with the project ID (found in Project Settings)."
                            }
                          ]
                        },
                        "header": [
                          {
                            "description": {
                              "content": "Added as a part of security scheme: apikey",
                              "type": "text/plain"
                            },
                            "key": "Circle-Token",
                            "value": "<API Key>"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "method": "POST",
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"name\": \"<string>\",\n  \"timetable\": {\n    \"per-hour\": \"<integer>\",\n    \"hours-of-day\": [\n      \"<integer>\",\n      \"<integer>\"\n    ],\n    \"days-of-week\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"days-of-month\": [\n      \"<integer>\",\n      \"<integer>\"\n    ],\n    \"months\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"attribution-actor\": \"current\",\n  \"parameters\": {\n    \"magna_98\": \"<integer>\"\n  },\n  \"description\": \"<string>\"\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        }
                      },
                      "status": "Internal Server Error",
                      "code": 500,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n  \"message\": \"laborum\"\n}",
                      "cookie": [],
                      "_postman_previewlanguage": "json"
                    }
                  ],
                  "event": [],
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  }
                },
                {
                  "id": "e0beb50e-c149-4f42-9715-67253770a04c",
                  "name": "Get all schedules",
                  "request": {
                    "name": "Get all schedules",
                    "description": {
                      "content": "Returns all schedules for this project.",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "project",
                        ":project-slug",
                        "schedule"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "disabled": false,
                          "key": "page-token",
                          "value": "<string>",
                          "description": "A token to retrieve the next page of results."
                        }
                      ],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "project-slug",
                          "description": "(Required) Project slug in the form `vcs-slug/org-name/repo-name`. The `/` characters may be URL-escaped. For projects that use GitLab or GitHub App, use `circleci` as the `vcs-slug`, replace `org-name` with the organization ID (found in Organization Settings), and replace `repo-name` with the project ID (found in Project Settings)."
                        }
                      ]
                    },
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "GET",
                    "auth": null
                  },
                  "response": [
                    {
                      "id": "cae43ff8-c7ec-4196-abe3-f69fe491fb78",
                      "name": "A sequence of schedules.",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "project",
                            ":project-slug",
                            "schedule"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [
                            {
                              "key": "page-token",
                              "value": "<string>"
                            }
                          ],
                          "variable": [
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "project-slug",
                              "description": "(Required) Project slug in the form `vcs-slug/org-name/repo-name`. The `/` characters may be URL-escaped. For projects that use GitLab or GitHub App, use `circleci` as the `vcs-slug`, replace `org-name` with the organization ID (found in Organization Settings), and replace `repo-name` with the project ID (found in Project Settings)."
                            }
                          ]
                        },
                        "header": [
                          {
                            "description": {
                              "content": "Added as a part of security scheme: apikey",
                              "type": "text/plain"
                            },
                            "key": "Circle-Token",
                            "value": "<API Key>"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "method": "GET",
                        "body": {}
                      },
                      "status": "OK",
                      "code": 200,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n  \"items\": [\n    {\n      \"id\": \"733d397e-4212-7d0b-38ea-c56d3a8a3e44\",\n      \"name\": \"elit Lorem\",\n      \"timetable\": {\n        \"per-hour\": 10515128,\n        \"hours-of-day\": [\n          -60526860,\n          96772122\n        ],\n        \"days-of-week\": [\n          \"SAT\",\n          \"MON\"\n        ],\n        \"days-of-month\": [\n          33018883,\n          -31169523\n        ],\n        \"months\": [\n          \"SEP\",\n          \"NOV\"\n        ]\n      },\n      \"description\": \"eu in veniam\",\n      \"project-slug\": \"gh/CircleCI-Public/api-preview-docs\",\n      \"actor\": {\n        \"id\": \"urn:uuid:49c4fb7d-5d43-aebe-f984-0aea8274206e\",\n        \"login\": \"sint est velit dolor dolore\",\n        \"name\": \"ea velit incididunt Lorem\"\n      },\n      \"created-at\": \"1976-09-28T01:12:41.777Z\",\n      \"updated-at\": \"2011-02-05T15:49:17.794Z\",\n      \"parameters\": {\n        \"occaecate\": 438134,\n        \"sint_\": 99418997\n      }\n    },\n    {\n      \"id\": \"urn:uuid:9fad83f9-858f-5d22-a769-ccf26241b4a7\",\n      \"name\": \"esse tempor\",\n      \"timetable\": {\n        \"per-hour\": -93432136,\n        \"hours-of-day\": [\n          36879840,\n          7168936\n        ],\n        \"days-of-week\": [\n          \"SUN\",\n          \"TUE\"\n        ],\n        \"days-of-month\": [\n          89721652,\n          4124472\n        ],\n        \"months\": [\n          \"SEP\",\n          \"SEP\"\n        ]\n      },\n      \"description\": \"et ut\",\n      \"project-slug\": \"gh/CircleCI-Public/api-preview-docs\",\n      \"actor\": {\n        \"id\": \"87102812-9c9a-1d84-227e-cb49aa460b37\",\n        \"login\": \"mollit adipisicing nisi\",\n        \"name\": \"exercitation dolore ea\"\n      },\n      \"created-at\": \"2020-05-05T13:48:14.412Z\",\n      \"updated-at\": \"2005-08-01T22:21:27.281Z\",\n      \"parameters\": {\n        \"pariatur_68_\": 98190314,\n        \"aliquac\": 9436290\n      }\n    }\n  ],\n  \"next_page_token\": \"enim adipisicing cupidatat est\"\n}",
                      "cookie": [],
                      "_postman_previewlanguage": "json"
                    },
                    {
                      "id": "fc8acb19-5631-4cfc-84e8-56f54f46a145",
                      "name": "Error response.",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "project",
                            ":project-slug",
                            "schedule"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [
                            {
                              "key": "page-token",
                              "value": "<string>"
                            }
                          ],
                          "variable": [
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "project-slug",
                              "description": "(Required) Project slug in the form `vcs-slug/org-name/repo-name`. The `/` characters may be URL-escaped. For projects that use GitLab or GitHub App, use `circleci` as the `vcs-slug`, replace `org-name` with the organization ID (found in Organization Settings), and replace `repo-name` with the project ID (found in Project Settings)."
                            }
                          ]
                        },
                        "header": [
                          {
                            "description": {
                              "content": "Added as a part of security scheme: apikey",
                              "type": "text/plain"
                            },
                            "key": "Circle-Token",
                            "value": "<API Key>"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Internal Server Error",
                      "code": 500,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n  \"message\": \"laborum\"\n}",
                      "cookie": [],
                      "_postman_previewlanguage": "json"
                    }
                  ],
                  "event": [],
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  }
                }
              ],
              "event": []
            },
            {
              "id": "e9ad5451-cfc0-4ecf-ad48-31e0e5233a03",
              "name": "{job-number}",
              "item": [
                {
                  "id": "a4de4f6a-f6d3-4818-9284-32499b5f1c60",
                  "name": "Get a job's artifacts",
                  "request": {
                    "name": "Get a job's artifacts",
                    "description": {
                      "content": "Returns a job's artifacts.",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "project",
                        ":project-slug",
                        ":job-number",
                        "artifacts"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "",
                          "key": "job-number",
                          "description": "(Required) The number of the job."
                        },
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "project-slug",
                          "description": "(Required) Project slug in the form `vcs-slug/org-name/repo-name`. The `/` characters may be URL-escaped. For projects that use GitLab or GitHub App, use `circleci` as the `vcs-slug`, replace `org-name` with the organization ID (found in Organization Settings), and replace `repo-name` with the project ID (found in Project Settings)."
                        }
                      ]
                    },
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "GET",
                    "auth": null
                  },
                  "response": [
                    {
                      "id": "8aa88ca1-d405-45a8-bb9c-c2c2f2309c73",
                      "name": "A paginated list of the job's artifacts.",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "project",
                            ":project-slug",
                            ":job-number",
                            "artifacts"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "",
                              "key": "job-number",
                              "description": "(Required) The number of the job."
                            },
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "project-slug",
                              "description": "(Required) Project slug in the form `vcs-slug/org-name/repo-name`. The `/` characters may be URL-escaped. For projects that use GitLab or GitHub App, use `circleci` as the `vcs-slug`, replace `org-name` with the organization ID (found in Organization Settings), and replace `repo-name` with the project ID (found in Project Settings)."
                            }
                          ]
                        },
                        "header": [
                          {
                            "description": {
                              "content": "Added as a part of security scheme: apikey",
                              "type": "text/plain"
                            },
                            "key": "Circle-Token",
                            "value": "<API Key>"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "method": "GET",
                        "body": {}
                      },
                      "status": "OK",
                      "code": 200,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n  \"items\": [\n    {\n      \"path\": \"officia eu sed minim\",\n      \"node_index\": 89234741,\n      \"url\": \"proident\"\n    },\n    {\n      \"path\": \"Lorem\",\n      \"node_index\": 93019771,\n      \"url\": \"velit dolore Excepteur\"\n    }\n  ],\n  \"next_page_token\": \"e\"\n}",
                      "cookie": [],
                      "_postman_previewlanguage": "json"
                    },
                    {
                      "id": "aaf0f448-8558-48d5-8fc1-3ee961b28bef",
                      "name": "Error response.",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "project",
                            ":project-slug",
                            ":job-number",
                            "artifacts"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "",
                              "key": "job-number",
                              "description": "(Required) The number of the job."
                            },
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "project-slug",
                              "description": "(Required) Project slug in the form `vcs-slug/org-name/repo-name`. The `/` characters may be URL-escaped. For projects that use GitLab or GitHub App, use `circleci` as the `vcs-slug`, replace `org-name` with the organization ID (found in Organization Settings), and replace `repo-name` with the project ID (found in Project Settings)."
                            }
                          ]
                        },
                        "header": [
                          {
                            "description": {
                              "content": "Added as a part of security scheme: apikey",
                              "type": "text/plain"
                            },
                            "key": "Circle-Token",
                            "value": "<API Key>"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Internal Server Error",
                      "code": 500,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n  \"message\": \"laborum\"\n}",
                      "cookie": [],
                      "_postman_previewlanguage": "json"
                    }
                  ],
                  "event": [],
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  }
                },
                {
                  "id": "866a16f7-7a9e-4af8-954c-5ff674f9d5e7",
                  "name": "Get test metadata",
                  "request": {
                    "name": "Get test metadata",
                    "description": {
                      "content": "Get test metadata for a build. In the rare case where there is more than 250MB of test data on the job, no results will be returned.",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "project",
                        ":project-slug",
                        ":job-number",
                        "tests"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "",
                          "key": "job-number",
                          "description": "(Required) The number of the job."
                        },
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "project-slug",
                          "description": "(Required) Project slug in the form `vcs-slug/org-name/repo-name`. The `/` characters may be URL-escaped. For projects that use GitLab or GitHub App, use `circleci` as the `vcs-slug`, replace `org-name` with the organization ID (found in Organization Settings), and replace `repo-name` with the project ID (found in Project Settings)."
                        }
                      ]
                    },
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "GET",
                    "auth": null
                  },
                  "response": [
                    {
                      "id": "62a54298-4a1e-4819-b224-c0a1c4a77508",
                      "name": "A paginated list of test results.",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "project",
                            ":project-slug",
                            ":job-number",
                            "tests"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "",
                              "key": "job-number",
                              "description": "(Required) The number of the job."
                            },
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "project-slug",
                              "description": "(Required) Project slug in the form `vcs-slug/org-name/repo-name`. The `/` characters may be URL-escaped. For projects that use GitLab or GitHub App, use `circleci` as the `vcs-slug`, replace `org-name` with the organization ID (found in Organization Settings), and replace `repo-name` with the project ID (found in Project Settings)."
                            }
                          ]
                        },
                        "header": [
                          {
                            "description": {
                              "content": "Added as a part of security scheme: apikey",
                              "type": "text/plain"
                            },
                            "key": "Circle-Token",
                            "value": "<API Key>"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "method": "GET",
                        "body": {}
                      },
                      "status": "OK",
                      "code": 200,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n  \"items\": [\n    {\n      \"message\": \"\",\n      \"source\": \"\",\n      \"run_time\": 76082595.83986029,\n      \"file\": \"\",\n      \"result\": \"\",\n      \"name\": \"\",\n      \"classname\": \"\"\n    },\n    {\n      \"message\": \"\",\n      \"source\": \"\",\n      \"run_time\": 95634050.67597497,\n      \"file\": \"\",\n      \"result\": \"\",\n      \"name\": \"\",\n      \"classname\": \"\"\n    }\n  ],\n  \"next_page_token\": \"in in Ut\"\n}",
                      "cookie": [],
                      "_postman_previewlanguage": "json"
                    },
                    {
                      "id": "be093ead-f79e-40bd-a08b-062651fad661",
                      "name": "Error response.",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "project",
                            ":project-slug",
                            ":job-number",
                            "tests"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "",
                              "key": "job-number",
                              "description": "(Required) The number of the job."
                            },
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "project-slug",
                              "description": "(Required) Project slug in the form `vcs-slug/org-name/repo-name`. The `/` characters may be URL-escaped. For projects that use GitLab or GitHub App, use `circleci` as the `vcs-slug`, replace `org-name` with the organization ID (found in Organization Settings), and replace `repo-name` with the project ID (found in Project Settings)."
                            }
                          ]
                        },
                        "header": [
                          {
                            "description": {
                              "content": "Added as a part of security scheme: apikey",
                              "type": "text/plain"
                            },
                            "key": "Circle-Token",
                            "value": "<API Key>"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Internal Server Error",
                      "code": 500,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n  \"message\": \"laborum\"\n}",
                      "cookie": [],
                      "_postman_previewlanguage": "json"
                    }
                  ],
                  "event": [],
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  }
                }
              ],
              "event": []
            }
          ],
          "event": []
        },
        {
          "id": "58191192-1d72-42c3-99b6-79634b8b8838",
          "name": "{provider}/{organization}/{project}",
          "item": [
            {
              "id": "619f27d0-0769-4ea0-a3e9-a694a51b5fa2",
              "name": "⚠️ Create a project",
              "request": {
                "name": "⚠️ Create a project",
                "description": {
                  "content": "__[DEPRECATED] This endpoint is replaced by [organization/{org-slug-or-id}/project](https://circleci.com/docs/api/v2/index.html#tag/Project/operation/createProject) and documentation will be removed on August 1st, 2025.__ Creates a new CircleCI project, and returns a list of the default advanced settings. Can only be called on a repo with a main branch and an existing config.yml file. Not yet available to projects that use GitLab or GitHub App.",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "project",
                    ":provider",
                    ":organization",
                    ":project"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "provider",
                      "description": "(Required) The first segment of the slash-separated project slug, as shown in Project Settings > Overview."
                    },
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "organization",
                      "description": "(Required) The second segment of the slash-separated project slug, as shown in Project Settings > Overview. Depending on the organization type, this may be the org name (e.g. `my-org`) or an ID (e.g. `43G3lM5RtfFE7v5sa4nWAU`)."
                    },
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "project",
                      "description": "(Required) The third segment of the slash-separated project slug, as shown in Project Settings > Overview. Depending on the organization type, this may be the project name (e.g. `my-project`) or an ID (e.g. `44n9wujWcTnVZ2b5S8Fnat`)."
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "auth": null
              },
              "response": [
                {
                  "id": "7da2388b-d6e7-4879-9a7d-bfefc85f2bdd",
                  "name": "Successful response.",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "project",
                        ":provider",
                        ":organization",
                        ":project"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "provider",
                          "description": "(Required) The first segment of the slash-separated project slug, as shown in Project Settings > Overview."
                        },
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "organization",
                          "description": "(Required) The second segment of the slash-separated project slug, as shown in Project Settings > Overview. Depending on the organization type, this may be the org name (e.g. `my-org`) or an ID (e.g. `43G3lM5RtfFE7v5sa4nWAU`)."
                        },
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "project",
                          "description": "(Required) The third segment of the slash-separated project slug, as shown in Project Settings > Overview. Depending on the organization type, this may be the project name (e.g. `my-project`) or an ID (e.g. `44n9wujWcTnVZ2b5S8Fnat`)."
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "Added as a part of security scheme: apikey",
                          "type": "text/plain"
                        },
                        "key": "Circle-Token",
                        "value": "<API Key>"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "POST",
                    "body": {}
                  },
                  "status": "Created",
                  "code": 201,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n  \"advanced\": {\n    \"autocancel_builds\": true,\n    \"build_fork_prs\": false,\n    \"build_prs_only\": false,\n    \"disable_ssh\": true,\n    \"forks_receive_secret_env_vars\": false,\n    \"oss\": true,\n    \"set_github_status\": false,\n    \"setup_workflows\": true,\n    \"write_settings_requires_admin\": true,\n    \"pr_only_branch_overrides\": [\n      \"est quis\",\n      \"irure Duis\"\n    ]\n  }\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json"
                },
                {
                  "id": "fbc85552-a683-46e2-8ac5-2f721383698f",
                  "name": "Unexpected request body provided.",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "project",
                        ":provider",
                        ":organization",
                        ":project"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "provider",
                          "description": "(Required) The first segment of the slash-separated project slug, as shown in Project Settings > Overview."
                        },
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "organization",
                          "description": "(Required) The second segment of the slash-separated project slug, as shown in Project Settings > Overview. Depending on the organization type, this may be the org name (e.g. `my-org`) or an ID (e.g. `43G3lM5RtfFE7v5sa4nWAU`)."
                        },
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "project",
                          "description": "(Required) The third segment of the slash-separated project slug, as shown in Project Settings > Overview. Depending on the organization type, this may be the project name (e.g. `my-project`) or an ID (e.g. `44n9wujWcTnVZ2b5S8Fnat`)."
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "Added as a part of security scheme: apikey",
                          "type": "text/plain"
                        },
                        "key": "Circle-Token",
                        "value": "<API Key>"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "POST",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n  \"message\": \"Unexpected request body provided.\"\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json"
                },
                {
                  "id": "f6b7b55b-f77e-4e3f-b32b-77d0771b670e",
                  "name": "Credentials provided are invalid.",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "project",
                        ":provider",
                        ":organization",
                        ":project"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "provider",
                          "description": "(Required) The first segment of the slash-separated project slug, as shown in Project Settings > Overview."
                        },
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "organization",
                          "description": "(Required) The second segment of the slash-separated project slug, as shown in Project Settings > Overview. Depending on the organization type, this may be the org name (e.g. `my-org`) or an ID (e.g. `43G3lM5RtfFE7v5sa4nWAU`)."
                        },
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "project",
                          "description": "(Required) The third segment of the slash-separated project slug, as shown in Project Settings > Overview. Depending on the organization type, this may be the project name (e.g. `my-project`) or an ID (e.g. `44n9wujWcTnVZ2b5S8Fnat`)."
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "Added as a part of security scheme: apikey",
                          "type": "text/plain"
                        },
                        "key": "Circle-Token",
                        "value": "<API Key>"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "POST",
                    "body": {}
                  },
                  "status": "Unauthorized",
                  "code": 401,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n  \"message\": \"Invalid token provided.\"\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json"
                },
                {
                  "id": "bf320709-0440-4ebd-a656-35b89bed9d07",
                  "name": "None or insufficient credentials provided.",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "project",
                        ":provider",
                        ":organization",
                        ":project"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "provider",
                          "description": "(Required) The first segment of the slash-separated project slug, as shown in Project Settings > Overview."
                        },
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "organization",
                          "description": "(Required) The second segment of the slash-separated project slug, as shown in Project Settings > Overview. Depending on the organization type, this may be the org name (e.g. `my-org`) or an ID (e.g. `43G3lM5RtfFE7v5sa4nWAU`)."
                        },
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "project",
                          "description": "(Required) The third segment of the slash-separated project slug, as shown in Project Settings > Overview. Depending on the organization type, this may be the project name (e.g. `my-project`) or an ID (e.g. `44n9wujWcTnVZ2b5S8Fnat`)."
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "Added as a part of security scheme: apikey",
                          "type": "text/plain"
                        },
                        "key": "Circle-Token",
                        "value": "<API Key>"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "POST",
                    "body": {}
                  },
                  "status": "Forbidden",
                  "code": 403,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n  \"message\": \"Permission denied.\"\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json"
                },
                {
                  "id": "75d53f0a-b9df-4105-b250-f462b6130632",
                  "name": "Either a branch or a project were not found.",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "project",
                        ":provider",
                        ":organization",
                        ":project"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "provider",
                          "description": "(Required) The first segment of the slash-separated project slug, as shown in Project Settings > Overview."
                        },
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "organization",
                          "description": "(Required) The second segment of the slash-separated project slug, as shown in Project Settings > Overview. Depending on the organization type, this may be the org name (e.g. `my-org`) or an ID (e.g. `43G3lM5RtfFE7v5sa4nWAU`)."
                        },
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "project",
                          "description": "(Required) The third segment of the slash-separated project slug, as shown in Project Settings > Overview. Depending on the organization type, this may be the project name (e.g. `my-project`) or an ID (e.g. `44n9wujWcTnVZ2b5S8Fnat`)."
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "Added as a part of security scheme: apikey",
                          "type": "text/plain"
                        },
                        "key": "Circle-Token",
                        "value": "<API Key>"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "POST",
                    "body": {}
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n  \"message\": \"Branch not found.\"\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json"
                },
                {
                  "id": "c6bb7b29-f744-4274-9b8a-1367d5493ddd",
                  "name": "Create projects using the API is currently supported for classic Github OAuth and Bitbucket projects only.",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "project",
                        ":provider",
                        ":organization",
                        ":project"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "provider",
                          "description": "(Required) The first segment of the slash-separated project slug, as shown in Project Settings > Overview."
                        },
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "organization",
                          "description": "(Required) The second segment of the slash-separated project slug, as shown in Project Settings > Overview. Depending on the organization type, this may be the org name (e.g. `my-org`) or an ID (e.g. `43G3lM5RtfFE7v5sa4nWAU`)."
                        },
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "project",
                          "description": "(Required) The third segment of the slash-separated project slug, as shown in Project Settings > Overview. Depending on the organization type, this may be the project name (e.g. `my-project`) or an ID (e.g. `44n9wujWcTnVZ2b5S8Fnat`)."
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "Added as a part of security scheme: apikey",
                          "type": "text/plain"
                        },
                        "key": "Circle-Token",
                        "value": "<API Key>"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "POST",
                    "body": {}
                  },
                  "status": "Method Not Allowed",
                  "code": 405,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n  \"message\": \"Create projects using the API is currently supported for classic Github OAuth and Bitbucket projects only.\"\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json"
                },
                {
                  "id": "c77d448c-54e4-49f5-a0c9-87f8bbcc5d74",
                  "name": "API rate limits exceeded.",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "project",
                        ":provider",
                        ":organization",
                        ":project"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "provider",
                          "description": "(Required) The first segment of the slash-separated project slug, as shown in Project Settings > Overview."
                        },
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "organization",
                          "description": "(Required) The second segment of the slash-separated project slug, as shown in Project Settings > Overview. Depending on the organization type, this may be the org name (e.g. `my-org`) or an ID (e.g. `43G3lM5RtfFE7v5sa4nWAU`)."
                        },
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "project",
                          "description": "(Required) The third segment of the slash-separated project slug, as shown in Project Settings > Overview. Depending on the organization type, this may be the project name (e.g. `my-project`) or an ID (e.g. `44n9wujWcTnVZ2b5S8Fnat`)."
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "Added as a part of security scheme: apikey",
                          "type": "text/plain"
                        },
                        "key": "Circle-Token",
                        "value": "<API Key>"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "POST",
                    "body": {}
                  },
                  "status": "Too Many Requests",
                  "code": 429,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n  \"message\": \"Rate limit exceeded.\"\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json"
                },
                {
                  "id": "15d35a69-0a35-48e6-8af1-0140293c3917",
                  "name": "Internal server error.",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "project",
                        ":provider",
                        ":organization",
                        ":project"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "provider",
                          "description": "(Required) The first segment of the slash-separated project slug, as shown in Project Settings > Overview."
                        },
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "organization",
                          "description": "(Required) The second segment of the slash-separated project slug, as shown in Project Settings > Overview. Depending on the organization type, this may be the org name (e.g. `my-org`) or an ID (e.g. `43G3lM5RtfFE7v5sa4nWAU`)."
                        },
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "project",
                          "description": "(Required) The third segment of the slash-separated project slug, as shown in Project Settings > Overview. Depending on the organization type, this may be the project name (e.g. `my-project`) or an ID (e.g. `44n9wujWcTnVZ2b5S8Fnat`)."
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "Added as a part of security scheme: apikey",
                          "type": "text/plain"
                        },
                        "key": "Circle-Token",
                        "value": "<API Key>"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "POST",
                    "body": {}
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n  \"message\": \"Internal server error.\"\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json"
                }
              ],
              "event": [],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              }
            },
            {
              "id": "02a23f53-4d86-4826-acfa-b6c8f7a3be33",
              "name": "settings",
              "item": [
                {
                  "id": "2d345678-359e-4280-bf3e-737ff8d7fa6c",
                  "name": "🧪 Get project settings",
                  "request": {
                    "name": "🧪 Get project settings",
                    "description": {
                      "content": "[__EXPERIMENTAL__] Returns a list of the advanced settings for a CircleCI project, whether enabled (true) or not (false).",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "project",
                        ":provider",
                        ":organization",
                        ":project",
                        "settings"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "provider",
                          "description": "(Required) The first segment of the slash-separated project slug, as shown in Project Settings > Overview."
                        },
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "organization",
                          "description": "(Required) The second segment of the slash-separated project slug, as shown in Project Settings > Overview. Depending on the organization type, this may be the org name (e.g. `my-org`) or an ID (e.g. `43G3lM5RtfFE7v5sa4nWAU`)."
                        },
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "project",
                          "description": "(Required) The third segment of the slash-separated project slug, as shown in Project Settings > Overview. Depending on the organization type, this may be the project name (e.g. `my-project`) or an ID (e.g. `44n9wujWcTnVZ2b5S8Fnat`)."
                        }
                      ]
                    },
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "GET",
                    "auth": null
                  },
                  "response": [
                    {
                      "id": "87bc4ea5-8452-4254-aba4-cc711ffa63cc",
                      "name": "Successful response.",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "project",
                            ":provider",
                            ":organization",
                            ":project",
                            "settings"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "provider",
                              "description": "(Required) The first segment of the slash-separated project slug, as shown in Project Settings > Overview."
                            },
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "organization",
                              "description": "(Required) The second segment of the slash-separated project slug, as shown in Project Settings > Overview. Depending on the organization type, this may be the org name (e.g. `my-org`) or an ID (e.g. `43G3lM5RtfFE7v5sa4nWAU`)."
                            },
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "project",
                              "description": "(Required) The third segment of the slash-separated project slug, as shown in Project Settings > Overview. Depending on the organization type, this may be the project name (e.g. `my-project`) or an ID (e.g. `44n9wujWcTnVZ2b5S8Fnat`)."
                            }
                          ]
                        },
                        "header": [
                          {
                            "description": {
                              "content": "Added as a part of security scheme: apikey",
                              "type": "text/plain"
                            },
                            "key": "Circle-Token",
                            "value": "<API Key>"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "method": "GET",
                        "body": {}
                      },
                      "status": "OK",
                      "code": 200,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n  \"advanced\": {\n    \"autocancel_builds\": false,\n    \"build_fork_prs\": true,\n    \"build_prs_only\": true,\n    \"disable_ssh\": true,\n    \"forks_receive_secret_env_vars\": true,\n    \"oss\": true,\n    \"set_github_status\": false,\n    \"setup_workflows\": false,\n    \"write_settings_requires_admin\": false,\n    \"pr_only_branch_overrides\": [\n      \"aliqua ipsum\",\n      \"est dolore\"\n    ]\n  }\n}",
                      "cookie": [],
                      "_postman_previewlanguage": "json"
                    },
                    {
                      "id": "820c53c5-e358-406b-b40d-d71d8d38d09e",
                      "name": "Credentials provided are invalid.",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "project",
                            ":provider",
                            ":organization",
                            ":project",
                            "settings"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "provider",
                              "description": "(Required) The first segment of the slash-separated project slug, as shown in Project Settings > Overview."
                            },
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "organization",
                              "description": "(Required) The second segment of the slash-separated project slug, as shown in Project Settings > Overview. Depending on the organization type, this may be the org name (e.g. `my-org`) or an ID (e.g. `43G3lM5RtfFE7v5sa4nWAU`)."
                            },
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "project",
                              "description": "(Required) The third segment of the slash-separated project slug, as shown in Project Settings > Overview. Depending on the organization type, this may be the project name (e.g. `my-project`) or an ID (e.g. `44n9wujWcTnVZ2b5S8Fnat`)."
                            }
                          ]
                        },
                        "header": [
                          {
                            "description": {
                              "content": "Added as a part of security scheme: apikey",
                              "type": "text/plain"
                            },
                            "key": "Circle-Token",
                            "value": "<API Key>"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Unauthorized",
                      "code": 401,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n  \"message\": \"Invalid token provided.\"\n}",
                      "cookie": [],
                      "_postman_previewlanguage": "json"
                    },
                    {
                      "id": "37bcc46c-8753-4091-8b97-9ab494705bbd",
                      "name": "None or insufficient credentials provided.",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "project",
                            ":provider",
                            ":organization",
                            ":project",
                            "settings"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "provider",
                              "description": "(Required) The first segment of the slash-separated project slug, as shown in Project Settings > Overview."
                            },
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "organization",
                              "description": "(Required) The second segment of the slash-separated project slug, as shown in Project Settings > Overview. Depending on the organization type, this may be the org name (e.g. `my-org`) or an ID (e.g. `43G3lM5RtfFE7v5sa4nWAU`)."
                            },
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "project",
                              "description": "(Required) The third segment of the slash-separated project slug, as shown in Project Settings > Overview. Depending on the organization type, this may be the project name (e.g. `my-project`) or an ID (e.g. `44n9wujWcTnVZ2b5S8Fnat`)."
                            }
                          ]
                        },
                        "header": [
                          {
                            "description": {
                              "content": "Added as a part of security scheme: apikey",
                              "type": "text/plain"
                            },
                            "key": "Circle-Token",
                            "value": "<API Key>"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Forbidden",
                      "code": 403,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n  \"message\": \"Permission denied.\"\n}",
                      "cookie": [],
                      "_postman_previewlanguage": "json"
                    },
                    {
                      "id": "5141ed12-96c9-4f9c-81df-19a26ef95f79",
                      "name": "Insufficient credentials for a private project, OR the organization, project, or repository does not exist.",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "project",
                            ":provider",
                            ":organization",
                            ":project",
                            "settings"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "provider",
                              "description": "(Required) The first segment of the slash-separated project slug, as shown in Project Settings > Overview."
                            },
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "organization",
                              "description": "(Required) The second segment of the slash-separated project slug, as shown in Project Settings > Overview. Depending on the organization type, this may be the org name (e.g. `my-org`) or an ID (e.g. `43G3lM5RtfFE7v5sa4nWAU`)."
                            },
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "project",
                              "description": "(Required) The third segment of the slash-separated project slug, as shown in Project Settings > Overview. Depending on the organization type, this may be the project name (e.g. `my-project`) or an ID (e.g. `44n9wujWcTnVZ2b5S8Fnat`)."
                            }
                          ]
                        },
                        "header": [
                          {
                            "description": {
                              "content": "Added as a part of security scheme: apikey",
                              "type": "text/plain"
                            },
                            "key": "Circle-Token",
                            "value": "<API Key>"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n  \"message\": \"Project not found.\"\n}",
                      "cookie": [],
                      "_postman_previewlanguage": "json"
                    },
                    {
                      "id": "353c0678-8390-4055-b00c-a8af53beb90c",
                      "name": "API rate limits exceeded.",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "project",
                            ":provider",
                            ":organization",
                            ":project",
                            "settings"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "provider",
                              "description": "(Required) The first segment of the slash-separated project slug, as shown in Project Settings > Overview."
                            },
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "organization",
                              "description": "(Required) The second segment of the slash-separated project slug, as shown in Project Settings > Overview. Depending on the organization type, this may be the org name (e.g. `my-org`) or an ID (e.g. `43G3lM5RtfFE7v5sa4nWAU`)."
                            },
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "project",
                              "description": "(Required) The third segment of the slash-separated project slug, as shown in Project Settings > Overview. Depending on the organization type, this may be the project name (e.g. `my-project`) or an ID (e.g. `44n9wujWcTnVZ2b5S8Fnat`)."
                            }
                          ]
                        },
                        "header": [
                          {
                            "description": {
                              "content": "Added as a part of security scheme: apikey",
                              "type": "text/plain"
                            },
                            "key": "Circle-Token",
                            "value": "<API Key>"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Too Many Requests",
                      "code": 429,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n  \"message\": \"Rate limit exceeded.\"\n}",
                      "cookie": [],
                      "_postman_previewlanguage": "json"
                    },
                    {
                      "id": "594f8b63-728e-40aa-9f3f-e0d2ae841cb4",
                      "name": "Internal server error.",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "project",
                            ":provider",
                            ":organization",
                            ":project",
                            "settings"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "provider",
                              "description": "(Required) The first segment of the slash-separated project slug, as shown in Project Settings > Overview."
                            },
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "organization",
                              "description": "(Required) The second segment of the slash-separated project slug, as shown in Project Settings > Overview. Depending on the organization type, this may be the org name (e.g. `my-org`) or an ID (e.g. `43G3lM5RtfFE7v5sa4nWAU`)."
                            },
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "project",
                              "description": "(Required) The third segment of the slash-separated project slug, as shown in Project Settings > Overview. Depending on the organization type, this may be the project name (e.g. `my-project`) or an ID (e.g. `44n9wujWcTnVZ2b5S8Fnat`)."
                            }
                          ]
                        },
                        "header": [
                          {
                            "description": {
                              "content": "Added as a part of security scheme: apikey",
                              "type": "text/plain"
                            },
                            "key": "Circle-Token",
                            "value": "<API Key>"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Internal Server Error",
                      "code": 500,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n  \"message\": \"Internal server error.\"\n}",
                      "cookie": [],
                      "_postman_previewlanguage": "json"
                    }
                  ],
                  "event": [],
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  }
                },
                {
                  "id": "836ca5b7-598d-46da-bbdb-7c7142e1c78a",
                  "name": "🧪 Update project settings",
                  "request": {
                    "name": "🧪 Update project settings",
                    "description": {
                      "content": "[__EXPERIMENTAL__] Updates one or more of the advanced settings for a CircleCI project.",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "project",
                        ":provider",
                        ":organization",
                        ":project",
                        "settings"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "provider",
                          "description": "(Required) The first segment of the slash-separated project slug, as shown in Project Settings > Overview."
                        },
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "organization",
                          "description": "(Required) The second segment of the slash-separated project slug, as shown in Project Settings > Overview. Depending on the organization type, this may be the org name (e.g. `my-org`) or an ID (e.g. `43G3lM5RtfFE7v5sa4nWAU`)."
                        },
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "project",
                          "description": "(Required) The third segment of the slash-separated project slug, as shown in Project Settings > Overview. Depending on the organization type, this may be the project name (e.g. `my-project`) or an ID (e.g. `44n9wujWcTnVZ2b5S8Fnat`)."
                        }
                      ]
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "PATCH",
                    "auth": null,
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"advanced\": {\n    \"autocancel_builds\": \"<boolean>\",\n    \"build_fork_prs\": \"<boolean>\",\n    \"build_prs_only\": \"<boolean>\",\n    \"disable_ssh\": \"<boolean>\",\n    \"forks_receive_secret_env_vars\": \"<boolean>\",\n    \"oss\": \"<boolean>\",\n    \"set_github_status\": \"<boolean>\",\n    \"setup_workflows\": \"<boolean>\",\n    \"write_settings_requires_admin\": \"<boolean>\",\n    \"pr_only_branch_overrides\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    }
                  },
                  "response": [
                    {
                      "id": "ed357fe8-97d7-4a7f-b194-7713b4d4f514",
                      "name": "Successful response. Always includes the full advanced settings object. Returned even when the provided updates match the existing settings, but can also be returned when `oss: true` fails to set.",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "project",
                            ":provider",
                            ":organization",
                            ":project",
                            "settings"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "provider",
                              "description": "(Required) The first segment of the slash-separated project slug, as shown in Project Settings > Overview."
                            },
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "organization",
                              "description": "(Required) The second segment of the slash-separated project slug, as shown in Project Settings > Overview. Depending on the organization type, this may be the org name (e.g. `my-org`) or an ID (e.g. `43G3lM5RtfFE7v5sa4nWAU`)."
                            },
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "project",
                              "description": "(Required) The third segment of the slash-separated project slug, as shown in Project Settings > Overview. Depending on the organization type, this may be the project name (e.g. `my-project`) or an ID (e.g. `44n9wujWcTnVZ2b5S8Fnat`)."
                            }
                          ]
                        },
                        "header": [
                          {
                            "description": {
                              "content": "Added as a part of security scheme: apikey",
                              "type": "text/plain"
                            },
                            "key": "Circle-Token",
                            "value": "<API Key>"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "method": "PATCH",
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"advanced\": {\n    \"autocancel_builds\": false,\n    \"build_prs_only\": true,\n    \"pr_only_branch_overrides\": [\n      \"main\"\n    ]\n  }\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n  \"advanced\": {\n    \"autocancel_builds\": \"<boolean>\",\n    \"build_fork_prs\": \"<boolean>\",\n    \"build_prs_only\": \"<boolean>\",\n    \"disable_ssh\": \"<boolean>\",\n    \"forks_receive_secret_env_vars\": \"<boolean>\",\n    \"oss\": \"<boolean>\",\n    \"set_github_status\": \"<boolean>\",\n    \"setup_workflows\": \"<boolean>\",\n    \"write_settings_requires_admin\": \"<boolean>\",\n    \"pr_only_branch_overrides\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n}",
                      "cookie": [],
                      "_postman_previewlanguage": "json"
                    },
                    {
                      "id": "9e3aaa1a-1a80-4cf6-8bc7-9f85bbc27e24",
                      "name": "Request is malformed, e.g. with improperly encoded JSON",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "project",
                            ":provider",
                            ":organization",
                            ":project",
                            "settings"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "provider",
                              "description": "(Required) The first segment of the slash-separated project slug, as shown in Project Settings > Overview."
                            },
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "organization",
                              "description": "(Required) The second segment of the slash-separated project slug, as shown in Project Settings > Overview. Depending on the organization type, this may be the org name (e.g. `my-org`) or an ID (e.g. `43G3lM5RtfFE7v5sa4nWAU`)."
                            },
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "project",
                              "description": "(Required) The third segment of the slash-separated project slug, as shown in Project Settings > Overview. Depending on the organization type, this may be the project name (e.g. `my-project`) or an ID (e.g. `44n9wujWcTnVZ2b5S8Fnat`)."
                            }
                          ]
                        },
                        "header": [
                          {
                            "description": {
                              "content": "Added as a part of security scheme: apikey",
                              "type": "text/plain"
                            },
                            "key": "Circle-Token",
                            "value": "<API Key>"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "method": "PATCH",
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"advanced\": {\n    \"autocancel_builds\": false,\n    \"build_prs_only\": true,\n    \"pr_only_branch_overrides\": [\n      \"main\"\n    ]\n  }\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        }
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n  \"message\": \"Invalid JSON body.\"\n}",
                      "cookie": [],
                      "_postman_previewlanguage": "json"
                    },
                    {
                      "id": "623cedc0-840e-47ba-a0db-2d19906cf94a",
                      "name": "Credentials provided are invalid.",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "project",
                            ":provider",
                            ":organization",
                            ":project",
                            "settings"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "provider",
                              "description": "(Required) The first segment of the slash-separated project slug, as shown in Project Settings > Overview."
                            },
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "organization",
                              "description": "(Required) The second segment of the slash-separated project slug, as shown in Project Settings > Overview. Depending on the organization type, this may be the org name (e.g. `my-org`) or an ID (e.g. `43G3lM5RtfFE7v5sa4nWAU`)."
                            },
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "project",
                              "description": "(Required) The third segment of the slash-separated project slug, as shown in Project Settings > Overview. Depending on the organization type, this may be the project name (e.g. `my-project`) or an ID (e.g. `44n9wujWcTnVZ2b5S8Fnat`)."
                            }
                          ]
                        },
                        "header": [
                          {
                            "description": {
                              "content": "Added as a part of security scheme: apikey",
                              "type": "text/plain"
                            },
                            "key": "Circle-Token",
                            "value": "<API Key>"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "method": "PATCH",
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"advanced\": {\n    \"autocancel_builds\": false,\n    \"build_prs_only\": true,\n    \"pr_only_branch_overrides\": [\n      \"main\"\n    ]\n  }\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        }
                      },
                      "status": "Unauthorized",
                      "code": 401,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n  \"message\": \"Invalid token provided.\"\n}",
                      "cookie": [],
                      "_postman_previewlanguage": "json"
                    },
                    {
                      "id": "f5f6269b-01f9-4b11-b8cd-ded2b5201ab9",
                      "name": "None or insufficient credentials provided.",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "project",
                            ":provider",
                            ":organization",
                            ":project",
                            "settings"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "provider",
                              "description": "(Required) The first segment of the slash-separated project slug, as shown in Project Settings > Overview."
                            },
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "organization",
                              "description": "(Required) The second segment of the slash-separated project slug, as shown in Project Settings > Overview. Depending on the organization type, this may be the org name (e.g. `my-org`) or an ID (e.g. `43G3lM5RtfFE7v5sa4nWAU`)."
                            },
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "project",
                              "description": "(Required) The third segment of the slash-separated project slug, as shown in Project Settings > Overview. Depending on the organization type, this may be the project name (e.g. `my-project`) or an ID (e.g. `44n9wujWcTnVZ2b5S8Fnat`)."
                            }
                          ]
                        },
                        "header": [
                          {
                            "description": {
                              "content": "Added as a part of security scheme: apikey",
                              "type": "text/plain"
                            },
                            "key": "Circle-Token",
                            "value": "<API Key>"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "method": "PATCH",
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"advanced\": {\n    \"autocancel_builds\": false,\n    \"build_prs_only\": true,\n    \"pr_only_branch_overrides\": [\n      \"main\"\n    ]\n  }\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        }
                      },
                      "status": "Forbidden",
                      "code": 403,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n  \"message\": \"Permission denied.\"\n}",
                      "cookie": [],
                      "_postman_previewlanguage": "json"
                    },
                    {
                      "id": "5b29a94d-cc04-4653-b70d-9128bf33d179",
                      "name": "Insufficient credentials for a private project, OR the organization, project, or repository does not exist.",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "project",
                            ":provider",
                            ":organization",
                            ":project",
                            "settings"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "provider",
                              "description": "(Required) The first segment of the slash-separated project slug, as shown in Project Settings > Overview."
                            },
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "organization",
                              "description": "(Required) The second segment of the slash-separated project slug, as shown in Project Settings > Overview. Depending on the organization type, this may be the org name (e.g. `my-org`) or an ID (e.g. `43G3lM5RtfFE7v5sa4nWAU`)."
                            },
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "project",
                              "description": "(Required) The third segment of the slash-separated project slug, as shown in Project Settings > Overview. Depending on the organization type, this may be the project name (e.g. `my-project`) or an ID (e.g. `44n9wujWcTnVZ2b5S8Fnat`)."
                            }
                          ]
                        },
                        "header": [
                          {
                            "description": {
                              "content": "Added as a part of security scheme: apikey",
                              "type": "text/plain"
                            },
                            "key": "Circle-Token",
                            "value": "<API Key>"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "method": "PATCH",
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"advanced\": {\n    \"autocancel_builds\": false,\n    \"build_prs_only\": true,\n    \"pr_only_branch_overrides\": [\n      \"main\"\n    ]\n  }\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n  \"message\": \"Project not found.\"\n}",
                      "cookie": [],
                      "_postman_previewlanguage": "json"
                    },
                    {
                      "id": "ac822461-4fe2-414d-ac7e-b6168aa331c1",
                      "name": "API rate limits exceeded.",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "project",
                            ":provider",
                            ":organization",
                            ":project",
                            "settings"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "provider",
                              "description": "(Required) The first segment of the slash-separated project slug, as shown in Project Settings > Overview."
                            },
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "organization",
                              "description": "(Required) The second segment of the slash-separated project slug, as shown in Project Settings > Overview. Depending on the organization type, this may be the org name (e.g. `my-org`) or an ID (e.g. `43G3lM5RtfFE7v5sa4nWAU`)."
                            },
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "project",
                              "description": "(Required) The third segment of the slash-separated project slug, as shown in Project Settings > Overview. Depending on the organization type, this may be the project name (e.g. `my-project`) or an ID (e.g. `44n9wujWcTnVZ2b5S8Fnat`)."
                            }
                          ]
                        },
                        "header": [
                          {
                            "description": {
                              "content": "Added as a part of security scheme: apikey",
                              "type": "text/plain"
                            },
                            "key": "Circle-Token",
                            "value": "<API Key>"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "method": "PATCH",
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"advanced\": {\n    \"autocancel_builds\": false,\n    \"build_prs_only\": true,\n    \"pr_only_branch_overrides\": [\n      \"main\"\n    ]\n  }\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        }
                      },
                      "status": "Too Many Requests",
                      "code": 429,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n  \"message\": \"Rate limit exceeded.\"\n}",
                      "cookie": [],
                      "_postman_previewlanguage": "json"
                    },
                    {
                      "id": "a975b990-0bbd-47a3-86f5-e1d447514b3c",
                      "name": "Internal server error.",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "project",
                            ":provider",
                            ":organization",
                            ":project",
                            "settings"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "provider",
                              "description": "(Required) The first segment of the slash-separated project slug, as shown in Project Settings > Overview."
                            },
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "organization",
                              "description": "(Required) The second segment of the slash-separated project slug, as shown in Project Settings > Overview. Depending on the organization type, this may be the org name (e.g. `my-org`) or an ID (e.g. `43G3lM5RtfFE7v5sa4nWAU`)."
                            },
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "project",
                              "description": "(Required) The third segment of the slash-separated project slug, as shown in Project Settings > Overview. Depending on the organization type, this may be the project name (e.g. `my-project`) or an ID (e.g. `44n9wujWcTnVZ2b5S8Fnat`)."
                            }
                          ]
                        },
                        "header": [
                          {
                            "description": {
                              "content": "Added as a part of security scheme: apikey",
                              "type": "text/plain"
                            },
                            "key": "Circle-Token",
                            "value": "<API Key>"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "method": "PATCH",
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"advanced\": {\n    \"autocancel_builds\": false,\n    \"build_prs_only\": true,\n    \"pr_only_branch_overrides\": [\n      \"main\"\n    ]\n  }\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        }
                      },
                      "status": "Internal Server Error",
                      "code": 500,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n  \"message\": \"Internal server error.\"\n}",
                      "cookie": [],
                      "_postman_previewlanguage": "json"
                    }
                  ],
                  "event": [],
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  }
                }
              ],
              "event": []
            },
            {
              "id": "0ab1dae4-d9b7-4863-b266-7f5c8d399469",
              "name": "[Recommended] Trigger a new pipeline",
              "request": {
                "name": "[Recommended] Trigger a new pipeline",
                "description": {
                  "content": "Trigger a pipeline given a pipeline definition ID. Supports all integrations except GitLab.\n\nThe slash-separated project slug is shown in Project Settings > Overview.\n\nDepending on the organization type, the project slug may have a human-readable format (`vcs_type/org_name/project_name`)\nor be an opaque string (e.g. `circleci/43G3lM5RtfFE7v5sa4nWAU/44n9wujWcTnVZ2b5S8Fnat`).",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "project",
                    ":provider",
                    ":organization",
                    ":project",
                    "pipeline",
                    "run"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "provider",
                      "description": "(Required) The first segment of the slash-separated project slug, as shown in Project Settings > Overview."
                    },
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "organization",
                      "description": "(Required) The second segment of the slash-separated project slug, as shown in Project Settings > Overview. Depending on the organization type, this may be the org name (e.g. `my-org`) or an ID (e.g. `43G3lM5RtfFE7v5sa4nWAU`)."
                    },
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "project",
                      "description": "(Required) The third segment of the slash-separated project slug, as shown in Project Settings > Overview. Depending on the organization type, this may be the project name (e.g. `my-project`) or an ID (e.g. `44n9wujWcTnVZ2b5S8Fnat`)."
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "auth": null,
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"definition_id\": \"<uuid>\",\n  \"config\": {\n    \"branch\": \"<string>\",\n    \"tag\": \"<string>\"\n  },\n  \"checkout\": {\n    \"branch\": \"<string>\",\n    \"tag\": \"<string>\"\n  },\n  \"parameters\": {\n    \"nisi_4fa\": -49488561.35400677,\n    \"irure_410\": 66695595,\n    \"commodo_7b\": true,\n    \"et_6\": 75360351.79993048\n  }\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [
                {
                  "id": "2ace6235-c2e5-4dcb-a4ff-f03c7817b5b7",
                  "name": "Successful response with no created pipeline.",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "project",
                        ":provider",
                        ":organization",
                        ":project",
                        "pipeline",
                        "run"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "provider",
                          "description": "(Required) The first segment of the slash-separated project slug, as shown in Project Settings > Overview."
                        },
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "organization",
                          "description": "(Required) The second segment of the slash-separated project slug, as shown in Project Settings > Overview. Depending on the organization type, this may be the org name (e.g. `my-org`) or an ID (e.g. `43G3lM5RtfFE7v5sa4nWAU`)."
                        },
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "project",
                          "description": "(Required) The third segment of the slash-separated project slug, as shown in Project Settings > Overview. Depending on the organization type, this may be the project name (e.g. `my-project`) or an ID (e.g. `44n9wujWcTnVZ2b5S8Fnat`)."
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "Added as a part of security scheme: apikey",
                          "type": "text/plain"
                        },
                        "key": "Circle-Token",
                        "value": "<API Key>"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"definition_id\": \"2338d0ae-5541-4bbf-88a2-55e9f7281f80\",\n  \"config\": {\n    \"branch\": \"main\"\n  },\n  \"checkout\": {\n    \"tag\": \"v2\"\n  },\n  \"parameters\": {\n    \"example_param\": \"my value\",\n    \"example_param2\": true,\n    \"example_param3\": 3\n  }\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n  \"message\": \"Ignoring pipeline due to CI skip in the commit\"\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json"
                },
                {
                  "id": "1a9f9fd5-daf0-48d1-ba64-384a6b34d27b",
                  "name": "Successful response.",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "project",
                        ":provider",
                        ":organization",
                        ":project",
                        "pipeline",
                        "run"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "provider",
                          "description": "(Required) The first segment of the slash-separated project slug, as shown in Project Settings > Overview."
                        },
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "organization",
                          "description": "(Required) The second segment of the slash-separated project slug, as shown in Project Settings > Overview. Depending on the organization type, this may be the org name (e.g. `my-org`) or an ID (e.g. `43G3lM5RtfFE7v5sa4nWAU`)."
                        },
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "project",
                          "description": "(Required) The third segment of the slash-separated project slug, as shown in Project Settings > Overview. Depending on the organization type, this may be the project name (e.g. `my-project`) or an ID (e.g. `44n9wujWcTnVZ2b5S8Fnat`)."
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "Added as a part of security scheme: apikey",
                          "type": "text/plain"
                        },
                        "key": "Circle-Token",
                        "value": "<API Key>"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"definition_id\": \"2338d0ae-5541-4bbf-88a2-55e9f7281f80\",\n  \"config\": {\n    \"branch\": \"main\"\n  },\n  \"checkout\": {\n    \"tag\": \"v2\"\n  },\n  \"parameters\": {\n    \"example_param\": \"my value\",\n    \"example_param2\": true,\n    \"example_param3\": 3\n  }\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    }
                  },
                  "status": "Created",
                  "code": 201,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n  \"state\": \"created\",\n  \"created_at\": \"1979-08-23T12:35:40.131Z\",\n  \"number\": 25,\n  \"id\": \"419a15d3-da0c-05b2-a910-b464410b4b89\"\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json"
                },
                {
                  "id": "1aa78eac-0af8-49f6-94b4-e528e4b078a6",
                  "name": "Unexpected request body provided.",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "project",
                        ":provider",
                        ":organization",
                        ":project",
                        "pipeline",
                        "run"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "provider",
                          "description": "(Required) The first segment of the slash-separated project slug, as shown in Project Settings > Overview."
                        },
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "organization",
                          "description": "(Required) The second segment of the slash-separated project slug, as shown in Project Settings > Overview. Depending on the organization type, this may be the org name (e.g. `my-org`) or an ID (e.g. `43G3lM5RtfFE7v5sa4nWAU`)."
                        },
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "project",
                          "description": "(Required) The third segment of the slash-separated project slug, as shown in Project Settings > Overview. Depending on the organization type, this may be the project name (e.g. `my-project`) or an ID (e.g. `44n9wujWcTnVZ2b5S8Fnat`)."
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "Added as a part of security scheme: apikey",
                          "type": "text/plain"
                        },
                        "key": "Circle-Token",
                        "value": "<API Key>"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"definition_id\": \"2338d0ae-5541-4bbf-88a2-55e9f7281f80\",\n  \"config\": {\n    \"branch\": \"main\"\n  },\n  \"checkout\": {\n    \"tag\": \"v2\"\n  },\n  \"parameters\": {\n    \"example_param\": \"my value\",\n    \"example_param2\": true,\n    \"example_param3\": 3\n  }\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n  \"message\": \"Unexpected request body provided.\"\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json"
                },
                {
                  "id": "bf2b68c9-8893-428f-83b9-fcdd4d362108",
                  "name": "Credentials provided are invalid.",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "project",
                        ":provider",
                        ":organization",
                        ":project",
                        "pipeline",
                        "run"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "provider",
                          "description": "(Required) The first segment of the slash-separated project slug, as shown in Project Settings > Overview."
                        },
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "organization",
                          "description": "(Required) The second segment of the slash-separated project slug, as shown in Project Settings > Overview. Depending on the organization type, this may be the org name (e.g. `my-org`) or an ID (e.g. `43G3lM5RtfFE7v5sa4nWAU`)."
                        },
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "project",
                          "description": "(Required) The third segment of the slash-separated project slug, as shown in Project Settings > Overview. Depending on the organization type, this may be the project name (e.g. `my-project`) or an ID (e.g. `44n9wujWcTnVZ2b5S8Fnat`)."
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "Added as a part of security scheme: apikey",
                          "type": "text/plain"
                        },
                        "key": "Circle-Token",
                        "value": "<API Key>"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"definition_id\": \"2338d0ae-5541-4bbf-88a2-55e9f7281f80\",\n  \"config\": {\n    \"branch\": \"main\"\n  },\n  \"checkout\": {\n    \"tag\": \"v2\"\n  },\n  \"parameters\": {\n    \"example_param\": \"my value\",\n    \"example_param2\": true,\n    \"example_param3\": 3\n  }\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    }
                  },
                  "status": "Unauthorized",
                  "code": 401,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n  \"message\": \"Invalid token provided.\"\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json"
                },
                {
                  "id": "b456a9b2-2b37-4235-b19b-1b6300cad865",
                  "name": "Entity not found.",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "project",
                        ":provider",
                        ":organization",
                        ":project",
                        "pipeline",
                        "run"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "provider",
                          "description": "(Required) The first segment of the slash-separated project slug, as shown in Project Settings > Overview."
                        },
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "organization",
                          "description": "(Required) The second segment of the slash-separated project slug, as shown in Project Settings > Overview. Depending on the organization type, this may be the org name (e.g. `my-org`) or an ID (e.g. `43G3lM5RtfFE7v5sa4nWAU`)."
                        },
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "project",
                          "description": "(Required) The third segment of the slash-separated project slug, as shown in Project Settings > Overview. Depending on the organization type, this may be the project name (e.g. `my-project`) or an ID (e.g. `44n9wujWcTnVZ2b5S8Fnat`)."
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "Added as a part of security scheme: apikey",
                          "type": "text/plain"
                        },
                        "key": "Circle-Token",
                        "value": "<API Key>"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"definition_id\": \"2338d0ae-5541-4bbf-88a2-55e9f7281f80\",\n  \"config\": {\n    \"branch\": \"main\"\n  },\n  \"checkout\": {\n    \"tag\": \"v2\"\n  },\n  \"parameters\": {\n    \"example_param\": \"my value\",\n    \"example_param2\": true,\n    \"example_param3\": 3\n  }\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n  \"message\": \"Context not found.\"\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json"
                }
              ],
              "event": [],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              }
            }
          ],
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "2e5dc39d-2899-4a85-98bc-1b3463742cf3",
      "name": "schedule/{schedule-id}",
      "item": [
        {
          "id": "a627db4d-b552-4c26-880b-130e5fdc871c",
          "name": "Update a schedule",
          "request": {
            "name": "Update a schedule",
            "description": {
              "content": "Not yet available to projects that use GitLab or GitHub App. Updates a schedule and returns the updated schedule.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "schedule",
                ":schedule-id"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<uuid>",
                  "key": "schedule-id",
                  "description": "(Required) The unique ID of the schedule."
                }
              ]
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PATCH",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n  \"description\": \"<string>\",\n  \"name\": \"<string>\",\n  \"timetable\": {\n    \"per-hour\": \"<integer>\",\n    \"hours-of-day\": [\n      \"<integer>\",\n      \"<integer>\"\n    ],\n    \"days-of-week\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"days-of-month\": [\n      \"<integer>\",\n      \"<integer>\"\n    ],\n    \"months\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"attribution-actor\": \"<string>\",\n  \"parameters\": {\n    \"consectetur_6\": \"<integer>\",\n    \"magnac\": \"<integer>\",\n    \"tempor_61\": \"<integer>\"\n  }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "id": "4ec2b39e-39e4-4a97-8e78-ef3bd22719bd",
              "name": "A schedule object.",
              "originalRequest": {
                "url": {
                  "path": [
                    "schedule",
                    ":schedule-id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<uuid>",
                      "key": "schedule-id",
                      "description": "(Required) The unique ID of the schedule."
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "Circle-Token",
                    "value": "<API Key>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "PATCH",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"description\": \"<string>\",\n  \"name\": \"<string>\",\n  \"timetable\": {\n    \"per-hour\": \"<integer>\",\n    \"hours-of-day\": [\n      \"<integer>\",\n      \"<integer>\"\n    ],\n    \"days-of-week\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"days-of-month\": [\n      \"<integer>\",\n      \"<integer>\"\n    ],\n    \"months\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"attribution-actor\": \"current\",\n  \"parameters\": {\n    \"Excepteur9_3\": \"<integer>\"\n  }\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"id\": \"urn:uuid:1d04628e-0549-e405-337c-57fa1b1ad168\",\n  \"name\": \"nostrud officia aliqua\",\n  \"timetable\": {\n    \"per-hour\": 52489918,\n    \"hours-of-day\": [\n      51541250,\n      -73859999\n    ],\n    \"days-of-week\": [\n      \"TUE\",\n      \"SAT\"\n    ],\n    \"days-of-month\": [\n      -79108026,\n      13134983\n    ],\n    \"months\": [\n      \"SEP\",\n      \"AUG\"\n    ]\n  },\n  \"description\": \"in qui minim elit\",\n  \"project-slug\": \"gh/CircleCI-Public/api-preview-docs\",\n  \"actor\": {\n    \"id\": \"urn:uuid:9cc7c8a9-6c50-4214-05e6-b73d0a4cee2b\",\n    \"login\": \"ad\",\n    \"name\": \"nisi veniam incididunt\"\n  },\n  \"created-at\": \"1970-04-07T03:09:23.515Z\",\n  \"updated-at\": \"1987-06-01T14:08:29.742Z\",\n  \"parameters\": {\n    \"minim__c\": -21048291,\n    \"nulla_56\": 10112419\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "de643fd3-89f3-47c8-8cf3-8f738d21cb22",
              "name": "Error response.",
              "originalRequest": {
                "url": {
                  "path": [
                    "schedule",
                    ":schedule-id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<uuid>",
                      "key": "schedule-id",
                      "description": "(Required) The unique ID of the schedule."
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "Circle-Token",
                    "value": "<API Key>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "PATCH",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"description\": \"<string>\",\n  \"name\": \"<string>\",\n  \"timetable\": {\n    \"per-hour\": \"<integer>\",\n    \"hours-of-day\": [\n      \"<integer>\",\n      \"<integer>\"\n    ],\n    \"days-of-week\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"days-of-month\": [\n      \"<integer>\",\n      \"<integer>\"\n    ],\n    \"months\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"attribution-actor\": \"current\",\n  \"parameters\": {\n    \"Excepteur9_3\": \"<integer>\"\n  }\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"message\": \"laborum\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "622afbfd-af12-4166-8cb3-7353fcd9397b",
          "name": "Delete a schedule",
          "request": {
            "name": "Delete a schedule",
            "description": {
              "content": "Not yet available to projects that use GitLab or GitHub App. Deletes the schedule by id.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "schedule",
                ":schedule-id"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<uuid>",
                  "key": "schedule-id",
                  "description": "(Required) The unique ID of the schedule."
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "DELETE",
            "auth": null
          },
          "response": [
            {
              "id": "82c2b11b-5e34-426d-9e6d-91015104c888",
              "name": "A confirmation message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "schedule",
                    ":schedule-id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<uuid>",
                      "key": "schedule-id",
                      "description": "(Required) The unique ID of the schedule."
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "Circle-Token",
                    "value": "<API Key>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "DELETE",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"message\": \"pariat\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "9623ae4b-59f7-4a8a-8ada-882386b4118f",
              "name": "Error response.",
              "originalRequest": {
                "url": {
                  "path": [
                    "schedule",
                    ":schedule-id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<uuid>",
                      "key": "schedule-id",
                      "description": "(Required) The unique ID of the schedule."
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "Circle-Token",
                    "value": "<API Key>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "DELETE",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"message\": \"laborum\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "06ea5b61-f411-4b23-a727-9c3a7867a384",
          "name": "Get a schedule",
          "request": {
            "name": "Get a schedule",
            "description": {
              "content": "Get a schedule by id.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "schedule",
                ":schedule-id"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<uuid>",
                  "key": "schedule-id",
                  "description": "(Required) The unique ID of the schedule."
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "2db04911-6708-4a3f-9ee1-9e4ab6127133",
              "name": "A schedule object.",
              "originalRequest": {
                "url": {
                  "path": [
                    "schedule",
                    ":schedule-id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<uuid>",
                      "key": "schedule-id",
                      "description": "(Required) The unique ID of the schedule."
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "Circle-Token",
                    "value": "<API Key>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"id\": \"urn:uuid:1d04628e-0549-e405-337c-57fa1b1ad168\",\n  \"name\": \"nostrud officia aliqua\",\n  \"timetable\": {\n    \"per-hour\": 52489918,\n    \"hours-of-day\": [\n      51541250,\n      -73859999\n    ],\n    \"days-of-week\": [\n      \"TUE\",\n      \"SAT\"\n    ],\n    \"days-of-month\": [\n      -79108026,\n      13134983\n    ],\n    \"months\": [\n      \"SEP\",\n      \"AUG\"\n    ]\n  },\n  \"description\": \"in qui minim elit\",\n  \"project-slug\": \"gh/CircleCI-Public/api-preview-docs\",\n  \"actor\": {\n    \"id\": \"urn:uuid:9cc7c8a9-6c50-4214-05e6-b73d0a4cee2b\",\n    \"login\": \"ad\",\n    \"name\": \"nisi veniam incididunt\"\n  },\n  \"created-at\": \"1970-04-07T03:09:23.515Z\",\n  \"updated-at\": \"1987-06-01T14:08:29.742Z\",\n  \"parameters\": {\n    \"minim__c\": -21048291,\n    \"nulla_56\": 10112419\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "d4b7da4e-3603-490f-a1b2-670e25ea54b1",
              "name": "Error response.",
              "originalRequest": {
                "url": {
                  "path": [
                    "schedule",
                    ":schedule-id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<uuid>",
                      "key": "schedule-id",
                      "description": "(Required) The unique ID of the schedule."
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "Circle-Token",
                    "value": "<API Key>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"message\": \"laborum\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "1d78cd85-daf2-41d1-8f16-afd38ebf1506",
      "name": "User Information",
      "request": {
        "name": "User Information",
        "description": {
          "content": "Provides information about the user with the given ID.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "user",
            ":id"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": [
            {
              "disabled": false,
              "type": "any",
              "value": "<uuid>",
              "key": "id",
              "description": "(Required) The unique ID of the user."
            }
          ]
        },
        "header": [
          {
            "key": "Accept",
            "value": "application/json"
          }
        ],
        "method": "GET",
        "auth": null
      },
      "response": [
        {
          "id": "c0b13c80-c4a1-4926-a466-cedffa271b96",
          "name": "User login information.",
          "originalRequest": {
            "url": {
              "path": [
                "user",
                ":id"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<uuid>",
                  "key": "id",
                  "description": "(Required) The unique ID of the user."
                }
              ]
            },
            "header": [
              {
                "description": {
                  "content": "Added as a part of security scheme: apikey",
                  "type": "text/plain"
                },
                "key": "Circle-Token",
                "value": "<API Key>"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "body": {}
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n  \"id\": \"urn:uuid:69dcadf1-f035-0f3e-580a-a28e1435ba5e\",\n  \"login\": \"aliqua velit eiusmod\",\n  \"name\": \"magna eu quis sed\"\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "id": "e14f81fc-d7a8-404f-af6b-2f58c471306e",
          "name": "Error response.",
          "originalRequest": {
            "url": {
              "path": [
                "user",
                ":id"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<uuid>",
                  "key": "id",
                  "description": "(Required) The unique ID of the user."
                }
              ]
            },
            "header": [
              {
                "description": {
                  "content": "Added as a part of security scheme: apikey",
                  "type": "text/plain"
                },
                "key": "Circle-Token",
                "value": "<API Key>"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "body": {}
          },
          "status": "Internal Server Error",
          "code": 500,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n  \"message\": \"laborum\"\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        }
      ],
      "event": [],
      "protocolProfileBehavior": {
        "disableBodyPruning": true
      }
    },
    {
      "id": "863888a3-ec3e-435d-85bb-c81e915b1047",
      "name": "webhook",
      "item": [
        {
          "id": "7af4adfa-26c6-4ecc-beef-bfde21631967",
          "name": "Create an outbound webhook",
          "request": {
            "name": "Create an outbound webhook",
            "description": {
              "content": "Creates an outbound webhook.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "webhook"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"<string>\",\n  \"events\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"url\": \"<string>\",\n  \"verify-tls\": \"<boolean>\",\n  \"signing-secret\": \"<string>\",\n  \"scope\": {\n    \"id\": \"<uuid>\",\n    \"type\": \"<string>\"\n  }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "id": "c6ce0f00-1565-46bb-95ab-5fd8b5bba1b4",
              "name": "A webhook",
              "originalRequest": {
                "url": {
                  "path": [
                    "webhook"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "Circle-Token",
                    "value": "<API Key>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"<string>\",\n  \"events\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"url\": \"<string>\",\n  \"verify-tls\": \"<boolean>\",\n  \"signing-secret\": \"<string>\",\n  \"scope\": {\n    \"id\": \"<uuid>\",\n    \"type\": \"<string>\"\n  }\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Created",
              "code": 201,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"id\": \"61cacccb-15ce-8d04-91b2-83e3d9675831\",\n  \"scope\": {\n    \"id\": \"9b740628-f119-8d8a-b147-ecc374136c53\",\n    \"type\": \"dolor reprehend\"\n  },\n  \"name\": \"cupidatat\",\n  \"events\": [\n    \"job-completed\",\n    \"job-completed\"\n  ],\n  \"url\": \"consectetur Lorem\",\n  \"verify-tls\": true,\n  \"signing-secret\": \"enim adipisicing\",\n  \"created-at\": \"2015-09-21T17:29:21.042Z\",\n  \"updated-at\": \"2015-09-21T17:29:21.042Z\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "197a4bcd-8077-4079-a007-78ac42175139",
              "name": "Error response.",
              "originalRequest": {
                "url": {
                  "path": [
                    "webhook"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "Circle-Token",
                    "value": "<API Key>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"<string>\",\n  \"events\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"url\": \"<string>\",\n  \"verify-tls\": \"<boolean>\",\n  \"signing-secret\": \"<string>\",\n  \"scope\": {\n    \"id\": \"<uuid>\",\n    \"type\": \"<string>\"\n  }\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"message\": \"laborum\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "d50d38ad-2717-45d1-8736-6d1464085124",
          "name": "List webhooks",
          "request": {
            "name": "List webhooks",
            "description": {
              "content": "Get a list of outbound webhooks that match the given scope-type and scope-id",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "webhook"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "scope-id",
                  "value": "<uuid>",
                  "description": "(Required) ID of the scope being used (at the moment, only project ID is supported)"
                },
                {
                  "disabled": false,
                  "key": "scope-type",
                  "value": "<string>",
                  "description": "(Required) Type of the scope being used"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "aa03d50a-c557-4602-b52b-6fea99275c1d",
              "name": "A list of webhooks",
              "originalRequest": {
                "url": {
                  "path": [
                    "webhook"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "scope-id",
                      "value": "<uuid>"
                    },
                    {
                      "key": "scope-type",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "Circle-Token",
                    "value": "<API Key>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"items\": [\n    {\n      \"id\": \"urn:uuid:7d7a54b1-bea0-1210-a384-5b8778c5d653\",\n      \"scope\": {\n        \"id\": \"urn:uuid:fdcfaa19-0124-87f0-a420-e14f2d99affa\",\n        \"type\": \"incididunt in non Lorem\"\n      },\n      \"name\": \"exercitation\",\n      \"events\": [\n        \"workflow-completed\",\n        \"workflow-completed\"\n      ],\n      \"url\": \"qui quis ullamco ut\",\n      \"verify-tls\": false,\n      \"signing-secret\": \"ullamco quis dolore\",\n      \"created-at\": \"2015-09-21T17:29:21.042Z\",\n      \"updated-at\": \"2015-09-21T17:29:21.042Z\"\n    },\n    {\n      \"id\": \"0f0f8aa5-db10-7ea3-dd9d-1106ae850556\",\n      \"scope\": {\n        \"id\": \"urn:uuid:1975ca79-99d1-06df-2041-3245cbdba4a9\",\n        \"type\": \"ut mollit\"\n      },\n      \"name\": \"amet sed\",\n      \"events\": [\n        \"job-completed\",\n        \"job-completed\"\n      ],\n      \"url\": \"dolor mollit cupidatat\",\n      \"verify-tls\": false,\n      \"signing-secret\": \"anim pariatur sunt ea\",\n      \"created-at\": \"2015-09-21T17:29:21.042Z\",\n      \"updated-at\": \"2015-09-21T17:29:21.042Z\"\n    }\n  ],\n  \"next_page_token\": \"laboris ex est veniam\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "2fd036d4-c20a-4c0f-881e-f2ed4a9c0a16",
              "name": "Error response.",
              "originalRequest": {
                "url": {
                  "path": [
                    "webhook"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "scope-id",
                      "value": "<uuid>"
                    },
                    {
                      "key": "scope-type",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "Circle-Token",
                    "value": "<API Key>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"message\": \"laborum\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "a0fb9c0a-d613-4504-8982-954e157fd903",
          "name": "{webhook-id}",
          "item": [
            {
              "id": "b9e78ed1-0b77-451d-8003-a41b0c21d4e2",
              "name": "Get a webhook",
              "request": {
                "name": "Get a webhook",
                "description": {
                  "content": "Get an outbound webhook by id.",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "webhook",
                    ":webhook-id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<uuid>",
                      "key": "webhook-id",
                      "description": "(Required) ID of the webhook (UUID)"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "auth": null
              },
              "response": [
                {
                  "id": "b45817ee-350d-403c-8681-ed8c13858061",
                  "name": "A webhook",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "webhook",
                        ":webhook-id"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<uuid>",
                          "key": "webhook-id",
                          "description": "(Required) ID of the webhook (UUID)"
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "Added as a part of security scheme: apikey",
                          "type": "text/plain"
                        },
                        "key": "Circle-Token",
                        "value": "<API Key>"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n  \"id\": \"61cacccb-15ce-8d04-91b2-83e3d9675831\",\n  \"scope\": {\n    \"id\": \"9b740628-f119-8d8a-b147-ecc374136c53\",\n    \"type\": \"dolor reprehend\"\n  },\n  \"name\": \"cupidatat\",\n  \"events\": [\n    \"job-completed\",\n    \"job-completed\"\n  ],\n  \"url\": \"consectetur Lorem\",\n  \"verify-tls\": true,\n  \"signing-secret\": \"enim adipisicing\",\n  \"created-at\": \"2015-09-21T17:29:21.042Z\",\n  \"updated-at\": \"2015-09-21T17:29:21.042Z\"\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json"
                },
                {
                  "id": "7c3af3a2-9cb1-4116-a706-64ceee5a18d0",
                  "name": "Error response.",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "webhook",
                        ":webhook-id"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<uuid>",
                          "key": "webhook-id",
                          "description": "(Required) ID of the webhook (UUID)"
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "Added as a part of security scheme: apikey",
                          "type": "text/plain"
                        },
                        "key": "Circle-Token",
                        "value": "<API Key>"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n  \"message\": \"laborum\"\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json"
                }
              ],
              "event": [],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              }
            },
            {
              "id": "885e67ff-b00e-461d-b673-9bab103cb932",
              "name": "Delete an outbound webhook",
              "request": {
                "name": "Delete an outbound webhook",
                "description": {
                  "content": "Deletes an outbound webhook",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "webhook",
                    ":webhook-id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<uuid>",
                      "key": "webhook-id",
                      "description": "(Required) ID of the webhook (UUID)"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "DELETE",
                "auth": null
              },
              "response": [
                {
                  "id": "028437f8-9f49-4a7a-90cd-163d50ce25f4",
                  "name": "A confirmation message",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "webhook",
                        ":webhook-id"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<uuid>",
                          "key": "webhook-id",
                          "description": "(Required) ID of the webhook (UUID)"
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "Added as a part of security scheme: apikey",
                          "type": "text/plain"
                        },
                        "key": "Circle-Token",
                        "value": "<API Key>"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "DELETE",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n  \"message\": \"pariat\"\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json"
                },
                {
                  "id": "0e790255-77e2-4496-86af-40ed178c5a26",
                  "name": "Error response.",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "webhook",
                        ":webhook-id"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<uuid>",
                          "key": "webhook-id",
                          "description": "(Required) ID of the webhook (UUID)"
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "Added as a part of security scheme: apikey",
                          "type": "text/plain"
                        },
                        "key": "Circle-Token",
                        "value": "<API Key>"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "DELETE",
                    "body": {}
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n  \"message\": \"laborum\"\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json"
                }
              ],
              "event": [],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              }
            },
            {
              "id": "23ec35e2-4da9-4326-b0b0-f68bdee604a9",
              "name": "Update an outbound webhook",
              "request": {
                "name": "Update an outbound webhook",
                "description": {
                  "content": "Updates an outbound webhook.",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "webhook",
                    ":webhook-id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<uuid>",
                      "key": "webhook-id",
                      "description": "(Required) ID of the webhook (UUID)"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "auth": null,
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"<string>\",\n  \"events\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"url\": \"<string>\",\n  \"signing-secret\": \"<string>\",\n  \"verify-tls\": \"<boolean>\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [
                {
                  "id": "1bbd74fe-d836-4a2c-8f82-275c16f221ed",
                  "name": "A webhook",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "webhook",
                        ":webhook-id"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<uuid>",
                          "key": "webhook-id",
                          "description": "(Required) ID of the webhook (UUID)"
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "Added as a part of security scheme: apikey",
                          "type": "text/plain"
                        },
                        "key": "Circle-Token",
                        "value": "<API Key>"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"name\": \"<string>\",\n  \"events\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"url\": \"<string>\",\n  \"signing-secret\": \"<string>\",\n  \"verify-tls\": \"<boolean>\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n  \"id\": \"61cacccb-15ce-8d04-91b2-83e3d9675831\",\n  \"scope\": {\n    \"id\": \"9b740628-f119-8d8a-b147-ecc374136c53\",\n    \"type\": \"dolor reprehend\"\n  },\n  \"name\": \"cupidatat\",\n  \"events\": [\n    \"job-completed\",\n    \"job-completed\"\n  ],\n  \"url\": \"consectetur Lorem\",\n  \"verify-tls\": true,\n  \"signing-secret\": \"enim adipisicing\",\n  \"created-at\": \"2015-09-21T17:29:21.042Z\",\n  \"updated-at\": \"2015-09-21T17:29:21.042Z\"\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json"
                },
                {
                  "id": "f4cdda8a-66c0-43fe-a63d-d5970f823aa6",
                  "name": "Error response.",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "webhook",
                        ":webhook-id"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<uuid>",
                          "key": "webhook-id",
                          "description": "(Required) ID of the webhook (UUID)"
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "Added as a part of security scheme: apikey",
                          "type": "text/plain"
                        },
                        "key": "Circle-Token",
                        "value": "<API Key>"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"name\": \"<string>\",\n  \"events\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"url\": \"<string>\",\n  \"signing-secret\": \"<string>\",\n  \"verify-tls\": \"<boolean>\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n  \"message\": \"laborum\"\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json"
                }
              ],
              "event": [],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              }
            }
          ],
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "5abc1572-234d-444d-a7c4-84444c01a073",
      "name": "workflow/{id}",
      "item": [
        {
          "id": "1f3d0b45-94e3-487b-8c96-5bb0cd2ec4a6",
          "name": "Get a workflow",
          "request": {
            "name": "Get a workflow",
            "description": {
              "content": "Returns summary fields of a workflow by ID.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "workflow",
                ":id"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<uuid>",
                  "key": "id",
                  "description": "(Required) The unique ID of the workflow."
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "5d86887b-4036-457f-a56d-f2b5fe72b8ca",
              "name": "A workflow object.",
              "originalRequest": {
                "url": {
                  "path": [
                    "workflow",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<uuid>",
                      "key": "id",
                      "description": "(Required) The unique ID of the workflow."
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "Circle-Token",
                    "value": "<API Key>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"id\": \"urn:uuid:124ba752-a2a5-940a-aa5d-3b3cca073190\",\n  \"name\": \"build-and-test\",\n  \"status\": \"on_hold\",\n  \"created_at\": \"1968-06-05T03:04:38.651Z\",\n  \"stopped_at\": \"1986-02-28T17:04:12.325Z\",\n  \"pipeline_id\": \"5034460f-c7c4-4c43-9457-de07e2029e7b\",\n  \"pipeline_number\": 25,\n  \"project_slug\": \"gh/CircleCI-Public/api-preview-docs\",\n  \"started_by\": \"786d3eb4-b591-992a-0b04-fbef04363393\",\n  \"canceled_by\": \"urn:uuid:4e8b2156-45e1-4596-95e7-1ee603ae1f5f\",\n  \"errored_by\": \"51a25a84-da5c-923f-e647-88e00b0f5497\",\n  \"tag\": \"setup\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "5d965c6d-27fd-4a74-818d-eef7325b66ba",
              "name": "Error response.",
              "originalRequest": {
                "url": {
                  "path": [
                    "workflow",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<uuid>",
                      "key": "id",
                      "description": "(Required) The unique ID of the workflow."
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "Circle-Token",
                    "value": "<API Key>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"message\": \"laborum\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "a1170004-e7dc-49ac-be6a-ccb188cc137d",
          "name": "Approve a job",
          "request": {
            "name": "Approve a job",
            "description": {
              "content": "Approves a pending approval job in a workflow.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "workflow",
                ":id",
                "approve",
                ":approval_request_id"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<uuid>",
                  "key": "approval_request_id",
                  "description": "(Required) The ID of the job being approved."
                },
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<uuid>",
                  "key": "id",
                  "description": "(Required) The unique ID of the workflow."
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null
          },
          "response": [
            {
              "id": "30ba1b20-ee24-419a-9ca9-f95465157fdf",
              "name": "A confirmation message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "workflow",
                    ":id",
                    "approve",
                    ":approval_request_id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<uuid>",
                      "key": "approval_request_id",
                      "description": "(Required) The ID of the job being approved."
                    },
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<uuid>",
                      "key": "id",
                      "description": "(Required) The unique ID of the workflow."
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "Circle-Token",
                    "value": "<API Key>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {}
              },
              "status": "Accepted",
              "code": 202,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"message\": \"pariat\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "1e24bb62-35e3-4cea-99a7-c080c45fce0f",
              "name": "Error response.",
              "originalRequest": {
                "url": {
                  "path": [
                    "workflow",
                    ":id",
                    "approve",
                    ":approval_request_id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<uuid>",
                      "key": "approval_request_id",
                      "description": "(Required) The ID of the job being approved."
                    },
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<uuid>",
                      "key": "id",
                      "description": "(Required) The unique ID of the workflow."
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "Circle-Token",
                    "value": "<API Key>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"message\": \"laborum\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "87d48fde-8d6e-48f3-811e-6d9f2b4bcb7f",
          "name": "Cancel a workflow",
          "request": {
            "name": "Cancel a workflow",
            "description": {
              "content": "Cancels a running workflow.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "workflow",
                ":id",
                "cancel"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<uuid>",
                  "key": "id",
                  "description": "(Required) The unique ID of the workflow."
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null
          },
          "response": [
            {
              "id": "69f4d854-26b7-41c5-b787-522d01837ef1",
              "name": "A confirmation message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "workflow",
                    ":id",
                    "cancel"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<uuid>",
                      "key": "id",
                      "description": "(Required) The unique ID of the workflow."
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "Circle-Token",
                    "value": "<API Key>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {}
              },
              "status": "Accepted",
              "code": 202,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"message\": \"pariat\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "959d140d-ee7d-4f4b-9881-d798fe731a56",
              "name": "Error response.",
              "originalRequest": {
                "url": {
                  "path": [
                    "workflow",
                    ":id",
                    "cancel"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<uuid>",
                      "key": "id",
                      "description": "(Required) The unique ID of the workflow."
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "Circle-Token",
                    "value": "<API Key>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"message\": \"laborum\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "81eed5d7-2acf-4892-9aef-a7d3156a487a",
          "name": "Get a workflow's jobs",
          "request": {
            "name": "Get a workflow's jobs",
            "description": {
              "content": "Returns a sequence of jobs for a workflow.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "workflow",
                ":id",
                "job"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<uuid>",
                  "key": "id",
                  "description": "(Required) The unique ID of the workflow."
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "c651c558-8cfc-4562-8f9d-19141f59e6eb",
              "name": "A paginated sequence of jobs.",
              "originalRequest": {
                "url": {
                  "path": [
                    "workflow",
                    ":id",
                    "job"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<uuid>",
                      "key": "id",
                      "description": "(Required) The unique ID of the workflow."
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "Circle-Token",
                    "value": "<API Key>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"items\": [\n    {\n      \"id\": \"48adb36e-0260-c4ab-39f2-69585865a528\",\n      \"name\": \"cillum sunt\",\n      \"started_at\": \"2012-12-07T23:07:21.231Z\",\n      \"dependencies\": [\n        \"32abce5d-37da-630d-d4f4-836b35672b57\",\n        \"urn:uuid:22297fce-5518-0038-309e-f483faab7a44\"\n      ],\n      \"project_slug\": \"gh/CircleCI-Public/api-preview-docs\",\n      \"status\": \"infrastructure_fail\",\n      \"type\": \"approval\",\n      \"canceled_by\": \"6336916d-716d-4d35-79cb-a498de32f51b\",\n      \"job_number\": 1,\n      \"approved_by\": \"urn:uuid:0dd99548-fbab-9677-a488-39f1a626e8af\",\n      \"requires\": {\n        \"nostrud8\": [\n          \"failed\",\n          \"failed\"\n        ],\n        \"nisifd\": [\n          \"success\",\n          \"canceled\"\n        ]\n      },\n      \"stopped_at\": \"1950-01-10T18:11:33.572Z\",\n      \"approval_request_id\": \"urn:uuid:585674b5-4f04-96b2-316d-c159b6bcff4c\"\n    },\n    {\n      \"id\": \"urn:uuid:d930e7cc-74e8-691d-5e9d-ae86f057c2dc\",\n      \"name\": \"cupidatat occaecat ipsum exercitation labore\",\n      \"started_at\": \"1997-11-15T21:06:44.956Z\",\n      \"dependencies\": [\n        \"473daa30-0fcb-d404-14c4-a89be71878b6\",\n        \"urn:uuid:7d4c52ad-7604-d4de-a0fc-a3708fba5162\"\n      ],\n      \"project_slug\": \"gh/CircleCI-Public/api-preview-docs\",\n      \"status\": \"infrastructure_fail\",\n      \"type\": \"approval\",\n      \"canceled_by\": \"ac3cc633-9b67-a641-b89c-82caa13736b2\",\n      \"job_number\": 1,\n      \"approved_by\": \"urn:uuid:48c4631d-84b1-01c1-eaea-778b93838f71\",\n      \"requires\": {\n        \"enim_8b\": [\n          \"canceled\",\n          \"success\"\n        ]\n      },\n      \"stopped_at\": \"1955-04-28T10:03:58.914Z\",\n      \"approval_request_id\": \"726fa9d2-dc76-fa95-3532-f99ffec56abc\"\n    }\n  ],\n  \"next_page_token\": \"velit ex proident\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "2eb3b4c8-030c-4edd-9687-f16056b8230e",
              "name": "Error response.",
              "originalRequest": {
                "url": {
                  "path": [
                    "workflow",
                    ":id",
                    "job"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<uuid>",
                      "key": "id",
                      "description": "(Required) The unique ID of the workflow."
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "Circle-Token",
                    "value": "<API Key>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"message\": \"laborum\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "bef7452b-14eb-454e-81e4-470069bef4f8",
          "name": "Rerun a workflow",
          "request": {
            "name": "Rerun a workflow",
            "description": {
              "content": "Reruns a workflow.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "workflow",
                ":id",
                "rerun"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<uuid>",
                  "key": "id",
                  "description": "(Required) The unique ID of the workflow."
                }
              ]
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n  \"enable_ssh\": \"<boolean>\",\n  \"from_failed\": \"<boolean>\",\n  \"jobs\": [\n    \"<uuid>\",\n    \"<uuid>\"\n  ],\n  \"sparse_tree\": \"<boolean>\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "id": "d914ff50-155d-4aba-99f4-c81eba2be434",
              "name": "A confirmation message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "workflow",
                    ":id",
                    "rerun"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<uuid>",
                      "key": "id",
                      "description": "(Required) The unique ID of the workflow."
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "Circle-Token",
                    "value": "<API Key>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"enable_ssh\": false,\n  \"from_failed\": false,\n  \"jobs\": [\n    \"c65b68ef-e73b-4bf2-be9a-7a322a9df150\",\n    \"5e957edd-5e8c-4985-9178-5d0d69561822\"\n  ],\n  \"sparse_tree\": false\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Accepted",
              "code": 202,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"workflow_id\": \"0e53027b-521a-4c40-9042-47e72b3c63a3\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "fbfc6be4-32da-4bd4-a37c-9e133b9e3260",
              "name": "Error response.",
              "originalRequest": {
                "url": {
                  "path": [
                    "workflow",
                    ":id",
                    "rerun"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<uuid>",
                      "key": "id",
                      "description": "(Required) The unique ID of the workflow."
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "Circle-Token",
                    "value": "<API Key>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"enable_ssh\": false,\n  \"from_failed\": false,\n  \"jobs\": [\n    \"c65b68ef-e73b-4bf2-be9a-7a322a9df150\",\n    \"5e957edd-5e8c-4985-9178-5d0d69561822\"\n  ],\n  \"sparse_tree\": false\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"message\": \"laborum\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "15c9cbbc-916d-4766-8400-fe3f1017fe47",
      "name": "org/{orgID}",
      "item": [
        {
          "id": "50e332a6-b230-46cf-8cd6-694aff320323",
          "name": "oidc-custom-claims",
          "item": [
            {
              "id": "9834bae2-b7ff-4b54-aa07-13cb622f083f",
              "name": "Delete org-level claims",
              "request": {
                "name": "Delete org-level claims",
                "description": {
                  "content": "Deletes org-level custom claims of OIDC identity tokens",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "org",
                    ":orgID",
                    "oidc-custom-claims"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "disabled": false,
                      "key": "claims",
                      "value": "<string>",
                      "description": "(Required) comma separated list of claims to delete. Valid values are \"audience\" and \"ttl\"."
                    }
                  ],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<uuid>",
                      "key": "orgID",
                      "description": "(Required) "
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "DELETE",
                "auth": null
              },
              "response": [
                {
                  "id": "694c3ae8-ca2e-4d95-aa80-015b815a3178",
                  "name": "Claims successfully deleted.",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "org",
                        ":orgID",
                        "oidc-custom-claims"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "claims",
                          "value": "<string>"
                        }
                      ],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<uuid>",
                          "key": "orgID",
                          "description": "(Required) "
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "Added as a part of security scheme: apikey",
                          "type": "text/plain"
                        },
                        "key": "Circle-Token",
                        "value": "<API Key>"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "DELETE",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n  \"org_id\": \"urn:uuid:bef068d2-db2c-904a-6d34-7e2b6dd3b3e0\",\n  \"audience\": [\n    \"\",\n    \"laboris\"\n  ],\n  \"audience_updated_at\": \"1988-01-24T10:30:00.071Z\",\n  \"project_id\": \"urn:uuid:fc751666-db31-71fb-d726-f716a31dabc3\",\n  \"ttl\": \"0ms969804514s234065d\",\n  \"ttl_updated_at\": \"1972-10-17T18:37:42.685Z\"\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json"
                },
                {
                  "id": "25457f8f-9e86-468a-ab3b-e069a965f6a1",
                  "name": "The request is malformed (e.g, a given path parameter is invalid)\n",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "org",
                        ":orgID",
                        "oidc-custom-claims"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "claims",
                          "value": "<string>"
                        }
                      ],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<uuid>",
                          "key": "orgID",
                          "description": "(Required) "
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "Added as a part of security scheme: apikey",
                          "type": "text/plain"
                        },
                        "key": "Circle-Token",
                        "value": "<API Key>"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "DELETE",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n  \"error\": \"OwnerID: must be a valid UUID.\"\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json"
                },
                {
                  "id": "9d225091-be1b-400a-b269-c0c9bfbef0de",
                  "name": "The user is forbidden from making this request\n",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "org",
                        ":orgID",
                        "oidc-custom-claims"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "claims",
                          "value": "<string>"
                        }
                      ],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<uuid>",
                          "key": "orgID",
                          "description": "(Required) "
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "Added as a part of security scheme: apikey",
                          "type": "text/plain"
                        },
                        "key": "Circle-Token",
                        "value": "<API Key>"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "DELETE",
                    "body": {}
                  },
                  "status": "Forbidden",
                  "code": 403,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n  \"error\": \"Forbidden\"\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json"
                },
                {
                  "id": "0a4e92e2-beda-465e-8cc2-4e63a862e443",
                  "name": "Something unexpected happened on the server.",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "org",
                        ":orgID",
                        "oidc-custom-claims"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "claims",
                          "value": "<string>"
                        }
                      ],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<uuid>",
                          "key": "orgID",
                          "description": "(Required) "
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "Added as a part of security scheme: apikey",
                          "type": "text/plain"
                        },
                        "key": "Circle-Token",
                        "value": "<API Key>"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "DELETE",
                    "body": {}
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n  \"error\": \"internal server error\"\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json"
                }
              ],
              "event": [],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              }
            },
            {
              "id": "91923f7c-8631-4feb-af69-ff81cf1dfd16",
              "name": "Get org-level claims",
              "request": {
                "name": "Get org-level claims",
                "description": {
                  "content": "Fetches org-level custom claims of OIDC identity tokens",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "org",
                    ":orgID",
                    "oidc-custom-claims"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<uuid>",
                      "key": "orgID",
                      "description": "(Required) "
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "auth": null
              },
              "response": [
                {
                  "id": "ee775ab9-c303-4255-9f91-8ba91a691b02",
                  "name": "Claims successfully fetched.",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "org",
                        ":orgID",
                        "oidc-custom-claims"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<uuid>",
                          "key": "orgID",
                          "description": "(Required) "
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "Added as a part of security scheme: apikey",
                          "type": "text/plain"
                        },
                        "key": "Circle-Token",
                        "value": "<API Key>"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n  \"org_id\": \"urn:uuid:b8bf0aa8-fdcf-42d1-8ec5-63d8bde731ea\",\n  \"audience\": [\n    \"mollit des\",\n    \"dolore mollit qui\"\n  ],\n  \"audience_updated_at\": \"1953-05-04T12:06:53.632Z\",\n  \"project_id\": \"222d347a-bc3e-023a-a1a0-2a35c5ea9aa3\",\n  \"ttl\": \"3464h316219w7277h40899642w13949s\",\n  \"ttl_updated_at\": \"1989-04-21T17:15:22.677Z\"\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json"
                },
                {
                  "id": "49ede19a-52c0-4f7f-8aa5-79d1af8746a0",
                  "name": "The request is malformed (e.g, a given path parameter is invalid)\n",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "org",
                        ":orgID",
                        "oidc-custom-claims"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<uuid>",
                          "key": "orgID",
                          "description": "(Required) "
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "Added as a part of security scheme: apikey",
                          "type": "text/plain"
                        },
                        "key": "Circle-Token",
                        "value": "<API Key>"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n  \"error\": \"OwnerID: must be a valid UUID.\"\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json"
                },
                {
                  "id": "188d818f-64c2-4c4a-ae78-26e6bb20b6cd",
                  "name": "The user is forbidden from making this request\n",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "org",
                        ":orgID",
                        "oidc-custom-claims"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<uuid>",
                          "key": "orgID",
                          "description": "(Required) "
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "Added as a part of security scheme: apikey",
                          "type": "text/plain"
                        },
                        "key": "Circle-Token",
                        "value": "<API Key>"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Forbidden",
                  "code": 403,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n  \"error\": \"Forbidden\"\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json"
                },
                {
                  "id": "2ec04699-12e8-4027-8c85-91900b83f200",
                  "name": "Something unexpected happened on the server.",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "org",
                        ":orgID",
                        "oidc-custom-claims"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<uuid>",
                          "key": "orgID",
                          "description": "(Required) "
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "Added as a part of security scheme: apikey",
                          "type": "text/plain"
                        },
                        "key": "Circle-Token",
                        "value": "<API Key>"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n  \"error\": \"internal server error\"\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json"
                }
              ],
              "event": [],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              }
            },
            {
              "id": "60f7e413-e050-4be7-828d-c9c14af11c21",
              "name": "Patch org-level claims",
              "request": {
                "name": "Patch org-level claims",
                "description": {
                  "content": "Creates/Updates org-level custom claims of OIDC identity tokens",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "org",
                    ":orgID",
                    "oidc-custom-claims"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<uuid>",
                      "key": "orgID",
                      "description": "(Required) "
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "PATCH",
                "auth": null,
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"audience\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"ttl\": \"<string>\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [
                {
                  "id": "5301eddb-f85b-48e5-b568-0a2f1e2541fb",
                  "name": "Claims successfully patched.",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "org",
                        ":orgID",
                        "oidc-custom-claims"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<uuid>",
                          "key": "orgID",
                          "description": "(Required) "
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "Added as a part of security scheme: apikey",
                          "type": "text/plain"
                        },
                        "key": "Circle-Token",
                        "value": "<API Key>"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "PATCH",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"audience\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"ttl\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n  \"org_id\": \"f9b5c563-60d7-5a96-afae-292ab44e5fdc\",\n  \"audience\": [\n    \"ut aliqua in\",\n    \"ad\"\n  ],\n  \"audience_updated_at\": \"2003-12-25T21:48:56.374Z\",\n  \"project_id\": \"032c2c23-ceb7-ba3b-801c-daab90d525f1\",\n  \"ttl\": \"<string>\",\n  \"ttl_updated_at\": \"1974-03-15T08:13:10.389Z\"\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json"
                },
                {
                  "id": "9a05c7a0-0840-41ad-905d-4fd1eec78c59",
                  "name": "The request is malformed (e.g, a given path parameter is invalid)\n",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "org",
                        ":orgID",
                        "oidc-custom-claims"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<uuid>",
                          "key": "orgID",
                          "description": "(Required) "
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "Added as a part of security scheme: apikey",
                          "type": "text/plain"
                        },
                        "key": "Circle-Token",
                        "value": "<API Key>"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "PATCH",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"audience\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"ttl\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n  \"error\": \"OwnerID: must be a valid UUID.\"\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json"
                },
                {
                  "id": "251cc7d7-7cd7-45c5-9d56-509cf6d721ed",
                  "name": "The user is forbidden from making this request\n",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "org",
                        ":orgID",
                        "oidc-custom-claims"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<uuid>",
                          "key": "orgID",
                          "description": "(Required) "
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "Added as a part of security scheme: apikey",
                          "type": "text/plain"
                        },
                        "key": "Circle-Token",
                        "value": "<API Key>"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "PATCH",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"audience\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"ttl\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    }
                  },
                  "status": "Forbidden",
                  "code": 403,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n  \"error\": \"Forbidden\"\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json"
                },
                {
                  "id": "d62abd90-e252-4e19-b061-49e9401e847b",
                  "name": "Something unexpected happened on the server.",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "org",
                        ":orgID",
                        "oidc-custom-claims"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<uuid>",
                          "key": "orgID",
                          "description": "(Required) "
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "Added as a part of security scheme: apikey",
                          "type": "text/plain"
                        },
                        "key": "Circle-Token",
                        "value": "<API Key>"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "PATCH",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"audience\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"ttl\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n  \"error\": \"internal server error\"\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json"
                }
              ],
              "event": [],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              }
            }
          ],
          "event": []
        },
        {
          "id": "ca00e259-b967-402f-a510-a0a606a96cfd",
          "name": "project/{projectID}/oidc-custom-claims",
          "item": [
            {
              "id": "397971ea-2270-4df1-b8a3-5a8f75dcc89b",
              "name": "Delete project-level claims",
              "request": {
                "name": "Delete project-level claims",
                "description": {
                  "content": "Deletes project-level custom claims of OIDC identity tokens",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "org",
                    ":orgID",
                    "project",
                    ":projectID",
                    "oidc-custom-claims"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "disabled": false,
                      "key": "claims",
                      "value": "<string>",
                      "description": "(Required) comma separated list of claims to delete. Valid values are \"audience\" and \"ttl\"."
                    }
                  ],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<uuid>",
                      "key": "orgID",
                      "description": "(Required) "
                    },
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<uuid>",
                      "key": "projectID",
                      "description": "(Required) "
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "DELETE",
                "auth": null
              },
              "response": [
                {
                  "id": "6e88557c-fa0b-4bbc-a8b1-ce5b28d8d5d0",
                  "name": "Claims successfully deleted.",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "org",
                        ":orgID",
                        "project",
                        ":projectID",
                        "oidc-custom-claims"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "claims",
                          "value": "<string>"
                        }
                      ],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<uuid>",
                          "key": "orgID",
                          "description": "(Required) "
                        },
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<uuid>",
                          "key": "projectID",
                          "description": "(Required) "
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "Added as a part of security scheme: apikey",
                          "type": "text/plain"
                        },
                        "key": "Circle-Token",
                        "value": "<API Key>"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "DELETE",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n  \"org_id\": \"f9b5c563-60d7-5a96-afae-292ab44e5fdc\",\n  \"audience\": [\n    \"ut aliqua in\",\n    \"ad\"\n  ],\n  \"audience_updated_at\": \"2003-12-25T21:48:56.374Z\",\n  \"project_id\": \"032c2c23-ceb7-ba3b-801c-daab90d525f1\",\n  \"ttl\": \"<string>\",\n  \"ttl_updated_at\": \"1974-03-15T08:13:10.389Z\"\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json"
                },
                {
                  "id": "35a699f2-56e6-465b-974c-686f6ed6ac59",
                  "name": "The request is malformed (e.g, a given path parameter is invalid)\n",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "org",
                        ":orgID",
                        "project",
                        ":projectID",
                        "oidc-custom-claims"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "claims",
                          "value": "<string>"
                        }
                      ],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<uuid>",
                          "key": "orgID",
                          "description": "(Required) "
                        },
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<uuid>",
                          "key": "projectID",
                          "description": "(Required) "
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "Added as a part of security scheme: apikey",
                          "type": "text/plain"
                        },
                        "key": "Circle-Token",
                        "value": "<API Key>"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "DELETE",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n  \"error\": \"OwnerID: must be a valid UUID.\"\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json"
                },
                {
                  "id": "5907fc2b-6bdb-4a58-9169-b992ca037bcd",
                  "name": "The user is forbidden from making this request\n",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "org",
                        ":orgID",
                        "project",
                        ":projectID",
                        "oidc-custom-claims"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "claims",
                          "value": "<string>"
                        }
                      ],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<uuid>",
                          "key": "orgID",
                          "description": "(Required) "
                        },
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<uuid>",
                          "key": "projectID",
                          "description": "(Required) "
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "Added as a part of security scheme: apikey",
                          "type": "text/plain"
                        },
                        "key": "Circle-Token",
                        "value": "<API Key>"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "DELETE",
                    "body": {}
                  },
                  "status": "Forbidden",
                  "code": 403,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n  \"error\": \"Forbidden\"\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json"
                },
                {
                  "id": "312a757c-9b2e-4ae7-8752-0621e669738a",
                  "name": "Something unexpected happened on the server.",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "org",
                        ":orgID",
                        "project",
                        ":projectID",
                        "oidc-custom-claims"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "claims",
                          "value": "<string>"
                        }
                      ],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<uuid>",
                          "key": "orgID",
                          "description": "(Required) "
                        },
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<uuid>",
                          "key": "projectID",
                          "description": "(Required) "
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "Added as a part of security scheme: apikey",
                          "type": "text/plain"
                        },
                        "key": "Circle-Token",
                        "value": "<API Key>"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "DELETE",
                    "body": {}
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n  \"error\": \"internal server error\"\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json"
                }
              ],
              "event": [],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              }
            },
            {
              "id": "2630c19c-70be-4eb6-91e4-6cd7b88d3c8e",
              "name": "Get project-level claims",
              "request": {
                "name": "Get project-level claims",
                "description": {
                  "content": "Fetches project-level custom claims of OIDC identity tokens",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "org",
                    ":orgID",
                    "project",
                    ":projectID",
                    "oidc-custom-claims"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<uuid>",
                      "key": "orgID",
                      "description": "(Required) "
                    },
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<uuid>",
                      "key": "projectID",
                      "description": "(Required) "
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "auth": null
              },
              "response": [
                {
                  "id": "f684f041-cfe9-4374-a488-a80118848f15",
                  "name": "Claims successfully fetched.",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "org",
                        ":orgID",
                        "project",
                        ":projectID",
                        "oidc-custom-claims"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<uuid>",
                          "key": "orgID",
                          "description": "(Required) "
                        },
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<uuid>",
                          "key": "projectID",
                          "description": "(Required) "
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "Added as a part of security scheme: apikey",
                          "type": "text/plain"
                        },
                        "key": "Circle-Token",
                        "value": "<API Key>"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n  \"org_id\": \"f9b5c563-60d7-5a96-afae-292ab44e5fdc\",\n  \"audience\": [\n    \"ut aliqua in\",\n    \"ad\"\n  ],\n  \"audience_updated_at\": \"2003-12-25T21:48:56.374Z\",\n  \"project_id\": \"032c2c23-ceb7-ba3b-801c-daab90d525f1\",\n  \"ttl\": \"<string>\",\n  \"ttl_updated_at\": \"1974-03-15T08:13:10.389Z\"\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json"
                },
                {
                  "id": "6c10db6c-0d70-466c-9324-a56fed3e4293",
                  "name": "The request is malformed (e.g, a given path parameter is invalid)\n",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "org",
                        ":orgID",
                        "project",
                        ":projectID",
                        "oidc-custom-claims"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<uuid>",
                          "key": "orgID",
                          "description": "(Required) "
                        },
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<uuid>",
                          "key": "projectID",
                          "description": "(Required) "
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "Added as a part of security scheme: apikey",
                          "type": "text/plain"
                        },
                        "key": "Circle-Token",
                        "value": "<API Key>"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n  \"error\": \"OwnerID: must be a valid UUID.\"\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json"
                },
                {
                  "id": "c0c1de9c-37dc-47db-a5c6-b5fc2d370753",
                  "name": "The user is forbidden from making this request\n",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "org",
                        ":orgID",
                        "project",
                        ":projectID",
                        "oidc-custom-claims"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<uuid>",
                          "key": "orgID",
                          "description": "(Required) "
                        },
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<uuid>",
                          "key": "projectID",
                          "description": "(Required) "
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "Added as a part of security scheme: apikey",
                          "type": "text/plain"
                        },
                        "key": "Circle-Token",
                        "value": "<API Key>"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Forbidden",
                  "code": 403,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n  \"error\": \"Forbidden\"\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json"
                },
                {
                  "id": "b3ebbef2-3350-4e5b-b49b-b82c118edd37",
                  "name": "Something unexpected happened on the server.",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "org",
                        ":orgID",
                        "project",
                        ":projectID",
                        "oidc-custom-claims"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<uuid>",
                          "key": "orgID",
                          "description": "(Required) "
                        },
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<uuid>",
                          "key": "projectID",
                          "description": "(Required) "
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "Added as a part of security scheme: apikey",
                          "type": "text/plain"
                        },
                        "key": "Circle-Token",
                        "value": "<API Key>"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n  \"error\": \"internal server error\"\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json"
                }
              ],
              "event": [],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              }
            },
            {
              "id": "7f6c67db-ba40-40f2-a703-619d08c1d8f8",
              "name": "Patch project-level claims",
              "request": {
                "name": "Patch project-level claims",
                "description": {
                  "content": "Creates/Updates project-level custom claims of OIDC identity tokens",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "org",
                    ":orgID",
                    "project",
                    ":projectID",
                    "oidc-custom-claims"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<uuid>",
                      "key": "orgID",
                      "description": "(Required) "
                    },
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<uuid>",
                      "key": "projectID",
                      "description": "(Required) "
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "PATCH",
                "auth": null,
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"audience\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"ttl\": \"<string>\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [
                {
                  "id": "b41dfc37-adc4-4f1d-8a08-2b6d272d8c93",
                  "name": "Claims successfully patched.",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "org",
                        ":orgID",
                        "project",
                        ":projectID",
                        "oidc-custom-claims"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<uuid>",
                          "key": "orgID",
                          "description": "(Required) "
                        },
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<uuid>",
                          "key": "projectID",
                          "description": "(Required) "
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "Added as a part of security scheme: apikey",
                          "type": "text/plain"
                        },
                        "key": "Circle-Token",
                        "value": "<API Key>"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "PATCH",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"audience\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"ttl\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n  \"org_id\": \"f9b5c563-60d7-5a96-afae-292ab44e5fdc\",\n  \"audience\": [\n    \"ut aliqua in\",\n    \"ad\"\n  ],\n  \"audience_updated_at\": \"2003-12-25T21:48:56.374Z\",\n  \"project_id\": \"032c2c23-ceb7-ba3b-801c-daab90d525f1\",\n  \"ttl\": \"<string>\",\n  \"ttl_updated_at\": \"1974-03-15T08:13:10.389Z\"\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json"
                },
                {
                  "id": "aeb02706-b057-4a5c-8fba-55ad73cee800",
                  "name": "The request is malformed (e.g, a given path parameter is invalid)\n",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "org",
                        ":orgID",
                        "project",
                        ":projectID",
                        "oidc-custom-claims"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<uuid>",
                          "key": "orgID",
                          "description": "(Required) "
                        },
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<uuid>",
                          "key": "projectID",
                          "description": "(Required) "
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "Added as a part of security scheme: apikey",
                          "type": "text/plain"
                        },
                        "key": "Circle-Token",
                        "value": "<API Key>"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "PATCH",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"audience\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"ttl\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n  \"error\": \"OwnerID: must be a valid UUID.\"\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json"
                },
                {
                  "id": "7f589846-85ab-4de0-a8cd-1186a537f3bd",
                  "name": "The user is forbidden from making this request\n",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "org",
                        ":orgID",
                        "project",
                        ":projectID",
                        "oidc-custom-claims"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<uuid>",
                          "key": "orgID",
                          "description": "(Required) "
                        },
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<uuid>",
                          "key": "projectID",
                          "description": "(Required) "
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "Added as a part of security scheme: apikey",
                          "type": "text/plain"
                        },
                        "key": "Circle-Token",
                        "value": "<API Key>"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "PATCH",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"audience\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"ttl\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    }
                  },
                  "status": "Forbidden",
                  "code": 403,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n  \"error\": \"Forbidden\"\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json"
                },
                {
                  "id": "038151fe-61ff-4c3d-bb8e-f0a65b1dc2f9",
                  "name": "Something unexpected happened on the server.",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "org",
                        ":orgID",
                        "project",
                        ":projectID",
                        "oidc-custom-claims"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<uuid>",
                          "key": "orgID",
                          "description": "(Required) "
                        },
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<uuid>",
                          "key": "projectID",
                          "description": "(Required) "
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "Added as a part of security scheme: apikey",
                          "type": "text/plain"
                        },
                        "key": "Circle-Token",
                        "value": "<API Key>"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "PATCH",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"audience\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"ttl\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n  \"error\": \"internal server error\"\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json"
                }
              ],
              "event": [],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              }
            }
          ],
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "a5ffeb93-b7aa-42ae-86ea-dc36b9adb474",
      "name": "owner/{ownerID}/context/{context}",
      "item": [
        {
          "id": "d3879e86-3611-4f30-8bac-7b787adb9019",
          "name": "decision",
          "item": [
            {
              "id": "be63f0fb-3d58-4ef3-9320-e4a3e7cc3d97",
              "name": "Retrieves the owner's decision audit logs.",
              "request": {
                "name": "Retrieves the owner's decision audit logs.",
                "description": {
                  "content": "This endpoint will return a list of decision audit logs that were made using this owner's policies.",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "owner",
                    ":ownerID",
                    "context",
                    ":context",
                    "decision"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "disabled": false,
                      "key": "status",
                      "value": "<string>",
                      "description": "Return decisions matching this decision status."
                    },
                    {
                      "disabled": false,
                      "key": "after",
                      "value": "<dateTime>",
                      "description": "Return decisions made after this date."
                    },
                    {
                      "disabled": false,
                      "key": "before",
                      "value": "<dateTime>",
                      "description": "Return decisions made before this date."
                    },
                    {
                      "disabled": false,
                      "key": "branch",
                      "value": "<string>",
                      "description": "Return decisions made on this branch."
                    },
                    {
                      "disabled": false,
                      "key": "project_id",
                      "value": "<string>",
                      "description": "Return decisions made for this project."
                    },
                    {
                      "disabled": false,
                      "key": "build_number",
                      "value": "<string>",
                      "description": "Return decisions made for this build number."
                    },
                    {
                      "disabled": false,
                      "key": "offset",
                      "value": "<integer>",
                      "description": "Sets the offset when retrieving the decisions, for paging."
                    }
                  ],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "ownerID",
                      "description": "(Required) "
                    },
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "context",
                      "description": "(Required) "
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "auth": null
              },
              "response": [
                {
                  "id": "7f679c22-8a1d-444a-8785-46b9db0d4fca",
                  "name": "Decision logs successfully retrieved.",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "owner",
                        ":ownerID",
                        "context",
                        ":context",
                        "decision"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "status",
                          "value": "<string>"
                        },
                        {
                          "key": "after",
                          "value": "<dateTime>"
                        },
                        {
                          "key": "before",
                          "value": "<dateTime>"
                        },
                        {
                          "key": "branch",
                          "value": "<string>"
                        },
                        {
                          "key": "project_id",
                          "value": "<string>"
                        },
                        {
                          "key": "build_number",
                          "value": "<string>"
                        },
                        {
                          "key": "offset",
                          "value": "<integer>"
                        }
                      ],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "ownerID",
                          "description": "(Required) "
                        },
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "context",
                          "description": "(Required) "
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "Added as a part of security scheme: apikey",
                          "type": "text/plain"
                        },
                        "key": "Circle-Token",
                        "value": "<API Key>"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "[\n  {\n    \"created_at\": \"1947-04-06T23:34:14.111Z\",\n    \"decision\": {\n      \"status\": \"est deserunt\",\n      \"enabled_rules\": [\n        \"Duis est eu\",\n        \"eiusmod\"\n      ],\n      \"hard_failures\": [\n        {\n          \"rule\": \"in culpa sit\",\n          \"reason\": \"ipsum proident sint id Lorem\"\n        },\n        {\n          \"rule\": \"tempor in non eu\",\n          \"reason\": \"id\"\n        }\n      ],\n      \"reason\": \"elit Ut exercitation nostrud\",\n      \"soft_failures\": [\n        {\n          \"rule\": \"eiusmod labore\",\n          \"reason\": \"mollit ipsum eiusmod\"\n        },\n        {\n          \"rule\": \"ea in eu consequat\",\n          \"reason\": \"pariatur deserunt in aute\"\n        }\n      ]\n    },\n    \"id\": \"urn:uuid:06e7cb41-5ed5-c588-98e7-617be41042ba\",\n    \"metadata\": {\n      \"build_number\": 5292444,\n      \"project_id\": \"017732b9-a2fc-3fec-605e-9b780d88041e\",\n      \"ssh_rerun\": true,\n      \"vcs\": {\n        \"branch\": \"quis aute\",\n        \"origin_repository_url\": \"non veniam ullamco est in\",\n        \"release_tag\": \"in irure dolore\",\n        \"target_repository_url\": \"laboris enim anim\"\n      }\n    },\n    \"policies\": {\n      \"policy_name1\": \"1f40fc92da241694750979ee6cf582f2d5d7d28e18335de05abc54d0560e0f5302860c652bf08d560252aa5e74210546f369fbbbce8c12cfc7957b2652fe9a75\",\n      \"policy_name2\": \"5267768822ee624d48fce15ec5ca79cbd602cb7f4c2157a516556991f22ef8c7b5ef7b18d1ff41c59370efb0858651d44a936c11b7b144c48fe04df3c6a3e8da\"\n    },\n    \"time_taken_ms\": -68748425\n  },\n  {\n    \"created_at\": \"1990-08-31T04:54:39.423Z\",\n    \"decision\": {\n      \"status\": \"veniam deserunt labore non\",\n      \"enabled_rules\": [\n        \"irure cillum amet consectetur ut\",\n        \"dolore magna dolor\"\n      ],\n      \"hard_failures\": [\n        {\n          \"rule\": \"nisi ex in\",\n          \"reason\": \"commodo ut pariatur eiusmod\"\n        },\n        {\n          \"rule\": \"exercitation laborum in voluptate deserunt\",\n          \"reason\": \"eu elit enim fugiat\"\n        }\n      ],\n      \"reason\": \"dolor velit\",\n      \"soft_failures\": [\n        {\n          \"rule\": \"exercitation Excepteur\",\n          \"reason\": \"incididunt aliqua nulla\"\n        },\n        {\n          \"rule\": \"consequat\",\n          \"reason\": \"occaecat laboris ipsum mollit\"\n        }\n      ]\n    },\n    \"id\": \"3e48d7f5-8884-12e7-ae9f-abf1cea8d873\",\n    \"metadata\": {\n      \"build_number\": -41365901,\n      \"project_id\": \"urn:uuid:049af94f-fba1-9777-b4f5-851918ffab93\",\n      \"ssh_rerun\": true,\n      \"vcs\": {\n        \"branch\": \"tempor\",\n        \"origin_repository_url\": \"eiusmod Ut enim\",\n        \"release_tag\": \"id\",\n        \"target_repository_url\": \"ut \"\n      }\n    },\n    \"policies\": {\n      \"policy_name1\": \"1f40fc92da241694750979ee6cf582f2d5d7d28e18335de05abc54d0560e0f5302860c652bf08d560252aa5e74210546f369fbbbce8c12cfc7957b2652fe9a75\",\n      \"policy_name2\": \"5267768822ee624d48fce15ec5ca79cbd602cb7f4c2157a516556991f22ef8c7b5ef7b18d1ff41c59370efb0858651d44a936c11b7b144c48fe04df3c6a3e8da\"\n    },\n    \"time_taken_ms\": -43011628\n  }\n]",
                  "cookie": [],
                  "_postman_previewlanguage": "json"
                },
                {
                  "id": "5f1effa5-bc23-4246-a8ec-0c3906ac3690",
                  "name": "The request is malformed (e.g, a given path parameter is invalid)\n",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "owner",
                        ":ownerID",
                        "context",
                        ":context",
                        "decision"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "status",
                          "value": "<string>"
                        },
                        {
                          "key": "after",
                          "value": "<dateTime>"
                        },
                        {
                          "key": "before",
                          "value": "<dateTime>"
                        },
                        {
                          "key": "branch",
                          "value": "<string>"
                        },
                        {
                          "key": "project_id",
                          "value": "<string>"
                        },
                        {
                          "key": "build_number",
                          "value": "<string>"
                        },
                        {
                          "key": "offset",
                          "value": "<integer>"
                        }
                      ],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "ownerID",
                          "description": "(Required) "
                        },
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "context",
                          "description": "(Required) "
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "Added as a part of security scheme: apikey",
                          "type": "text/plain"
                        },
                        "key": "Circle-Token",
                        "value": "<API Key>"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n  \"error\": \"OwnerID: must be a valid UUID.\"\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json"
                },
                {
                  "id": "b75fa5dc-bd62-485f-a78c-a5c5b392475f",
                  "name": "The request is unauthorized\n",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "owner",
                        ":ownerID",
                        "context",
                        ":context",
                        "decision"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "status",
                          "value": "<string>"
                        },
                        {
                          "key": "after",
                          "value": "<dateTime>"
                        },
                        {
                          "key": "before",
                          "value": "<dateTime>"
                        },
                        {
                          "key": "branch",
                          "value": "<string>"
                        },
                        {
                          "key": "project_id",
                          "value": "<string>"
                        },
                        {
                          "key": "build_number",
                          "value": "<string>"
                        },
                        {
                          "key": "offset",
                          "value": "<integer>"
                        }
                      ],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "ownerID",
                          "description": "(Required) "
                        },
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "context",
                          "description": "(Required) "
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "Added as a part of security scheme: apikey",
                          "type": "text/plain"
                        },
                        "key": "Circle-Token",
                        "value": "<API Key>"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Unauthorized",
                  "code": 401,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n  \"error\": \"Unauthorized\"\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json"
                },
                {
                  "id": "3bbf67f6-a598-4976-b0c2-f8865c5cc23c",
                  "name": "The user is forbidden from making this request\n",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "owner",
                        ":ownerID",
                        "context",
                        ":context",
                        "decision"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "status",
                          "value": "<string>"
                        },
                        {
                          "key": "after",
                          "value": "<dateTime>"
                        },
                        {
                          "key": "before",
                          "value": "<dateTime>"
                        },
                        {
                          "key": "branch",
                          "value": "<string>"
                        },
                        {
                          "key": "project_id",
                          "value": "<string>"
                        },
                        {
                          "key": "build_number",
                          "value": "<string>"
                        },
                        {
                          "key": "offset",
                          "value": "<integer>"
                        }
                      ],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "ownerID",
                          "description": "(Required) "
                        },
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "context",
                          "description": "(Required) "
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "Added as a part of security scheme: apikey",
                          "type": "text/plain"
                        },
                        "key": "Circle-Token",
                        "value": "<API Key>"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Forbidden",
                  "code": 403,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n  \"error\": \"Forbidden\"\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json"
                },
                {
                  "id": "7ebd7b95-617f-4d75-a7cf-61ac57cd410f",
                  "name": "Something unexpected happened on the server.",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "owner",
                        ":ownerID",
                        "context",
                        ":context",
                        "decision"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "status",
                          "value": "<string>"
                        },
                        {
                          "key": "after",
                          "value": "<dateTime>"
                        },
                        {
                          "key": "before",
                          "value": "<dateTime>"
                        },
                        {
                          "key": "branch",
                          "value": "<string>"
                        },
                        {
                          "key": "project_id",
                          "value": "<string>"
                        },
                        {
                          "key": "build_number",
                          "value": "<string>"
                        },
                        {
                          "key": "offset",
                          "value": "<integer>"
                        }
                      ],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "ownerID",
                          "description": "(Required) "
                        },
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "context",
                          "description": "(Required) "
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "Added as a part of security scheme: apikey",
                          "type": "text/plain"
                        },
                        "key": "Circle-Token",
                        "value": "<API Key>"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n  \"error\": \"unexpected server error\"\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json"
                }
              ],
              "event": [],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              }
            },
            {
              "id": "7f46b256-a4b6-46a7-8b0b-a54f8a96adde",
              "name": "Makes a decision",
              "request": {
                "name": "Makes a decision",
                "description": {
                  "content": "This endpoint will evaluate input data (config+metadata) against owner's stored policies and return a decision.",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "owner",
                    ":ownerID",
                    "context",
                    ":context",
                    "decision"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "ownerID",
                      "description": "(Required) "
                    },
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "context",
                      "description": "(Required) "
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "auth": null,
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"input\": \"<string>\",\n  \"metadata\": \"<object>\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [
                {
                  "id": "0ff6455f-0b96-4ad8-b64d-0d6a6c1fb2d2",
                  "name": "Decision rendered by applying the policy against the provided data. Response will be modeled by the data and rego processed.",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "owner",
                        ":ownerID",
                        "context",
                        ":context",
                        "decision"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "ownerID",
                          "description": "(Required) "
                        },
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "context",
                          "description": "(Required) "
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "Added as a part of security scheme: apikey",
                          "type": "text/plain"
                        },
                        "key": "Circle-Token",
                        "value": "<API Key>"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"input\": \"<string>\",\n  \"metadata\": \"<object>\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n  \"status\": \"eu sunt do\",\n  \"enabled_rules\": [\n    \"dolor reprehenderit\",\n    \"tempor commodo ut ex\"\n  ],\n  \"hard_failures\": [\n    {\n      \"rule\": \"cillum consequat mollit amet eiusmod\",\n      \"reason\": \"veniam in\"\n    },\n    {\n      \"rule\": \"tempor\",\n      \"reason\": \"voluptate et adipisicing\"\n    }\n  ],\n  \"reason\": \"ad tempor\",\n  \"soft_failures\": [\n    {\n      \"rule\": \"cillum dolore cupidatat\",\n      \"reason\": \"sint exercitation dolor ea\"\n    },\n    {\n      \"rule\": \"fugiat\",\n      \"reason\": \"tempor laborum cupidatat\"\n    }\n  ]\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json"
                },
                {
                  "id": "eee62a7c-f13e-46f3-9534-ba1e697352c7",
                  "name": "The request is malformed\n",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "owner",
                        ":ownerID",
                        "context",
                        ":context",
                        "decision"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "ownerID",
                          "description": "(Required) "
                        },
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "context",
                          "description": "(Required) "
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "Added as a part of security scheme: apikey",
                          "type": "text/plain"
                        },
                        "key": "Circle-Token",
                        "value": "<API Key>"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"input\": \"<string>\",\n  \"metadata\": \"<object>\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n  \"error\": \"context: must be a valid value.\"\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json"
                },
                {
                  "id": "1342e2e7-5e97-4ae7-b10c-869bc2056528",
                  "name": "The request is unauthorized\n",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "owner",
                        ":ownerID",
                        "context",
                        ":context",
                        "decision"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "ownerID",
                          "description": "(Required) "
                        },
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "context",
                          "description": "(Required) "
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "Added as a part of security scheme: apikey",
                          "type": "text/plain"
                        },
                        "key": "Circle-Token",
                        "value": "<API Key>"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"input\": \"<string>\",\n  \"metadata\": \"<object>\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    }
                  },
                  "status": "Unauthorized",
                  "code": 401,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n  \"error\": \"Unauthorized.\"\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json"
                },
                {
                  "id": "69d26589-e514-4733-bee0-58641cab1abe",
                  "name": "Something unexpected happened on the server.",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "owner",
                        ":ownerID",
                        "context",
                        ":context",
                        "decision"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "ownerID",
                          "description": "(Required) "
                        },
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "context",
                          "description": "(Required) "
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "Added as a part of security scheme: apikey",
                          "type": "text/plain"
                        },
                        "key": "Circle-Token",
                        "value": "<API Key>"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"input\": \"<string>\",\n  \"metadata\": \"<object>\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n  \"error\": \"There was an error processing your request.\"\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json"
                }
              ],
              "event": [],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              }
            },
            {
              "id": "df3c0bcd-2c56-4c8d-83e5-ae12bb3b3762",
              "name": "settings",
              "item": [
                {
                  "id": "5dd91726-092f-4c7e-814d-c43426c1ecee",
                  "name": "Get the decision settings",
                  "request": {
                    "name": "Get the decision settings",
                    "description": {
                      "content": "This endpoint retrieves the current decision settings (eg enable/disable policy evaluation)",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "owner",
                        ":ownerID",
                        "context",
                        ":context",
                        "decision",
                        "settings"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "ownerID",
                          "description": "(Required) "
                        },
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "context",
                          "description": "(Required) "
                        }
                      ]
                    },
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "GET",
                    "auth": null
                  },
                  "response": [
                    {
                      "id": "fb25abea-bfca-4ab9-b622-e542cff618b7",
                      "name": "Decision settings successfully retrieved.",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "owner",
                            ":ownerID",
                            "context",
                            ":context",
                            "decision",
                            "settings"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "ownerID",
                              "description": "(Required) "
                            },
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "context",
                              "description": "(Required) "
                            }
                          ]
                        },
                        "header": [
                          {
                            "description": {
                              "content": "Added as a part of security scheme: apikey",
                              "type": "text/plain"
                            },
                            "key": "Circle-Token",
                            "value": "<API Key>"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "method": "GET",
                        "body": {}
                      },
                      "status": "OK",
                      "code": 200,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n  \"enabled\": true\n}",
                      "cookie": [],
                      "_postman_previewlanguage": "json"
                    },
                    {
                      "id": "b2c39c91-d2f8-4e36-8aff-b06e53bc16a2",
                      "name": "The request is malformed (e.g, a given path parameter is invalid)\n",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "owner",
                            ":ownerID",
                            "context",
                            ":context",
                            "decision",
                            "settings"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "ownerID",
                              "description": "(Required) "
                            },
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "context",
                              "description": "(Required) "
                            }
                          ]
                        },
                        "header": [
                          {
                            "description": {
                              "content": "Added as a part of security scheme: apikey",
                              "type": "text/plain"
                            },
                            "key": "Circle-Token",
                            "value": "<API Key>"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n  \"error\": \"OwnerID: must be a valid UUID.\"\n}",
                      "cookie": [],
                      "_postman_previewlanguage": "json"
                    },
                    {
                      "id": "0586f306-8fc0-4ced-bd21-951496e37be4",
                      "name": "The request is unauthorized\n",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "owner",
                            ":ownerID",
                            "context",
                            ":context",
                            "decision",
                            "settings"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "ownerID",
                              "description": "(Required) "
                            },
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "context",
                              "description": "(Required) "
                            }
                          ]
                        },
                        "header": [
                          {
                            "description": {
                              "content": "Added as a part of security scheme: apikey",
                              "type": "text/plain"
                            },
                            "key": "Circle-Token",
                            "value": "<API Key>"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Unauthorized",
                      "code": 401,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n  \"error\": \"Unauthorized\"\n}",
                      "cookie": [],
                      "_postman_previewlanguage": "json"
                    },
                    {
                      "id": "97176a0b-2999-45d3-9c36-851f6fc7af06",
                      "name": "The user is forbidden from making this request\n",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "owner",
                            ":ownerID",
                            "context",
                            ":context",
                            "decision",
                            "settings"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "ownerID",
                              "description": "(Required) "
                            },
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "context",
                              "description": "(Required) "
                            }
                          ]
                        },
                        "header": [
                          {
                            "description": {
                              "content": "Added as a part of security scheme: apikey",
                              "type": "text/plain"
                            },
                            "key": "Circle-Token",
                            "value": "<API Key>"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Forbidden",
                      "code": 403,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n  \"error\": \"Forbidden\"\n}",
                      "cookie": [],
                      "_postman_previewlanguage": "json"
                    },
                    {
                      "id": "d39bb346-a08d-410c-83e1-00256473bb74",
                      "name": "Something unexpected happened on the server.",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "owner",
                            ":ownerID",
                            "context",
                            ":context",
                            "decision",
                            "settings"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "ownerID",
                              "description": "(Required) "
                            },
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "context",
                              "description": "(Required) "
                            }
                          ]
                        },
                        "header": [
                          {
                            "description": {
                              "content": "Added as a part of security scheme: apikey",
                              "type": "text/plain"
                            },
                            "key": "Circle-Token",
                            "value": "<API Key>"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Internal Server Error",
                      "code": 500,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n  \"error\": \"unexpected server error\"\n}",
                      "cookie": [],
                      "_postman_previewlanguage": "json"
                    }
                  ],
                  "event": [],
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  }
                },
                {
                  "id": "34c4fdef-d784-491f-b91a-0abefb42134d",
                  "name": "Set the decision settings",
                  "request": {
                    "name": "Set the decision settings",
                    "description": {
                      "content": "This endpoint allows modifying decision settings (eg enable/disable policy evaluation)",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "owner",
                        ":ownerID",
                        "context",
                        ":context",
                        "decision",
                        "settings"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "ownerID",
                          "description": "(Required) "
                        },
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "context",
                          "description": "(Required) "
                        }
                      ]
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "PATCH",
                    "auth": null,
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"enabled\": \"<boolean>\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    }
                  },
                  "response": [
                    {
                      "id": "dfb41735-5767-4b6a-9654-72269eebb620",
                      "name": "Decision settings successfully set.",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "owner",
                            ":ownerID",
                            "context",
                            ":context",
                            "decision",
                            "settings"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "ownerID",
                              "description": "(Required) "
                            },
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "context",
                              "description": "(Required) "
                            }
                          ]
                        },
                        "header": [
                          {
                            "description": {
                              "content": "Added as a part of security scheme: apikey",
                              "type": "text/plain"
                            },
                            "key": "Circle-Token",
                            "value": "<API Key>"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "method": "PATCH",
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"enabled\": \"<boolean>\"\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n  \"enabled\": \"<boolean>\"\n}",
                      "cookie": [],
                      "_postman_previewlanguage": "json"
                    },
                    {
                      "id": "1e5f384d-f975-422c-bbe2-162bb330c4e4",
                      "name": "The request is malformed (e.g, a given path parameter is invalid)\n",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "owner",
                            ":ownerID",
                            "context",
                            ":context",
                            "decision",
                            "settings"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "ownerID",
                              "description": "(Required) "
                            },
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "context",
                              "description": "(Required) "
                            }
                          ]
                        },
                        "header": [
                          {
                            "description": {
                              "content": "Added as a part of security scheme: apikey",
                              "type": "text/plain"
                            },
                            "key": "Circle-Token",
                            "value": "<API Key>"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "method": "PATCH",
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"enabled\": \"<boolean>\"\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        }
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n  \"error\": \"OwnerID: must be a valid UUID.\"\n}",
                      "cookie": [],
                      "_postman_previewlanguage": "json"
                    },
                    {
                      "id": "7f0cc7e6-ce3c-4cd2-acfd-65155fb12741",
                      "name": "The request is unauthorized\n",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "owner",
                            ":ownerID",
                            "context",
                            ":context",
                            "decision",
                            "settings"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "ownerID",
                              "description": "(Required) "
                            },
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "context",
                              "description": "(Required) "
                            }
                          ]
                        },
                        "header": [
                          {
                            "description": {
                              "content": "Added as a part of security scheme: apikey",
                              "type": "text/plain"
                            },
                            "key": "Circle-Token",
                            "value": "<API Key>"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "method": "PATCH",
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"enabled\": \"<boolean>\"\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        }
                      },
                      "status": "Unauthorized",
                      "code": 401,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n  \"error\": \"Unauthorized\"\n}",
                      "cookie": [],
                      "_postman_previewlanguage": "json"
                    },
                    {
                      "id": "38584271-989e-4311-8344-b1a1c164cd92",
                      "name": "The user is forbidden from making this request\n",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "owner",
                            ":ownerID",
                            "context",
                            ":context",
                            "decision",
                            "settings"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "ownerID",
                              "description": "(Required) "
                            },
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "context",
                              "description": "(Required) "
                            }
                          ]
                        },
                        "header": [
                          {
                            "description": {
                              "content": "Added as a part of security scheme: apikey",
                              "type": "text/plain"
                            },
                            "key": "Circle-Token",
                            "value": "<API Key>"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "method": "PATCH",
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"enabled\": \"<boolean>\"\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        }
                      },
                      "status": "Forbidden",
                      "code": 403,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n  \"error\": \"Forbidden\"\n}",
                      "cookie": [],
                      "_postman_previewlanguage": "json"
                    },
                    {
                      "id": "2df9e48c-eb86-4b95-9d22-3e8182d1cad4",
                      "name": "Something unexpected happened on the server.",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "owner",
                            ":ownerID",
                            "context",
                            ":context",
                            "decision",
                            "settings"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "ownerID",
                              "description": "(Required) "
                            },
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "context",
                              "description": "(Required) "
                            }
                          ]
                        },
                        "header": [
                          {
                            "description": {
                              "content": "Added as a part of security scheme: apikey",
                              "type": "text/plain"
                            },
                            "key": "Circle-Token",
                            "value": "<API Key>"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "method": "PATCH",
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"enabled\": \"<boolean>\"\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        }
                      },
                      "status": "Internal Server Error",
                      "code": 500,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n  \"error\": \"unexpected server error\"\n}",
                      "cookie": [],
                      "_postman_previewlanguage": "json"
                    }
                  ],
                  "event": [],
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  }
                }
              ],
              "event": []
            },
            {
              "id": "f41131ea-d5d4-4320-9ed2-656664d34b90",
              "name": "{decisionID}",
              "item": [
                {
                  "id": "774d77a1-a260-401c-a390-9128d3108430",
                  "name": "Retrieves the owner's decision audit log by given decisionID",
                  "request": {
                    "name": "Retrieves the owner's decision audit log by given decisionID",
                    "description": {
                      "content": "This endpoint will retrieve a decision for a given decision log ID",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "owner",
                        ":ownerID",
                        "context",
                        ":context",
                        "decision",
                        ":decisionID"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "ownerID",
                          "description": "(Required) "
                        },
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "context",
                          "description": "(Required) "
                        },
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "decisionID",
                          "description": "(Required) "
                        }
                      ]
                    },
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "GET",
                    "auth": null
                  },
                  "response": [
                    {
                      "id": "9ed9925c-66ef-484c-8183-9613cbe452c1",
                      "name": "Decision log successfully retrieved.",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "owner",
                            ":ownerID",
                            "context",
                            ":context",
                            "decision",
                            ":decisionID"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "ownerID",
                              "description": "(Required) "
                            },
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "context",
                              "description": "(Required) "
                            },
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "decisionID",
                              "description": "(Required) "
                            }
                          ]
                        },
                        "header": [
                          {
                            "description": {
                              "content": "Added as a part of security scheme: apikey",
                              "type": "text/plain"
                            },
                            "key": "Circle-Token",
                            "value": "<API Key>"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "method": "GET",
                        "body": {}
                      },
                      "status": "OK",
                      "code": 200,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n  \"created_at\": \"1989-04-03T11:58:53.027Z\",\n  \"decision\": {\n    \"status\": \"non adipisicing\",\n    \"enabled_rules\": [\n      \"Lorem Duis velit\",\n      \"nostrud labore adipisicing\"\n    ],\n    \"hard_failures\": [\n      {\n        \"rule\": \"magna commodo\",\n        \"reason\": \"laborum dolor magna est\"\n      },\n      {\n        \"rule\": \"cupidatat dolor dolore sed magna\",\n        \"reason\": \"aute deserunt proident enim\"\n      }\n    ],\n    \"reason\": \"minim Lorem in\",\n    \"soft_failures\": [\n      {\n        \"rule\": \"Lorem officia et proident\",\n        \"reason\": \"magna\"\n      },\n      {\n        \"rule\": \"velit in voluptate cupidatat dolor\",\n        \"reason\": \"occaecat dolor adipisicing\"\n      }\n    ]\n  },\n  \"id\": \"27edd371-e889-6632-8a83-c8b999ddb38f\",\n  \"metadata\": {\n    \"build_number\": -21189664,\n    \"project_id\": \"urn:uuid:40009413-4966-ad25-e11c-9a7a2cfe6149\",\n    \"ssh_rerun\": true,\n    \"vcs\": {\n      \"branch\": \"elit\",\n      \"origin_repository_url\": \"Ut minim aliquip Duis\",\n      \"release_tag\": \"ipsum nul\",\n      \"target_repository_url\": \"sit amet\"\n    }\n  },\n  \"policies\": {\n    \"policy_name1\": \"1f40fc92da241694750979ee6cf582f2d5d7d28e18335de05abc54d0560e0f5302860c652bf08d560252aa5e74210546f369fbbbce8c12cfc7957b2652fe9a75\",\n    \"policy_name2\": \"5267768822ee624d48fce15ec5ca79cbd602cb7f4c2157a516556991f22ef8c7b5ef7b18d1ff41c59370efb0858651d44a936c11b7b144c48fe04df3c6a3e8da\"\n  },\n  \"time_taken_ms\": -14149539\n}",
                      "cookie": [],
                      "_postman_previewlanguage": "json"
                    },
                    {
                      "id": "02e72de6-345c-487a-b194-2ef8c6d26e20",
                      "name": "The request is malformed (e.g, a given path parameter is invalid)\n",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "owner",
                            ":ownerID",
                            "context",
                            ":context",
                            "decision",
                            ":decisionID"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "ownerID",
                              "description": "(Required) "
                            },
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "context",
                              "description": "(Required) "
                            },
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "decisionID",
                              "description": "(Required) "
                            }
                          ]
                        },
                        "header": [
                          {
                            "description": {
                              "content": "Added as a part of security scheme: apikey",
                              "type": "text/plain"
                            },
                            "key": "Circle-Token",
                            "value": "<API Key>"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n  \"error\": \"OwnerID: must be a valid UUID.\"\n}",
                      "cookie": [],
                      "_postman_previewlanguage": "json"
                    },
                    {
                      "id": "df03656d-cadc-4b13-8a42-260337e63c73",
                      "name": "The request is unauthorized\n",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "owner",
                            ":ownerID",
                            "context",
                            ":context",
                            "decision",
                            ":decisionID"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "ownerID",
                              "description": "(Required) "
                            },
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "context",
                              "description": "(Required) "
                            },
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "decisionID",
                              "description": "(Required) "
                            }
                          ]
                        },
                        "header": [
                          {
                            "description": {
                              "content": "Added as a part of security scheme: apikey",
                              "type": "text/plain"
                            },
                            "key": "Circle-Token",
                            "value": "<API Key>"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Unauthorized",
                      "code": 401,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n  \"error\": \"Unauthorized\"\n}",
                      "cookie": [],
                      "_postman_previewlanguage": "json"
                    },
                    {
                      "id": "318e01e1-7478-4680-8a4e-4a68a0e0727d",
                      "name": "The user is forbidden from making this request\n",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "owner",
                            ":ownerID",
                            "context",
                            ":context",
                            "decision",
                            ":decisionID"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "ownerID",
                              "description": "(Required) "
                            },
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "context",
                              "description": "(Required) "
                            },
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "decisionID",
                              "description": "(Required) "
                            }
                          ]
                        },
                        "header": [
                          {
                            "description": {
                              "content": "Added as a part of security scheme: apikey",
                              "type": "text/plain"
                            },
                            "key": "Circle-Token",
                            "value": "<API Key>"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Forbidden",
                      "code": 403,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n  \"error\": \"Forbidden\"\n}",
                      "cookie": [],
                      "_postman_previewlanguage": "json"
                    },
                    {
                      "id": "fc10e80e-a279-4611-98ec-bef7a4510ec3",
                      "name": "There was no decision log found for given decision_id, and owner_id.\n",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "owner",
                            ":ownerID",
                            "context",
                            ":context",
                            "decision",
                            ":decisionID"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "ownerID",
                              "description": "(Required) "
                            },
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "context",
                              "description": "(Required) "
                            },
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "decisionID",
                              "description": "(Required) "
                            }
                          ]
                        },
                        "header": [
                          {
                            "description": {
                              "content": "Added as a part of security scheme: apikey",
                              "type": "text/plain"
                            },
                            "key": "Circle-Token",
                            "value": "<API Key>"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n  \"error\": \"decision log not found\"\n}",
                      "cookie": [],
                      "_postman_previewlanguage": "json"
                    },
                    {
                      "id": "2e242bd0-d8d1-44a9-814e-54f1f184af3c",
                      "name": "Something unexpected happened on the server.",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "owner",
                            ":ownerID",
                            "context",
                            ":context",
                            "decision",
                            ":decisionID"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "ownerID",
                              "description": "(Required) "
                            },
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "context",
                              "description": "(Required) "
                            },
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "decisionID",
                              "description": "(Required) "
                            }
                          ]
                        },
                        "header": [
                          {
                            "description": {
                              "content": "Added as a part of security scheme: apikey",
                              "type": "text/plain"
                            },
                            "key": "Circle-Token",
                            "value": "<API Key>"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Internal Server Error",
                      "code": 500,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n  \"error\": \"unexpected server error\"\n}",
                      "cookie": [],
                      "_postman_previewlanguage": "json"
                    }
                  ],
                  "event": [],
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  }
                },
                {
                  "id": "2e66e697-20be-4291-93bd-7610bce1daf7",
                  "name": "Retrieves Policy Bundle for a given decision log ID",
                  "request": {
                    "name": "Retrieves Policy Bundle for a given decision log ID",
                    "description": {
                      "content": "This endpoint will retrieve a policy bundle for a given decision log ID",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "owner",
                        ":ownerID",
                        "context",
                        ":context",
                        "decision",
                        ":decisionID",
                        "policy-bundle"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "ownerID",
                          "description": "(Required) "
                        },
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "context",
                          "description": "(Required) "
                        },
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "decisionID",
                          "description": "(Required) "
                        }
                      ]
                    },
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "GET",
                    "auth": null
                  },
                  "response": [
                    {
                      "id": "dfbf31b9-7a2a-4e81-a498-6cf0b4d6dede",
                      "name": "Policy-Bundle retrieved successfully for given decision log ID",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "owner",
                            ":ownerID",
                            "context",
                            ":context",
                            "decision",
                            ":decisionID",
                            "policy-bundle"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "ownerID",
                              "description": "(Required) "
                            },
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "context",
                              "description": "(Required) "
                            },
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "decisionID",
                              "description": "(Required) "
                            }
                          ]
                        },
                        "header": [
                          {
                            "description": {
                              "content": "Added as a part of security scheme: apikey",
                              "type": "text/plain"
                            },
                            "key": "Circle-Token",
                            "value": "<API Key>"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "method": "GET",
                        "body": {}
                      },
                      "status": "OK",
                      "code": 200,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n  \"tempor_ea\": {},\n  \"ex1\": {}\n}",
                      "cookie": [],
                      "_postman_previewlanguage": "json"
                    },
                    {
                      "id": "5739dd42-78a0-423b-885b-1cbaa80fe34f",
                      "name": "The request is malformed (e.g, a given path parameter is invalid)\n",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "owner",
                            ":ownerID",
                            "context",
                            ":context",
                            "decision",
                            ":decisionID",
                            "policy-bundle"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "ownerID",
                              "description": "(Required) "
                            },
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "context",
                              "description": "(Required) "
                            },
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "decisionID",
                              "description": "(Required) "
                            }
                          ]
                        },
                        "header": [
                          {
                            "description": {
                              "content": "Added as a part of security scheme: apikey",
                              "type": "text/plain"
                            },
                            "key": "Circle-Token",
                            "value": "<API Key>"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n  \"error\": \"OwnerID: must be a valid UUID.\"\n}",
                      "cookie": [],
                      "_postman_previewlanguage": "json"
                    },
                    {
                      "id": "c22d3c10-fbba-4aed-9c86-1f35444a8ed0",
                      "name": "The request is unauthorized\n",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "owner",
                            ":ownerID",
                            "context",
                            ":context",
                            "decision",
                            ":decisionID",
                            "policy-bundle"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "ownerID",
                              "description": "(Required) "
                            },
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "context",
                              "description": "(Required) "
                            },
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "decisionID",
                              "description": "(Required) "
                            }
                          ]
                        },
                        "header": [
                          {
                            "description": {
                              "content": "Added as a part of security scheme: apikey",
                              "type": "text/plain"
                            },
                            "key": "Circle-Token",
                            "value": "<API Key>"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Unauthorized",
                      "code": 401,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n  \"error\": \"Unauthorized\"\n}",
                      "cookie": [],
                      "_postman_previewlanguage": "json"
                    },
                    {
                      "id": "08f07e42-1457-4def-b663-f5d7b4238945",
                      "name": "The user is forbidden from making this request\n",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "owner",
                            ":ownerID",
                            "context",
                            ":context",
                            "decision",
                            ":decisionID",
                            "policy-bundle"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "ownerID",
                              "description": "(Required) "
                            },
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "context",
                              "description": "(Required) "
                            },
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "decisionID",
                              "description": "(Required) "
                            }
                          ]
                        },
                        "header": [
                          {
                            "description": {
                              "content": "Added as a part of security scheme: apikey",
                              "type": "text/plain"
                            },
                            "key": "Circle-Token",
                            "value": "<API Key>"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Forbidden",
                      "code": 403,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n  \"error\": \"Forbidden\"\n}",
                      "cookie": [],
                      "_postman_previewlanguage": "json"
                    },
                    {
                      "id": "b75591e5-d5f1-49ee-b215-84febf7737cf",
                      "name": "There was no decision log found for given decision_id, and owner_id.\n",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "owner",
                            ":ownerID",
                            "context",
                            ":context",
                            "decision",
                            ":decisionID",
                            "policy-bundle"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "ownerID",
                              "description": "(Required) "
                            },
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "context",
                              "description": "(Required) "
                            },
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "decisionID",
                              "description": "(Required) "
                            }
                          ]
                        },
                        "header": [
                          {
                            "description": {
                              "content": "Added as a part of security scheme: apikey",
                              "type": "text/plain"
                            },
                            "key": "Circle-Token",
                            "value": "<API Key>"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n  \"error\": \"decision log not found\"\n}",
                      "cookie": [],
                      "_postman_previewlanguage": "json"
                    },
                    {
                      "id": "cf022892-6ef2-43b1-bd26-4795af9a6c30",
                      "name": "Something unexpected happened on the server.",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "owner",
                            ":ownerID",
                            "context",
                            ":context",
                            "decision",
                            ":decisionID",
                            "policy-bundle"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "ownerID",
                              "description": "(Required) "
                            },
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "context",
                              "description": "(Required) "
                            },
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "decisionID",
                              "description": "(Required) "
                            }
                          ]
                        },
                        "header": [
                          {
                            "description": {
                              "content": "Added as a part of security scheme: apikey",
                              "type": "text/plain"
                            },
                            "key": "Circle-Token",
                            "value": "<API Key>"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Internal Server Error",
                      "code": 500,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n  \"error\": \"unexpected server error\"\n}",
                      "cookie": [],
                      "_postman_previewlanguage": "json"
                    }
                  ],
                  "event": [],
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  }
                }
              ],
              "event": []
            }
          ],
          "event": []
        },
        {
          "id": "35ea48cb-44b0-4700-a42c-177b0b6829c6",
          "name": "policy-bundle",
          "item": [
            {
              "id": "905540b4-3107-487c-8099-ab0a66ef6852",
              "name": "Retrieves Policy Bundle",
              "request": {
                "name": "Retrieves Policy Bundle",
                "description": {
                  "content": "This endpoint will retrieve a policy bundle",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "owner",
                    ":ownerID",
                    "context",
                    ":context",
                    "policy-bundle"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "ownerID",
                      "description": "(Required) "
                    },
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "context",
                      "description": "(Required) "
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "auth": null
              },
              "response": [
                {
                  "id": "2d1b59a3-899b-48b2-ab56-7ccfb7a73ddc",
                  "name": "Policy-Bundle retrieved successfully.",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "owner",
                        ":ownerID",
                        "context",
                        ":context",
                        "policy-bundle"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "ownerID",
                          "description": "(Required) "
                        },
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "context",
                          "description": "(Required) "
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "Added as a part of security scheme: apikey",
                          "type": "text/plain"
                        },
                        "key": "Circle-Token",
                        "value": "<API Key>"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n  \"tempor_ea\": {},\n  \"ex1\": {}\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json"
                },
                {
                  "id": "f2c6962e-0152-426a-a588-8ef726adbeed",
                  "name": "The request is malformed (e.g, a given path parameter is invalid)\n",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "owner",
                        ":ownerID",
                        "context",
                        ":context",
                        "policy-bundle"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "ownerID",
                          "description": "(Required) "
                        },
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "context",
                          "description": "(Required) "
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "Added as a part of security scheme: apikey",
                          "type": "text/plain"
                        },
                        "key": "Circle-Token",
                        "value": "<API Key>"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n  \"error\": \"OwnerID: must be a valid UUID.\"\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json"
                },
                {
                  "id": "ca94913c-c438-4760-8d98-5bc22eaaf79c",
                  "name": "The request is unauthorized\n",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "owner",
                        ":ownerID",
                        "context",
                        ":context",
                        "policy-bundle"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "ownerID",
                          "description": "(Required) "
                        },
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "context",
                          "description": "(Required) "
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "Added as a part of security scheme: apikey",
                          "type": "text/plain"
                        },
                        "key": "Circle-Token",
                        "value": "<API Key>"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Unauthorized",
                  "code": 401,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n  \"error\": \"Unauthorized\"\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json"
                },
                {
                  "id": "73c2beb7-90b2-4477-8295-342953149e71",
                  "name": "The user is forbidden from making this request\n",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "owner",
                        ":ownerID",
                        "context",
                        ":context",
                        "policy-bundle"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "ownerID",
                          "description": "(Required) "
                        },
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "context",
                          "description": "(Required) "
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "Added as a part of security scheme: apikey",
                          "type": "text/plain"
                        },
                        "key": "Circle-Token",
                        "value": "<API Key>"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Forbidden",
                  "code": 403,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n  \"error\": \"Forbidden\"\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json"
                },
                {
                  "id": "b1e5b302-1d0a-45eb-ad92-b7c8b9dc7be3",
                  "name": "Something unexpected happened on the server.",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "owner",
                        ":ownerID",
                        "context",
                        ":context",
                        "policy-bundle"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "ownerID",
                          "description": "(Required) "
                        },
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "context",
                          "description": "(Required) "
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "Added as a part of security scheme: apikey",
                          "type": "text/plain"
                        },
                        "key": "Circle-Token",
                        "value": "<API Key>"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n  \"error\": \"unexpected server error\"\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json"
                }
              ],
              "event": [],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              }
            },
            {
              "id": "9668bb46-dc61-4d0f-b070-d8c0a059bc7f",
              "name": "Creates policy bundle for the context",
              "request": {
                "name": "Creates policy bundle for the context",
                "description": {
                  "content": "This endpoint replaces the current policy bundle with the provided policy bundle",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "owner",
                    ":ownerID",
                    "context",
                    ":context",
                    "policy-bundle"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "disabled": false,
                      "key": "dry",
                      "value": "<boolean>"
                    }
                  ],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "ownerID",
                      "description": "(Required) "
                    },
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "context",
                      "description": "(Required) "
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "auth": null,
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"policies\": {\n    \"cupidatat_c\": \"<string>\",\n    \"sit6f5\": \"<string>\"\n  }\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [
                {
                  "id": "2f0b8495-67d1-4eb9-ab38-c760fd66bb6a",
                  "name": "Policy-Bundle diff successfully returned.",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "owner",
                        ":ownerID",
                        "context",
                        ":context",
                        "policy-bundle"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "dry",
                          "value": "<boolean>"
                        }
                      ],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "ownerID",
                          "description": "(Required) "
                        },
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "context",
                          "description": "(Required) "
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "Added as a part of security scheme: apikey",
                          "type": "text/plain"
                        },
                        "key": "Circle-Token",
                        "value": "<API Key>"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"policies\": {\n    \"tempor_3\": \"<string>\",\n    \"adipisicing6b9\": \"<string>\",\n    \"dolor_8\": \"<string>\"\n  }\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n  \"created\": [\n    \"mollit ut\",\n    \"velit laboris\"\n  ],\n  \"deleted\": [\n    \"Lorem\",\n    \"irure\"\n  ],\n  \"modified\": [\n    \"ex veniam minim adipisicing\",\n    \"velit aliqua eu\"\n  ]\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json"
                },
                {
                  "id": "203730ff-32c7-486a-b3dd-9788680490c9",
                  "name": "Policy-Bundle successfully created.",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "owner",
                        ":ownerID",
                        "context",
                        ":context",
                        "policy-bundle"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "dry",
                          "value": "<boolean>"
                        }
                      ],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "ownerID",
                          "description": "(Required) "
                        },
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "context",
                          "description": "(Required) "
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "Added as a part of security scheme: apikey",
                          "type": "text/plain"
                        },
                        "key": "Circle-Token",
                        "value": "<API Key>"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"policies\": {\n    \"tempor_3\": \"<string>\",\n    \"adipisicing6b9\": \"<string>\",\n    \"dolor_8\": \"<string>\"\n  }\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    }
                  },
                  "status": "Created",
                  "code": 201,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n  \"created\": [\n    \"ad culpa qui fugiat\",\n    \"dolor in incididunt Ut tempor\"\n  ],\n  \"deleted\": [\n    \"ea dolor ipsum ex\",\n    \"ipsum laborum\"\n  ],\n  \"modified\": [\n    \"Ut commodo voluptate minim\",\n    \"voluptate\"\n  ]\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json"
                },
                {
                  "id": "d66c375f-32b6-4130-aef3-61a7a8d079ec",
                  "name": "The request is malformed (e.g, a given path parameter is invalid)\n",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "owner",
                        ":ownerID",
                        "context",
                        ":context",
                        "policy-bundle"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "dry",
                          "value": "<boolean>"
                        }
                      ],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "ownerID",
                          "description": "(Required) "
                        },
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "context",
                          "description": "(Required) "
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "Added as a part of security scheme: apikey",
                          "type": "text/plain"
                        },
                        "key": "Circle-Token",
                        "value": "<API Key>"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"policies\": {\n    \"tempor_3\": \"<string>\",\n    \"adipisicing6b9\": \"<string>\",\n    \"dolor_8\": \"<string>\"\n  }\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n  \"error\": \"OwnerID: must be a valid UUID.\"\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json"
                },
                {
                  "id": "9361fded-65e0-4438-bf26-b4e5b89d13f2",
                  "name": "The request is unauthorized\n",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "owner",
                        ":ownerID",
                        "context",
                        ":context",
                        "policy-bundle"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "dry",
                          "value": "<boolean>"
                        }
                      ],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "ownerID",
                          "description": "(Required) "
                        },
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "context",
                          "description": "(Required) "
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "Added as a part of security scheme: apikey",
                          "type": "text/plain"
                        },
                        "key": "Circle-Token",
                        "value": "<API Key>"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"policies\": {\n    \"tempor_3\": \"<string>\",\n    \"adipisicing6b9\": \"<string>\",\n    \"dolor_8\": \"<string>\"\n  }\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    }
                  },
                  "status": "Unauthorized",
                  "code": 401,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n  \"error\": \"Unauthorized\"\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json"
                },
                {
                  "id": "27db557b-0f54-4e4a-94be-572e00c3a34e",
                  "name": "The user is forbidden from making this request\n",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "owner",
                        ":ownerID",
                        "context",
                        ":context",
                        "policy-bundle"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "dry",
                          "value": "<boolean>"
                        }
                      ],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "ownerID",
                          "description": "(Required) "
                        },
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "context",
                          "description": "(Required) "
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "Added as a part of security scheme: apikey",
                          "type": "text/plain"
                        },
                        "key": "Circle-Token",
                        "value": "<API Key>"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"policies\": {\n    \"tempor_3\": \"<string>\",\n    \"adipisicing6b9\": \"<string>\",\n    \"dolor_8\": \"<string>\"\n  }\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    }
                  },
                  "status": "Forbidden",
                  "code": 403,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n  \"error\": \"Forbidden\"\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json"
                },
                {
                  "id": "4b2a3734-69e1-4416-bac0-f2d9e3336f7d",
                  "name": "The request exceeds the maximum payload size for policy bundles ~2.5Mib\n",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "owner",
                        ":ownerID",
                        "context",
                        ":context",
                        "policy-bundle"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "dry",
                          "value": "<boolean>"
                        }
                      ],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "ownerID",
                          "description": "(Required) "
                        },
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "context",
                          "description": "(Required) "
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "Added as a part of security scheme: apikey",
                          "type": "text/plain"
                        },
                        "key": "Circle-Token",
                        "value": "<API Key>"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"policies\": {\n    \"tempor_3\": \"<string>\",\n    \"adipisicing6b9\": \"<string>\",\n    \"dolor_8\": \"<string>\"\n  }\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    }
                  },
                  "status": "Request Entity Too Large",
                  "code": 413,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n  \"error\": \"http: request payload too large\"\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json"
                },
                {
                  "id": "c54cfcb9-d4b4-49fd-849f-b941c9a49f23",
                  "name": "Something unexpected happened on the server.",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "owner",
                        ":ownerID",
                        "context",
                        ":context",
                        "policy-bundle"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "dry",
                          "value": "<boolean>"
                        }
                      ],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "ownerID",
                          "description": "(Required) "
                        },
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "context",
                          "description": "(Required) "
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "Added as a part of security scheme: apikey",
                          "type": "text/plain"
                        },
                        "key": "Circle-Token",
                        "value": "<API Key>"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"policies\": {\n    \"tempor_3\": \"<string>\",\n    \"adipisicing6b9\": \"<string>\",\n    \"dolor_8\": \"<string>\"\n  }\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n  \"error\": \"unexpected server error\"\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json"
                }
              ],
              "event": [],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              }
            },
            {
              "id": "edd3967d-e9dd-49ae-9f1d-568c91cb1fcd",
              "name": "Retrieves a policy document",
              "request": {
                "name": "Retrieves a policy document",
                "description": {
                  "content": "This endpoint will retrieve a policy document.",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "owner",
                    ":ownerID",
                    "context",
                    ":context",
                    "policy-bundle",
                    ":policyName"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "ownerID",
                      "description": "(Required) "
                    },
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "context",
                      "description": "(Required) "
                    },
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "policyName",
                      "description": "(Required) the policy name set by the rego policy_name rule"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "auth": null
              },
              "response": [
                {
                  "id": "04403ad3-90ea-47ba-b16e-d004a1c82697",
                  "name": "Policy retrieved successfully.",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "owner",
                        ":ownerID",
                        "context",
                        ":context",
                        "policy-bundle",
                        ":policyName"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "ownerID",
                          "description": "(Required) "
                        },
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "context",
                          "description": "(Required) "
                        },
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "policyName",
                          "description": "(Required) the policy name set by the rego policy_name rule"
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "Added as a part of security scheme: apikey",
                          "type": "text/plain"
                        },
                        "key": "Circle-Token",
                        "value": "<API Key>"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n  \"content\": \"irure aute nulla proident\",\n  \"created_at\": \"1989-03-10T20:29:32.795Z\",\n  \"created_by\": \"in culpa cupidatat quis\",\n  \"name\": \"Ut\"\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json"
                },
                {
                  "id": "f75bef5b-5af2-42a4-bfcd-ca5b4e419cae",
                  "name": "The request is malformed (e.g, a given path parameter is invalid)\n",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "owner",
                        ":ownerID",
                        "context",
                        ":context",
                        "policy-bundle",
                        ":policyName"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "ownerID",
                          "description": "(Required) "
                        },
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "context",
                          "description": "(Required) "
                        },
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "policyName",
                          "description": "(Required) the policy name set by the rego policy_name rule"
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "Added as a part of security scheme: apikey",
                          "type": "text/plain"
                        },
                        "key": "Circle-Token",
                        "value": "<API Key>"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n  \"error\": \"OwnerID: must be a valid UUID.\"\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json"
                },
                {
                  "id": "6145d4cb-deb3-46a2-beeb-8ef3cbcfe094",
                  "name": "The request is unauthorized\n",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "owner",
                        ":ownerID",
                        "context",
                        ":context",
                        "policy-bundle",
                        ":policyName"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "ownerID",
                          "description": "(Required) "
                        },
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "context",
                          "description": "(Required) "
                        },
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "policyName",
                          "description": "(Required) the policy name set by the rego policy_name rule"
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "Added as a part of security scheme: apikey",
                          "type": "text/plain"
                        },
                        "key": "Circle-Token",
                        "value": "<API Key>"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Unauthorized",
                  "code": 401,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n  \"error\": \"Unauthorized\"\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json"
                },
                {
                  "id": "75fad686-2e76-4aac-94ec-d87d1126344f",
                  "name": "The user is forbidden from making this request\n",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "owner",
                        ":ownerID",
                        "context",
                        ":context",
                        "policy-bundle",
                        ":policyName"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "ownerID",
                          "description": "(Required) "
                        },
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "context",
                          "description": "(Required) "
                        },
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "policyName",
                          "description": "(Required) the policy name set by the rego policy_name rule"
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "Added as a part of security scheme: apikey",
                          "type": "text/plain"
                        },
                        "key": "Circle-Token",
                        "value": "<API Key>"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Forbidden",
                  "code": 403,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n  \"error\": \"Forbidden\"\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json"
                },
                {
                  "id": "945cdcb6-d7cf-4181-bcd2-4d68dd8ad6bb",
                  "name": "There was no policy that was found with the given owner_id and policy name.\n",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "owner",
                        ":ownerID",
                        "context",
                        ":context",
                        "policy-bundle",
                        ":policyName"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "ownerID",
                          "description": "(Required) "
                        },
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "context",
                          "description": "(Required) "
                        },
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "policyName",
                          "description": "(Required) the policy name set by the rego policy_name rule"
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "Added as a part of security scheme: apikey",
                          "type": "text/plain"
                        },
                        "key": "Circle-Token",
                        "value": "<API Key>"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n  \"error\": \"policy not found\"\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json"
                },
                {
                  "id": "f60308b7-47f5-4838-aead-7e30b2483c73",
                  "name": "Something unexpected happened on the server.",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "owner",
                        ":ownerID",
                        "context",
                        ":context",
                        "policy-bundle",
                        ":policyName"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "ownerID",
                          "description": "(Required) "
                        },
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "context",
                          "description": "(Required) "
                        },
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "policyName",
                          "description": "(Required) the policy name set by the rego policy_name rule"
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "Added as a part of security scheme: apikey",
                          "type": "text/plain"
                        },
                        "key": "Circle-Token",
                        "value": "<API Key>"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n  \"error\": \"unexpected server error\"\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json"
                }
              ],
              "event": [],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              }
            }
          ],
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "5e777f45-563b-4ca6-9446-faef883b89aa",
      "name": "organizations/{org_id}/usage_export_job",
      "item": [
        {
          "id": "7295191d-4c1f-46bd-b71e-0253fccca1e0",
          "name": "Create a usage export",
          "request": {
            "name": "Create a usage export",
            "description": {
              "content": "Submits a request to create a usage export for an organization.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "organizations",
                ":org_id",
                "usage_export_job"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "org_id",
                  "description": "(Required) An opaque identifier of an organization."
                }
              ]
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n  \"start\": \"<dateTime>\",\n  \"end\": \"<dateTime>\",\n  \"shared_org_ids\": [\n    \"<uuid>\",\n    \"<uuid>\"\n  ]\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "id": "d07e31e7-e461-44aa-9dad-1ecd5afe009c",
              "name": "Usage export created successfully",
              "originalRequest": {
                "url": {
                  "path": [
                    "organizations",
                    ":org_id",
                    "usage_export_job"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "org_id",
                      "description": "(Required) An opaque identifier of an organization."
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "Circle-Token",
                    "value": "<API Key>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"start\": \"<dateTime>\",\n  \"end\": \"<dateTime>\",\n  \"shared_org_ids\": [\n    \"<uuid>\",\n    \"<uuid>\"\n  ]\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Created",
              "code": 201,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"usage_export_job_id\": \"8de061e5-0d38-3e47-0b13-e8048b403a67\",\n  \"state\": \"failed\",\n  \"start\": \"1998-12-06T18:53:11.236Z\",\n  \"end\": \"1975-12-17T17:31:57.699Z\",\n  \"download_urls\": [\n    \"https://bDsRSooxnrejCO.qfuULqfdzJEsQs4JBJp\",\n    \"http://selojbjlNFmdXTgVLoZjVJkfSw.mcprfWmCisHG,MV9rkvnBT+XlJkGg,z3lpfbxp4l5qF1Ypm6sbqDqPnHA8\"\n  ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "396d56b6-6599-4702-8d81-e51e1f7340e3",
              "name": "Unexpected request body provided.",
              "originalRequest": {
                "url": {
                  "path": [
                    "organizations",
                    ":org_id",
                    "usage_export_job"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "org_id",
                      "description": "(Required) An opaque identifier of an organization."
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "Circle-Token",
                    "value": "<API Key>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"start\": \"<dateTime>\",\n  \"end\": \"<dateTime>\",\n  \"shared_org_ids\": [\n    \"<uuid>\",\n    \"<uuid>\"\n  ]\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"message\": \"Unexpected request body provided.\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "399ca255-a720-4c42-9d09-563ccab82a36",
              "name": "Credentials provided are invalid.",
              "originalRequest": {
                "url": {
                  "path": [
                    "organizations",
                    ":org_id",
                    "usage_export_job"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "org_id",
                      "description": "(Required) An opaque identifier of an organization."
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "Circle-Token",
                    "value": "<API Key>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"start\": \"<dateTime>\",\n  \"end\": \"<dateTime>\",\n  \"shared_org_ids\": [\n    \"<uuid>\",\n    \"<uuid>\"\n  ]\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"message\": \"Invalid token provided.\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "0d97834b-56ed-4a8b-a2d9-79528b90a1a0",
              "name": "Entity not found.",
              "originalRequest": {
                "url": {
                  "path": [
                    "organizations",
                    ":org_id",
                    "usage_export_job"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "org_id",
                      "description": "(Required) An opaque identifier of an organization."
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "Circle-Token",
                    "value": "<API Key>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"start\": \"<dateTime>\",\n  \"end\": \"<dateTime>\",\n  \"shared_org_ids\": [\n    \"<uuid>\",\n    \"<uuid>\"\n  ]\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"message\": \"Context not found.\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "4b379bfc-b450-408f-aa2b-17dd5937d5c5",
              "name": "API rate limits exceeded.",
              "originalRequest": {
                "url": {
                  "path": [
                    "organizations",
                    ":org_id",
                    "usage_export_job"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "org_id",
                      "description": "(Required) An opaque identifier of an organization."
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "Circle-Token",
                    "value": "<API Key>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"start\": \"<dateTime>\",\n  \"end\": \"<dateTime>\",\n  \"shared_org_ids\": [\n    \"<uuid>\",\n    \"<uuid>\"\n  ]\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Too Many Requests",
              "code": 429,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"message\": \"Rate limit exceeded.\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "129bc9e5-0a88-4f0b-986b-aac4799ea41d",
              "name": "Internal server error.",
              "originalRequest": {
                "url": {
                  "path": [
                    "organizations",
                    ":org_id",
                    "usage_export_job"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "org_id",
                      "description": "(Required) An opaque identifier of an organization."
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "Circle-Token",
                    "value": "<API Key>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"start\": \"<dateTime>\",\n  \"end\": \"<dateTime>\",\n  \"shared_org_ids\": [\n    \"<uuid>\",\n    \"<uuid>\"\n  ]\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"message\": \"Internal server error.\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "37fb9a8f-f72b-47c5-ac07-df980b5ed211",
          "name": "Get a usage export",
          "request": {
            "name": "Get a usage export",
            "description": {
              "content": "Gets a usage export for an organization.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "organizations",
                ":org_id",
                "usage_export_job",
                ":usage_export_job_id"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "org_id",
                  "description": "(Required) An opaque identifier of an organization."
                },
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<uuid>",
                  "key": "usage_export_job_id",
                  "description": "(Required) An opaque identifier of a usage export job."
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "6d71b261-a458-4c1e-b8a9-8aabce02449f",
              "name": "Usage export fetched successfully",
              "originalRequest": {
                "url": {
                  "path": [
                    "organizations",
                    ":org_id",
                    "usage_export_job",
                    ":usage_export_job_id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "org_id",
                      "description": "(Required) An opaque identifier of an organization."
                    },
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<uuid>",
                      "key": "usage_export_job_id",
                      "description": "(Required) An opaque identifier of a usage export job."
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "Circle-Token",
                    "value": "<API Key>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"usage_export_job_id\": \"urn:uuid:2b1b59f6-4f8b-d4af-ca39-fb050c945399\",\n  \"state\": \"processing\",\n  \"download_urls\": [\n    \"http://gZyGHkV.cxoyfsqbpbSv\",\n    \"https://aMDti.ewduSwA3xlRL,FbRCpGfa9LalVAH9TP\"\n  ],\n  \"error_reason\": \"voluptate\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "bf22fedb-4106-47e3-9d12-9a528bec81b1",
              "name": "Unexpected request body provided.",
              "originalRequest": {
                "url": {
                  "path": [
                    "organizations",
                    ":org_id",
                    "usage_export_job",
                    ":usage_export_job_id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "org_id",
                      "description": "(Required) An opaque identifier of an organization."
                    },
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<uuid>",
                      "key": "usage_export_job_id",
                      "description": "(Required) An opaque identifier of a usage export job."
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "Circle-Token",
                    "value": "<API Key>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"message\": \"Unexpected request body provided.\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "b3d43821-ad2d-4048-a629-cd138af29005",
              "name": "Credentials provided are invalid.",
              "originalRequest": {
                "url": {
                  "path": [
                    "organizations",
                    ":org_id",
                    "usage_export_job",
                    ":usage_export_job_id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "org_id",
                      "description": "(Required) An opaque identifier of an organization."
                    },
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<uuid>",
                      "key": "usage_export_job_id",
                      "description": "(Required) An opaque identifier of a usage export job."
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "Circle-Token",
                    "value": "<API Key>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"message\": \"Invalid token provided.\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "12032e06-af1e-42c8-a429-10fcda34793a",
              "name": "Entity not found.",
              "originalRequest": {
                "url": {
                  "path": [
                    "organizations",
                    ":org_id",
                    "usage_export_job",
                    ":usage_export_job_id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "org_id",
                      "description": "(Required) An opaque identifier of an organization."
                    },
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<uuid>",
                      "key": "usage_export_job_id",
                      "description": "(Required) An opaque identifier of a usage export job."
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "Circle-Token",
                    "value": "<API Key>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"message\": \"Context not found.\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "7b6b08c4-cb95-4d97-86e8-b8550f561c58",
              "name": "API rate limits exceeded.",
              "originalRequest": {
                "url": {
                  "path": [
                    "organizations",
                    ":org_id",
                    "usage_export_job",
                    ":usage_export_job_id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "org_id",
                      "description": "(Required) An opaque identifier of an organization."
                    },
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<uuid>",
                      "key": "usage_export_job_id",
                      "description": "(Required) An opaque identifier of a usage export job."
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "Circle-Token",
                    "value": "<API Key>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Too Many Requests",
              "code": 429,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"message\": \"Rate limit exceeded.\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "451ff7bf-7451-4854-8150-8cad9dfd9921",
              "name": "Internal server error.",
              "originalRequest": {
                "url": {
                  "path": [
                    "organizations",
                    ":org_id",
                    "usage_export_job",
                    ":usage_export_job_id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "org_id",
                      "description": "(Required) An opaque identifier of an organization."
                    },
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<uuid>",
                      "key": "usage_export_job_id",
                      "description": "(Required) An opaque identifier of a usage export job."
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "Circle-Token",
                    "value": "<API Key>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"message\": \"Internal server error.\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "7238995b-5949-4bb4-8f68-f053bfb09028",
      "name": "projects/{project_id}",
      "item": [
        {
          "id": "cade329e-2c77-4217-9d8b-3f0f5711291f",
          "name": "pipeline-definitions",
          "item": [
            {
              "id": "ff1f44f0-d97e-4512-92e1-02a2d3a5f492",
              "name": "List pipeline definitions",
              "request": {
                "name": "List pipeline definitions",
                "description": {
                  "content": "List all pipeline definitions for a given project. [Share feedback](https://circleci.canny.io/cloud-feature-requests/p/project-administration-apis) about our Project Administration APIs.",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "projects",
                    ":project_id",
                    "pipeline-definitions"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "project_id",
                      "description": "(Required) An opaque identifier of a project."
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "auth": null
              },
              "response": [
                {
                  "id": "9e701326-cd70-4af2-85c9-9f53011040d6",
                  "name": "Successful response.",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "projects",
                        ":project_id",
                        "pipeline-definitions"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "project_id",
                          "description": "(Required) An opaque identifier of a project."
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "Added as a part of security scheme: apikey",
                          "type": "text/plain"
                        },
                        "key": "Circle-Token",
                        "value": "<API Key>"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n  \"items\": [\n    {\n      \"id\": \"urn:uuid:29a2c3f3-67a1-dac9-aae5-1c4dbcc55f3f\",\n      \"name\": \"some pipeline\",\n      \"description\": \"some pipeline description\",\n      \"created_at\": \"2010-04-12T19:13:15.499Z\",\n      \"config_source\": {\n        \"provider\": \"github_app\",\n        \"repo\": {\n          \"full_name\": \"some-org/some-repo-name\",\n          \"external_id\": \"some-repo-id\"\n        },\n        \"file_path\": \".circleci/some-pipeline.yml\"\n      },\n      \"checkout_source\": {\n        \"provider\": \"github_app\",\n        \"repo\": {\n          \"full_name\": \"some-org/some-repo-name\",\n          \"external_id\": \"some-repo-id\"\n        }\n      }\n    },\n    {\n      \"id\": \"3959ae10-87e9-fccf-d3f6-2d1af91415e5\",\n      \"name\": \"some pipeline\",\n      \"description\": \"some pipeline description\",\n      \"created_at\": \"1966-05-10T05:42:45.759Z\",\n      \"config_source\": {\n        \"provider\": \"github_app\",\n        \"repo\": {\n          \"full_name\": \"some-org/some-repo-name\",\n          \"external_id\": \"some-repo-id\"\n        },\n        \"file_path\": \".circleci/some-pipeline.yml\"\n      },\n      \"checkout_source\": {\n        \"provider\": \"github_app\",\n        \"repo\": {\n          \"full_name\": \"some-org/some-repo-name\",\n          \"external_id\": \"some-repo-id\"\n        }\n      }\n    }\n  ]\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json"
                },
                {
                  "id": "784eba4c-ec80-4ef4-a099-b1112d87c327",
                  "name": "Unexpected request body provided.",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "projects",
                        ":project_id",
                        "pipeline-definitions"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "project_id",
                          "description": "(Required) An opaque identifier of a project."
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "Added as a part of security scheme: apikey",
                          "type": "text/plain"
                        },
                        "key": "Circle-Token",
                        "value": "<API Key>"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n  \"message\": \"Unexpected request body provided.\"\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json"
                },
                {
                  "id": "c6a21cfe-d2d8-41e9-b5f3-44eb53e1e236",
                  "name": "Credentials provided are invalid.",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "projects",
                        ":project_id",
                        "pipeline-definitions"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "project_id",
                          "description": "(Required) An opaque identifier of a project."
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "Added as a part of security scheme: apikey",
                          "type": "text/plain"
                        },
                        "key": "Circle-Token",
                        "value": "<API Key>"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Unauthorized",
                  "code": 401,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n  \"message\": \"Invalid token provided.\"\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json"
                },
                {
                  "id": "c4081811-b736-407d-97a4-e68bad03396a",
                  "name": "Entity not found.",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "projects",
                        ":project_id",
                        "pipeline-definitions"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "project_id",
                          "description": "(Required) An opaque identifier of a project."
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "Added as a part of security scheme: apikey",
                          "type": "text/plain"
                        },
                        "key": "Circle-Token",
                        "value": "<API Key>"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n  \"message\": \"Context not found.\"\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json"
                },
                {
                  "id": "7aeeb0cf-9110-42b6-b92b-d42e8048a8b0",
                  "name": "Internal server error.",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "projects",
                        ":project_id",
                        "pipeline-definitions"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "project_id",
                          "description": "(Required) An opaque identifier of a project."
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "Added as a part of security scheme: apikey",
                          "type": "text/plain"
                        },
                        "key": "Circle-Token",
                        "value": "<API Key>"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n  \"message\": \"Internal server error.\"\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json"
                }
              ],
              "event": [],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              }
            },
            {
              "id": "ae7c6f29-a321-4416-980d-ed8e2676d1f9",
              "name": "Create pipeline definition",
              "request": {
                "name": "Create pipeline definition",
                "description": {
                  "content": "Create a pipeline definition for a given project. Currently only supported for pipeline definitions where `config_source.provider` is `github_app`. [Share feedback](https://circleci.canny.io/cloud-feature-requests/p/project-administration-apis) about our Project Administration APIs.",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "projects",
                    ":project_id",
                    "pipeline-definitions"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "project_id",
                      "description": "(Required) An opaque identifier of a project."
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "auth": null,
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"<string>\",\n  \"config_source\": {\n    \"provider\": \"<string>\",\n    \"repo\": {\n      \"external_id\": \"<string>\"\n    },\n    \"file_path\": \"<string>\"\n  },\n  \"checkout_source\": {\n    \"provider\": \"<string>\",\n    \"repo\": {\n      \"external_id\": \"<string>\"\n    }\n  },\n  \"description\": \"<string>\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [
                {
                  "id": "781abb2b-6e7d-4a3f-88ba-228864de97ed",
                  "name": "Successful response.",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "projects",
                        ":project_id",
                        "pipeline-definitions"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "project_id",
                          "description": "(Required) An opaque identifier of a project."
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "Added as a part of security scheme: apikey",
                          "type": "text/plain"
                        },
                        "key": "Circle-Token",
                        "value": "<API Key>"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"name\": \"Some pipeline name\",\n  \"config_source\": {\n    \"provider\": \"github_app\",\n    \"repo\": {\n      \"external_id\": \"some-repo-id\"\n    },\n    \"file_path\": \".circleci/some-pipeline.yml\"\n  },\n  \"checkout_source\": {\n    \"provider\": \"github_app\",\n    \"repo\": {\n      \"external_id\": \"some-repo-id\"\n    }\n  },\n  \"description\": \"Some pipeline description\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n  \"id\": \"d2739cb7-8561-54dc-3bf7-81957f27a83f\",\n  \"name\": \"some pipeline\",\n  \"description\": \"some pipeline description\",\n  \"created_at\": \"1989-09-25T11:13:47.950Z\",\n  \"config_source\": {\n    \"provider\": \"github_app\",\n    \"repo\": {\n      \"full_name\": \"some-org/some-repo-name\",\n      \"external_id\": \"some-repo-id\"\n    },\n    \"file_path\": \".circleci/some-pipeline.yml\"\n  },\n  \"checkout_source\": {\n    \"provider\": \"github_app\",\n    \"repo\": {\n      \"full_name\": \"some-org/some-repo-name\",\n      \"external_id\": \"some-repo-id\"\n    }\n  }\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json"
                },
                {
                  "id": "f6f7235d-229b-473c-a241-62f9a63cb467",
                  "name": "Unexpected request body provided.",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "projects",
                        ":project_id",
                        "pipeline-definitions"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "project_id",
                          "description": "(Required) An opaque identifier of a project."
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "Added as a part of security scheme: apikey",
                          "type": "text/plain"
                        },
                        "key": "Circle-Token",
                        "value": "<API Key>"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"name\": \"Some pipeline name\",\n  \"config_source\": {\n    \"provider\": \"github_app\",\n    \"repo\": {\n      \"external_id\": \"some-repo-id\"\n    },\n    \"file_path\": \".circleci/some-pipeline.yml\"\n  },\n  \"checkout_source\": {\n    \"provider\": \"github_app\",\n    \"repo\": {\n      \"external_id\": \"some-repo-id\"\n    }\n  },\n  \"description\": \"Some pipeline description\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n  \"message\": \"Unexpected request body provided.\"\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json"
                },
                {
                  "id": "2356f4c6-4ee4-4f2c-a552-7702a34cb9ec",
                  "name": "Credentials provided are invalid.",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "projects",
                        ":project_id",
                        "pipeline-definitions"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "project_id",
                          "description": "(Required) An opaque identifier of a project."
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "Added as a part of security scheme: apikey",
                          "type": "text/plain"
                        },
                        "key": "Circle-Token",
                        "value": "<API Key>"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"name\": \"Some pipeline name\",\n  \"config_source\": {\n    \"provider\": \"github_app\",\n    \"repo\": {\n      \"external_id\": \"some-repo-id\"\n    },\n    \"file_path\": \".circleci/some-pipeline.yml\"\n  },\n  \"checkout_source\": {\n    \"provider\": \"github_app\",\n    \"repo\": {\n      \"external_id\": \"some-repo-id\"\n    }\n  },\n  \"description\": \"Some pipeline description\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    }
                  },
                  "status": "Unauthorized",
                  "code": 401,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n  \"message\": \"Invalid token provided.\"\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json"
                },
                {
                  "id": "c97aa9a6-f515-4145-9f33-cc0631f651bc",
                  "name": "Entity not found.",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "projects",
                        ":project_id",
                        "pipeline-definitions"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "project_id",
                          "description": "(Required) An opaque identifier of a project."
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "Added as a part of security scheme: apikey",
                          "type": "text/plain"
                        },
                        "key": "Circle-Token",
                        "value": "<API Key>"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"name\": \"Some pipeline name\",\n  \"config_source\": {\n    \"provider\": \"github_app\",\n    \"repo\": {\n      \"external_id\": \"some-repo-id\"\n    },\n    \"file_path\": \".circleci/some-pipeline.yml\"\n  },\n  \"checkout_source\": {\n    \"provider\": \"github_app\",\n    \"repo\": {\n      \"external_id\": \"some-repo-id\"\n    }\n  },\n  \"description\": \"Some pipeline description\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n  \"message\": \"Context not found.\"\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json"
                },
                {
                  "id": "57e1c407-435b-424b-bac9-1363d4687b7f",
                  "name": "Internal server error.",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "projects",
                        ":project_id",
                        "pipeline-definitions"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "project_id",
                          "description": "(Required) An opaque identifier of a project."
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "Added as a part of security scheme: apikey",
                          "type": "text/plain"
                        },
                        "key": "Circle-Token",
                        "value": "<API Key>"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"name\": \"Some pipeline name\",\n  \"config_source\": {\n    \"provider\": \"github_app\",\n    \"repo\": {\n      \"external_id\": \"some-repo-id\"\n    },\n    \"file_path\": \".circleci/some-pipeline.yml\"\n  },\n  \"checkout_source\": {\n    \"provider\": \"github_app\",\n    \"repo\": {\n      \"external_id\": \"some-repo-id\"\n    }\n  },\n  \"description\": \"Some pipeline description\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n  \"message\": \"Internal server error.\"\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json"
                }
              ],
              "event": [],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              }
            },
            {
              "id": "7df56b0f-6138-4701-beca-6a182fd44a07",
              "name": "{pipeline_definition_id}",
              "item": [
                {
                  "id": "8b7fc66e-eee8-4f37-a2f7-c8dee88d5c43",
                  "name": "Get pipeline definition",
                  "request": {
                    "name": "Get pipeline definition",
                    "description": {
                      "content": "Get details for a pipeline definition. Currently only supported for pipeline definitions where `config_source.provider` is `github_app` or `bitbucket_dc`. [Share feedback](https://circleci.canny.io/cloud-feature-requests/p/project-administration-apis) about our Project Administration APIs.",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "projects",
                        ":project_id",
                        "pipeline-definitions",
                        ":pipeline_definition_id"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "project_id",
                          "description": "(Required) An opaque identifier of a project."
                        },
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "pipeline_definition_id",
                          "description": "(Required) An opaque identifier of a pipeline definition."
                        }
                      ]
                    },
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "GET",
                    "auth": null
                  },
                  "response": [
                    {
                      "id": "befba0f8-784d-412e-9614-0ce9b45a8bab",
                      "name": "Successful response.",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "projects",
                            ":project_id",
                            "pipeline-definitions",
                            ":pipeline_definition_id"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "project_id",
                              "description": "(Required) An opaque identifier of a project."
                            },
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "pipeline_definition_id",
                              "description": "(Required) An opaque identifier of a pipeline definition."
                            }
                          ]
                        },
                        "header": [
                          {
                            "description": {
                              "content": "Added as a part of security scheme: apikey",
                              "type": "text/plain"
                            },
                            "key": "Circle-Token",
                            "value": "<API Key>"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "method": "GET",
                        "body": {}
                      },
                      "status": "OK",
                      "code": 200,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n  \"id\": \"d2739cb7-8561-54dc-3bf7-81957f27a83f\",\n  \"name\": \"some pipeline\",\n  \"description\": \"some pipeline description\",\n  \"created_at\": \"1989-09-25T11:13:47.950Z\",\n  \"config_source\": {\n    \"provider\": \"github_app\",\n    \"repo\": {\n      \"full_name\": \"some-org/some-repo-name\",\n      \"external_id\": \"some-repo-id\"\n    },\n    \"file_path\": \".circleci/some-pipeline.yml\"\n  },\n  \"checkout_source\": {\n    \"provider\": \"github_app\",\n    \"repo\": {\n      \"full_name\": \"some-org/some-repo-name\",\n      \"external_id\": \"some-repo-id\"\n    }\n  }\n}",
                      "cookie": [],
                      "_postman_previewlanguage": "json"
                    },
                    {
                      "id": "b2a73cab-17c2-478e-8961-10acdf9d82a4",
                      "name": "Unexpected request body provided.",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "projects",
                            ":project_id",
                            "pipeline-definitions",
                            ":pipeline_definition_id"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "project_id",
                              "description": "(Required) An opaque identifier of a project."
                            },
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "pipeline_definition_id",
                              "description": "(Required) An opaque identifier of a pipeline definition."
                            }
                          ]
                        },
                        "header": [
                          {
                            "description": {
                              "content": "Added as a part of security scheme: apikey",
                              "type": "text/plain"
                            },
                            "key": "Circle-Token",
                            "value": "<API Key>"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n  \"message\": \"Unexpected request body provided.\"\n}",
                      "cookie": [],
                      "_postman_previewlanguage": "json"
                    },
                    {
                      "id": "3a0b5672-9256-4b20-98e6-d2a313cb40c3",
                      "name": "Credentials provided are invalid.",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "projects",
                            ":project_id",
                            "pipeline-definitions",
                            ":pipeline_definition_id"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "project_id",
                              "description": "(Required) An opaque identifier of a project."
                            },
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "pipeline_definition_id",
                              "description": "(Required) An opaque identifier of a pipeline definition."
                            }
                          ]
                        },
                        "header": [
                          {
                            "description": {
                              "content": "Added as a part of security scheme: apikey",
                              "type": "text/plain"
                            },
                            "key": "Circle-Token",
                            "value": "<API Key>"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Unauthorized",
                      "code": 401,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n  \"message\": \"Invalid token provided.\"\n}",
                      "cookie": [],
                      "_postman_previewlanguage": "json"
                    },
                    {
                      "id": "55c20718-46ac-4d68-a640-786ddca6d568",
                      "name": "Entity not found.",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "projects",
                            ":project_id",
                            "pipeline-definitions",
                            ":pipeline_definition_id"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "project_id",
                              "description": "(Required) An opaque identifier of a project."
                            },
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "pipeline_definition_id",
                              "description": "(Required) An opaque identifier of a pipeline definition."
                            }
                          ]
                        },
                        "header": [
                          {
                            "description": {
                              "content": "Added as a part of security scheme: apikey",
                              "type": "text/plain"
                            },
                            "key": "Circle-Token",
                            "value": "<API Key>"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n  \"message\": \"Context not found.\"\n}",
                      "cookie": [],
                      "_postman_previewlanguage": "json"
                    },
                    {
                      "id": "eb654f19-7444-45f1-832f-afd0478bb1e5",
                      "name": "Internal server error.",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "projects",
                            ":project_id",
                            "pipeline-definitions",
                            ":pipeline_definition_id"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "project_id",
                              "description": "(Required) An opaque identifier of a project."
                            },
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "pipeline_definition_id",
                              "description": "(Required) An opaque identifier of a pipeline definition."
                            }
                          ]
                        },
                        "header": [
                          {
                            "description": {
                              "content": "Added as a part of security scheme: apikey",
                              "type": "text/plain"
                            },
                            "key": "Circle-Token",
                            "value": "<API Key>"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Internal Server Error",
                      "code": 500,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n  \"message\": \"Internal server error.\"\n}",
                      "cookie": [],
                      "_postman_previewlanguage": "json"
                    }
                  ],
                  "event": [],
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  }
                },
                {
                  "id": "0dc30182-55dc-49ea-b74e-197fd80bf4d1",
                  "name": "Update pipeline definition",
                  "request": {
                    "name": "Update pipeline definition",
                    "description": {
                      "content": "Update pipeline definition. Currently only supported for pipeline definitions where `config_source.provider` is `github_app` or `bitbucket_dc`. [Share feedback](https://circleci.canny.io/cloud-feature-requests/p/project-administration-apis) about our Project Administration APIs.",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "projects",
                        ":project_id",
                        "pipeline-definitions",
                        ":pipeline_definition_id"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "project_id",
                          "description": "(Required) An opaque identifier of a project."
                        },
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "pipeline_definition_id",
                          "description": "(Required) An opaque identifier of a pipeline definition."
                        }
                      ]
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "PATCH",
                    "auth": null,
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"config_source\": {\n    \"file_path\": \"<string>\"\n  },\n  \"checkout_source\": {\n    \"provider\": \"<string>\",\n    \"repo\": {\n      \"external_id\": \"<string>\"\n    }\n  }\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    }
                  },
                  "response": [
                    {
                      "id": "9207514b-49b5-4159-bae2-304b504ff603",
                      "name": "Successful response.",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "projects",
                            ":project_id",
                            "pipeline-definitions",
                            ":pipeline_definition_id"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "project_id",
                              "description": "(Required) An opaque identifier of a project."
                            },
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "pipeline_definition_id",
                              "description": "(Required) An opaque identifier of a pipeline definition."
                            }
                          ]
                        },
                        "header": [
                          {
                            "description": {
                              "content": "Added as a part of security scheme: apikey",
                              "type": "text/plain"
                            },
                            "key": "Circle-Token",
                            "value": "<API Key>"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "method": "PATCH",
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"name\": \"Some pipeline name\",\n  \"description\": \"Some pipeline description\",\n  \"config_source\": {\n    \"file_path\": \".circleci/some-pipeline.yml\"\n  },\n  \"checkout_source\": {\n    \"provider\": \"github_app\",\n    \"repo\": {\n      \"external_id\": \"some-repo-id\"\n    }\n  }\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n  \"id\": \"d2739cb7-8561-54dc-3bf7-81957f27a83f\",\n  \"name\": \"some pipeline\",\n  \"description\": \"some pipeline description\",\n  \"created_at\": \"1989-09-25T11:13:47.950Z\",\n  \"config_source\": {\n    \"provider\": \"github_app\",\n    \"repo\": {\n      \"full_name\": \"some-org/some-repo-name\",\n      \"external_id\": \"some-repo-id\"\n    },\n    \"file_path\": \".circleci/some-pipeline.yml\"\n  },\n  \"checkout_source\": {\n    \"provider\": \"github_app\",\n    \"repo\": {\n      \"full_name\": \"some-org/some-repo-name\",\n      \"external_id\": \"some-repo-id\"\n    }\n  }\n}",
                      "cookie": [],
                      "_postman_previewlanguage": "json"
                    },
                    {
                      "id": "3abc27ab-b17e-478e-8deb-9039cd6f8e72",
                      "name": "Unexpected request body provided.",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "projects",
                            ":project_id",
                            "pipeline-definitions",
                            ":pipeline_definition_id"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "project_id",
                              "description": "(Required) An opaque identifier of a project."
                            },
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "pipeline_definition_id",
                              "description": "(Required) An opaque identifier of a pipeline definition."
                            }
                          ]
                        },
                        "header": [
                          {
                            "description": {
                              "content": "Added as a part of security scheme: apikey",
                              "type": "text/plain"
                            },
                            "key": "Circle-Token",
                            "value": "<API Key>"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "method": "PATCH",
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"name\": \"Some pipeline name\",\n  \"description\": \"Some pipeline description\",\n  \"config_source\": {\n    \"file_path\": \".circleci/some-pipeline.yml\"\n  },\n  \"checkout_source\": {\n    \"provider\": \"github_app\",\n    \"repo\": {\n      \"external_id\": \"some-repo-id\"\n    }\n  }\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        }
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n  \"message\": \"Unexpected request body provided.\"\n}",
                      "cookie": [],
                      "_postman_previewlanguage": "json"
                    },
                    {
                      "id": "cea904eb-2de4-48ba-b0e7-1fa882c4caad",
                      "name": "Credentials provided are invalid.",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "projects",
                            ":project_id",
                            "pipeline-definitions",
                            ":pipeline_definition_id"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "project_id",
                              "description": "(Required) An opaque identifier of a project."
                            },
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "pipeline_definition_id",
                              "description": "(Required) An opaque identifier of a pipeline definition."
                            }
                          ]
                        },
                        "header": [
                          {
                            "description": {
                              "content": "Added as a part of security scheme: apikey",
                              "type": "text/plain"
                            },
                            "key": "Circle-Token",
                            "value": "<API Key>"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "method": "PATCH",
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"name\": \"Some pipeline name\",\n  \"description\": \"Some pipeline description\",\n  \"config_source\": {\n    \"file_path\": \".circleci/some-pipeline.yml\"\n  },\n  \"checkout_source\": {\n    \"provider\": \"github_app\",\n    \"repo\": {\n      \"external_id\": \"some-repo-id\"\n    }\n  }\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        }
                      },
                      "status": "Unauthorized",
                      "code": 401,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n  \"message\": \"Invalid token provided.\"\n}",
                      "cookie": [],
                      "_postman_previewlanguage": "json"
                    },
                    {
                      "id": "2fdaf508-7b90-42ef-af67-cb8c82b43cc4",
                      "name": "Entity not found.",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "projects",
                            ":project_id",
                            "pipeline-definitions",
                            ":pipeline_definition_id"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "project_id",
                              "description": "(Required) An opaque identifier of a project."
                            },
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "pipeline_definition_id",
                              "description": "(Required) An opaque identifier of a pipeline definition."
                            }
                          ]
                        },
                        "header": [
                          {
                            "description": {
                              "content": "Added as a part of security scheme: apikey",
                              "type": "text/plain"
                            },
                            "key": "Circle-Token",
                            "value": "<API Key>"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "method": "PATCH",
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"name\": \"Some pipeline name\",\n  \"description\": \"Some pipeline description\",\n  \"config_source\": {\n    \"file_path\": \".circleci/some-pipeline.yml\"\n  },\n  \"checkout_source\": {\n    \"provider\": \"github_app\",\n    \"repo\": {\n      \"external_id\": \"some-repo-id\"\n    }\n  }\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n  \"message\": \"Context not found.\"\n}",
                      "cookie": [],
                      "_postman_previewlanguage": "json"
                    },
                    {
                      "id": "ae8e6eb5-3f1b-485d-a648-567080dd8a50",
                      "name": "Internal server error.",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "projects",
                            ":project_id",
                            "pipeline-definitions",
                            ":pipeline_definition_id"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "project_id",
                              "description": "(Required) An opaque identifier of a project."
                            },
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "pipeline_definition_id",
                              "description": "(Required) An opaque identifier of a pipeline definition."
                            }
                          ]
                        },
                        "header": [
                          {
                            "description": {
                              "content": "Added as a part of security scheme: apikey",
                              "type": "text/plain"
                            },
                            "key": "Circle-Token",
                            "value": "<API Key>"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "method": "PATCH",
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"name\": \"Some pipeline name\",\n  \"description\": \"Some pipeline description\",\n  \"config_source\": {\n    \"file_path\": \".circleci/some-pipeline.yml\"\n  },\n  \"checkout_source\": {\n    \"provider\": \"github_app\",\n    \"repo\": {\n      \"external_id\": \"some-repo-id\"\n    }\n  }\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        }
                      },
                      "status": "Internal Server Error",
                      "code": 500,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n  \"message\": \"Internal server error.\"\n}",
                      "cookie": [],
                      "_postman_previewlanguage": "json"
                    }
                  ],
                  "event": [],
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  }
                },
                {
                  "id": "794be7f9-2091-40aa-8744-3c62d86bc440",
                  "name": "Delete pipeline definition",
                  "request": {
                    "name": "Delete pipeline definition",
                    "description": {
                      "content": "Delete pipeline definition. Currently only supported for pipeline definitions where `config_source.provider` is `github_app` or `bitbucket_dc`. [Share feedback](https://circleci.canny.io/cloud-feature-requests/p/project-administration-apis) about our Project Administration APIs.",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "projects",
                        ":project_id",
                        "pipeline-definitions",
                        ":pipeline_definition_id"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "project_id",
                          "description": "(Required) An opaque identifier of a project."
                        },
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "pipeline_definition_id",
                          "description": "(Required) An opaque identifier of a pipeline definition."
                        }
                      ]
                    },
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "DELETE",
                    "auth": null
                  },
                  "response": [
                    {
                      "id": "5e17d7a2-93e8-4521-9048-aa031ba7fb6b",
                      "name": "Successful response.",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "projects",
                            ":project_id",
                            "pipeline-definitions",
                            ":pipeline_definition_id"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "project_id",
                              "description": "(Required) An opaque identifier of a project."
                            },
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "pipeline_definition_id",
                              "description": "(Required) An opaque identifier of a pipeline definition."
                            }
                          ]
                        },
                        "header": [
                          {
                            "description": {
                              "content": "Added as a part of security scheme: apikey",
                              "type": "text/plain"
                            },
                            "key": "Circle-Token",
                            "value": "<API Key>"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "method": "DELETE",
                        "body": {}
                      },
                      "status": "OK",
                      "code": 200,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n  \"message\": \"ad\"\n}",
                      "cookie": [],
                      "_postman_previewlanguage": "json"
                    },
                    {
                      "id": "91739100-ca45-4751-ab0c-d444fb61c2d9",
                      "name": "Unexpected request body provided.",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "projects",
                            ":project_id",
                            "pipeline-definitions",
                            ":pipeline_definition_id"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "project_id",
                              "description": "(Required) An opaque identifier of a project."
                            },
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "pipeline_definition_id",
                              "description": "(Required) An opaque identifier of a pipeline definition."
                            }
                          ]
                        },
                        "header": [
                          {
                            "description": {
                              "content": "Added as a part of security scheme: apikey",
                              "type": "text/plain"
                            },
                            "key": "Circle-Token",
                            "value": "<API Key>"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "method": "DELETE",
                        "body": {}
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n  \"message\": \"Unexpected request body provided.\"\n}",
                      "cookie": [],
                      "_postman_previewlanguage": "json"
                    },
                    {
                      "id": "2094a3f5-b167-4a4a-a09f-75cb13340f8c",
                      "name": "Credentials provided are invalid.",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "projects",
                            ":project_id",
                            "pipeline-definitions",
                            ":pipeline_definition_id"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "project_id",
                              "description": "(Required) An opaque identifier of a project."
                            },
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "pipeline_definition_id",
                              "description": "(Required) An opaque identifier of a pipeline definition."
                            }
                          ]
                        },
                        "header": [
                          {
                            "description": {
                              "content": "Added as a part of security scheme: apikey",
                              "type": "text/plain"
                            },
                            "key": "Circle-Token",
                            "value": "<API Key>"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "method": "DELETE",
                        "body": {}
                      },
                      "status": "Unauthorized",
                      "code": 401,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n  \"message\": \"Invalid token provided.\"\n}",
                      "cookie": [],
                      "_postman_previewlanguage": "json"
                    },
                    {
                      "id": "24893af9-0a82-4086-89de-20344e0d2df6",
                      "name": "Entity not found.",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "projects",
                            ":project_id",
                            "pipeline-definitions",
                            ":pipeline_definition_id"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "project_id",
                              "description": "(Required) An opaque identifier of a project."
                            },
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "pipeline_definition_id",
                              "description": "(Required) An opaque identifier of a pipeline definition."
                            }
                          ]
                        },
                        "header": [
                          {
                            "description": {
                              "content": "Added as a part of security scheme: apikey",
                              "type": "text/plain"
                            },
                            "key": "Circle-Token",
                            "value": "<API Key>"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "method": "DELETE",
                        "body": {}
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n  \"message\": \"Context not found.\"\n}",
                      "cookie": [],
                      "_postman_previewlanguage": "json"
                    },
                    {
                      "id": "f1fb5730-1d8e-4cc7-b83e-270559b9275c",
                      "name": "Internal server error.",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "projects",
                            ":project_id",
                            "pipeline-definitions",
                            ":pipeline_definition_id"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "project_id",
                              "description": "(Required) An opaque identifier of a project."
                            },
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "pipeline_definition_id",
                              "description": "(Required) An opaque identifier of a pipeline definition."
                            }
                          ]
                        },
                        "header": [
                          {
                            "description": {
                              "content": "Added as a part of security scheme: apikey",
                              "type": "text/plain"
                            },
                            "key": "Circle-Token",
                            "value": "<API Key>"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "method": "DELETE",
                        "body": {}
                      },
                      "status": "Internal Server Error",
                      "code": 500,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n  \"message\": \"Internal server error.\"\n}",
                      "cookie": [],
                      "_postman_previewlanguage": "json"
                    }
                  ],
                  "event": [],
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  }
                },
                {
                  "id": "d6a0b2ee-d705-450c-8fe7-703482427cea",
                  "name": "triggers",
                  "item": [
                    {
                      "id": "7f3d4c9e-7410-441b-89c1-10e074f5e3c7",
                      "name": "List pipeline definition triggers",
                      "request": {
                        "name": "List pipeline definition triggers",
                        "description": {
                          "content": "List all triggers for a given pipeline definition. Currently only supported for pipeline definitions where `config_source.provider` is `github_app` or `bitbucket_dc`. [Share feedback](https://circleci.canny.io/cloud-feature-requests/p/project-administration-apis) about our Project Administration APIs.",
                          "type": "text/plain"
                        },
                        "url": {
                          "path": [
                            "projects",
                            ":project_id",
                            "pipeline-definitions",
                            ":pipeline_definition_id",
                            "triggers"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "project_id",
                              "description": "(Required) An opaque identifier of a project."
                            },
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "pipeline_definition_id",
                              "description": "(Required) An opaque identifier of a pipeline definition."
                            }
                          ]
                        },
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "method": "GET",
                        "auth": null
                      },
                      "response": [
                        {
                          "id": "56156816-b965-4d0d-bfd2-2dfc4f33329b",
                          "name": "Successful response.",
                          "originalRequest": {
                            "url": {
                              "path": [
                                "projects",
                                ":project_id",
                                "pipeline-definitions",
                                ":pipeline_definition_id",
                                "triggers"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [],
                              "variable": [
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "<string>",
                                  "key": "project_id",
                                  "description": "(Required) An opaque identifier of a project."
                                },
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "<string>",
                                  "key": "pipeline_definition_id",
                                  "description": "(Required) An opaque identifier of a pipeline definition."
                                }
                              ]
                            },
                            "header": [
                              {
                                "description": {
                                  "content": "Added as a part of security scheme: apikey",
                                  "type": "text/plain"
                                },
                                "key": "Circle-Token",
                                "value": "<API Key>"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "method": "GET",
                            "body": {}
                          },
                          "status": "OK",
                          "code": 200,
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": "{\n  \"items\": [\n    {\n      \"id\": \"urn:uuid:d372d182-132f-4b77-81e5-890aed1b529d\",\n      \"event_name\": \"some event name\",\n      \"created_at\": \"1972-10-12T03:23:23.996Z\",\n      \"event_source\": {\n        \"provider\": \"github_app\",\n        \"repo\": {\n          \"full_name\": \"some-org/some-repo-name\",\n          \"external_id\": \"some-repo-id\"\n        },\n        \"webhook\": {\n          \"url\": \"https://some-webhook.invalid/some-endpoint?secret=some-secret\",\n          \"sender\": \"datadog\"\n        }\n      },\n      \"event_preset\": \"all-pushes\",\n      \"checkout_ref\": \"some-checkout-ref\",\n      \"config_ref\": \"some-config-ref\"\n    },\n    {\n      \"id\": \"urn:uuid:3c7688b2-cc1f-a6f0-7a97-0e0cf3bf7ce2\",\n      \"event_name\": \"some event name\",\n      \"created_at\": \"1966-11-02T11:02:34.266Z\",\n      \"event_source\": {\n        \"provider\": \"github_app\",\n        \"repo\": {\n          \"full_name\": \"some-org/some-repo-name\",\n          \"external_id\": \"some-repo-id\"\n        },\n        \"webhook\": {\n          \"url\": \"https://some-webhook.invalid/some-endpoint?secret=some-secret\",\n          \"sender\": \"datadog\"\n        }\n      },\n      \"event_preset\": \"all-pushes\",\n      \"checkout_ref\": \"some-checkout-ref\",\n      \"config_ref\": \"some-config-ref\"\n    }\n  ]\n}",
                          "cookie": [],
                          "_postman_previewlanguage": "json"
                        },
                        {
                          "id": "9608cfeb-032e-4437-ac6c-aefb2d0b53f8",
                          "name": "Unexpected request body provided.",
                          "originalRequest": {
                            "url": {
                              "path": [
                                "projects",
                                ":project_id",
                                "pipeline-definitions",
                                ":pipeline_definition_id",
                                "triggers"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [],
                              "variable": [
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "<string>",
                                  "key": "project_id",
                                  "description": "(Required) An opaque identifier of a project."
                                },
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "<string>",
                                  "key": "pipeline_definition_id",
                                  "description": "(Required) An opaque identifier of a pipeline definition."
                                }
                              ]
                            },
                            "header": [
                              {
                                "description": {
                                  "content": "Added as a part of security scheme: apikey",
                                  "type": "text/plain"
                                },
                                "key": "Circle-Token",
                                "value": "<API Key>"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "method": "GET",
                            "body": {}
                          },
                          "status": "Bad Request",
                          "code": 400,
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": "{\n  \"message\": \"Unexpected request body provided.\"\n}",
                          "cookie": [],
                          "_postman_previewlanguage": "json"
                        },
                        {
                          "id": "265eaa2b-5758-42a6-9e2c-c840a290faed",
                          "name": "Credentials provided are invalid.",
                          "originalRequest": {
                            "url": {
                              "path": [
                                "projects",
                                ":project_id",
                                "pipeline-definitions",
                                ":pipeline_definition_id",
                                "triggers"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [],
                              "variable": [
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "<string>",
                                  "key": "project_id",
                                  "description": "(Required) An opaque identifier of a project."
                                },
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "<string>",
                                  "key": "pipeline_definition_id",
                                  "description": "(Required) An opaque identifier of a pipeline definition."
                                }
                              ]
                            },
                            "header": [
                              {
                                "description": {
                                  "content": "Added as a part of security scheme: apikey",
                                  "type": "text/plain"
                                },
                                "key": "Circle-Token",
                                "value": "<API Key>"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "method": "GET",
                            "body": {}
                          },
                          "status": "Unauthorized",
                          "code": 401,
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": "{\n  \"message\": \"Invalid token provided.\"\n}",
                          "cookie": [],
                          "_postman_previewlanguage": "json"
                        },
                        {
                          "id": "7ef9af2a-db39-4f61-a07e-475563168808",
                          "name": "Entity not found.",
                          "originalRequest": {
                            "url": {
                              "path": [
                                "projects",
                                ":project_id",
                                "pipeline-definitions",
                                ":pipeline_definition_id",
                                "triggers"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [],
                              "variable": [
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "<string>",
                                  "key": "project_id",
                                  "description": "(Required) An opaque identifier of a project."
                                },
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "<string>",
                                  "key": "pipeline_definition_id",
                                  "description": "(Required) An opaque identifier of a pipeline definition."
                                }
                              ]
                            },
                            "header": [
                              {
                                "description": {
                                  "content": "Added as a part of security scheme: apikey",
                                  "type": "text/plain"
                                },
                                "key": "Circle-Token",
                                "value": "<API Key>"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "method": "GET",
                            "body": {}
                          },
                          "status": "Not Found",
                          "code": 404,
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": "{\n  \"message\": \"Context not found.\"\n}",
                          "cookie": [],
                          "_postman_previewlanguage": "json"
                        },
                        {
                          "id": "224562da-cc0f-44ef-899b-628d1687d940",
                          "name": "Internal server error.",
                          "originalRequest": {
                            "url": {
                              "path": [
                                "projects",
                                ":project_id",
                                "pipeline-definitions",
                                ":pipeline_definition_id",
                                "triggers"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [],
                              "variable": [
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "<string>",
                                  "key": "project_id",
                                  "description": "(Required) An opaque identifier of a project."
                                },
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "<string>",
                                  "key": "pipeline_definition_id",
                                  "description": "(Required) An opaque identifier of a pipeline definition."
                                }
                              ]
                            },
                            "header": [
                              {
                                "description": {
                                  "content": "Added as a part of security scheme: apikey",
                                  "type": "text/plain"
                                },
                                "key": "Circle-Token",
                                "value": "<API Key>"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "method": "GET",
                            "body": {}
                          },
                          "status": "Internal Server Error",
                          "code": 500,
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": "{\n  \"message\": \"Internal server error.\"\n}",
                          "cookie": [],
                          "_postman_previewlanguage": "json"
                        }
                      ],
                      "event": [],
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      }
                    },
                    {
                      "id": "50efaec2-8fc0-497c-bcfa-889e0d35a29b",
                      "name": "Create trigger",
                      "request": {
                        "name": "Create trigger",
                        "description": {
                          "content": "Create a trigger for a given pipeline definition. Currently only supported for pipeline definitions where `config_source.provider` is `github_app`. [Share feedback](https://circleci.canny.io/cloud-feature-requests/p/project-administration-apis) about our Project Administration APIs.",
                          "type": "text/plain"
                        },
                        "url": {
                          "path": [
                            "projects",
                            ":project_id",
                            "pipeline-definitions",
                            ":pipeline_definition_id",
                            "triggers"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "project_id",
                              "description": "(Required) An opaque identifier of a project."
                            },
                            {
                              "disabled": false,
                              "type": "any",
                              "value": "<string>",
                              "key": "pipeline_definition_id",
                              "description": "(Required) An opaque identifier of a pipeline definition."
                            }
                          ]
                        },
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "method": "POST",
                        "auth": null,
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"event_source\": {\n    \"provider\": \"<string>\",\n    \"repo\": {\n      \"external_id\": \"<string>\"\n    },\n    \"webhook\": {\n      \"sender\": \"<string>\"\n    }\n  },\n  \"event_preset\": \"<string>\",\n  \"checkout_ref\": \"<string>\",\n  \"config_ref\": \"<string>\",\n  \"event_name\": \"<string>\"\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        }
                      },
                      "response": [
                        {
                          "id": "9db7a445-943d-4fb6-b449-e83ef22aa3b9",
                          "name": "Successful response.",
                          "originalRequest": {
                            "url": {
                              "path": [
                                "projects",
                                ":project_id",
                                "pipeline-definitions",
                                ":pipeline_definition_id",
                                "triggers"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [],
                              "variable": [
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "<string>",
                                  "key": "project_id",
                                  "description": "(Required) An opaque identifier of a project."
                                },
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "<string>",
                                  "key": "pipeline_definition_id",
                                  "description": "(Required) An opaque identifier of a pipeline definition."
                                }
                              ]
                            },
                            "header": [
                              {
                                "description": {
                                  "content": "Added as a part of security scheme: apikey",
                                  "type": "text/plain"
                                },
                                "key": "Circle-Token",
                                "value": "<API Key>"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "method": "POST",
                            "body": {
                              "mode": "raw",
                              "raw": "{\n  \"event_source\": {\n    \"provider\": \"github_app\",\n    \"repo\": {\n      \"external_id\": \"some-repo-id\"\n    },\n    \"webhook\": {\n      \"sender\": \"some-webhook-sender\"\n    }\n  },\n  \"event_preset\": \"all-pushes\",\n  \"checkout_ref\": \"some-checkout-ref\",\n  \"config_ref\": \"some-config-ref\",\n  \"event_name\": \"some-event-name\"\n}",
                              "options": {
                                "raw": {
                                  "language": "json"
                                }
                              }
                            }
                          },
                          "status": "OK",
                          "code": 200,
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": "{\n  \"id\": \"3782a4bd-189e-37b9-7cd1-937ca20db97b\",\n  \"event_name\": \"some event name\",\n  \"created_at\": \"1990-08-31T19:05:25.423Z\",\n  \"event_source\": {\n    \"provider\": \"github_app\",\n    \"repo\": {\n      \"full_name\": \"some-org/some-repo-name\",\n      \"external_id\": \"some-repo-id\"\n    },\n    \"webhook\": {\n      \"url\": \"https://some-webhook.invalid/some-endpoint?secret=some-secret\",\n      \"sender\": \"datadog\"\n    }\n  },\n  \"event_preset\": \"all-pushes\",\n  \"checkout_ref\": \"some-checkout-ref\",\n  \"config_ref\": \"some-config-ref\"\n}",
                          "cookie": [],
                          "_postman_previewlanguage": "json"
                        },
                        {
                          "id": "30385028-fec1-4a4c-bda3-a0e550b88386",
                          "name": "Unexpected request body provided.",
                          "originalRequest": {
                            "url": {
                              "path": [
                                "projects",
                                ":project_id",
                                "pipeline-definitions",
                                ":pipeline_definition_id",
                                "triggers"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [],
                              "variable": [
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "<string>",
                                  "key": "project_id",
                                  "description": "(Required) An opaque identifier of a project."
                                },
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "<string>",
                                  "key": "pipeline_definition_id",
                                  "description": "(Required) An opaque identifier of a pipeline definition."
                                }
                              ]
                            },
                            "header": [
                              {
                                "description": {
                                  "content": "Added as a part of security scheme: apikey",
                                  "type": "text/plain"
                                },
                                "key": "Circle-Token",
                                "value": "<API Key>"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "method": "POST",
                            "body": {
                              "mode": "raw",
                              "raw": "{\n  \"event_source\": {\n    \"provider\": \"github_app\",\n    \"repo\": {\n      \"external_id\": \"some-repo-id\"\n    },\n    \"webhook\": {\n      \"sender\": \"some-webhook-sender\"\n    }\n  },\n  \"event_preset\": \"all-pushes\",\n  \"checkout_ref\": \"some-checkout-ref\",\n  \"config_ref\": \"some-config-ref\",\n  \"event_name\": \"some-event-name\"\n}",
                              "options": {
                                "raw": {
                                  "language": "json"
                                }
                              }
                            }
                          },
                          "status": "Bad Request",
                          "code": 400,
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": "{\n  \"message\": \"Unexpected request body provided.\"\n}",
                          "cookie": [],
                          "_postman_previewlanguage": "json"
                        },
                        {
                          "id": "45d65d8f-3503-4da6-9017-d4222f1f7b59",
                          "name": "Credentials provided are invalid.",
                          "originalRequest": {
                            "url": {
                              "path": [
                                "projects",
                                ":project_id",
                                "pipeline-definitions",
                                ":pipeline_definition_id",
                                "triggers"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [],
                              "variable": [
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "<string>",
                                  "key": "project_id",
                                  "description": "(Required) An opaque identifier of a project."
                                },
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "<string>",
                                  "key": "pipeline_definition_id",
                                  "description": "(Required) An opaque identifier of a pipeline definition."
                                }
                              ]
                            },
                            "header": [
                              {
                                "description": {
                                  "content": "Added as a part of security scheme: apikey",
                                  "type": "text/plain"
                                },
                                "key": "Circle-Token",
                                "value": "<API Key>"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "method": "POST",
                            "body": {
                              "mode": "raw",
                              "raw": "{\n  \"event_source\": {\n    \"provider\": \"github_app\",\n    \"repo\": {\n      \"external_id\": \"some-repo-id\"\n    },\n    \"webhook\": {\n      \"sender\": \"some-webhook-sender\"\n    }\n  },\n  \"event_preset\": \"all-pushes\",\n  \"checkout_ref\": \"some-checkout-ref\",\n  \"config_ref\": \"some-config-ref\",\n  \"event_name\": \"some-event-name\"\n}",
                              "options": {
                                "raw": {
                                  "language": "json"
                                }
                              }
                            }
                          },
                          "status": "Unauthorized",
                          "code": 401,
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": "{\n  \"message\": \"Invalid token provided.\"\n}",
                          "cookie": [],
                          "_postman_previewlanguage": "json"
                        },
                        {
                          "id": "4502aab0-e88f-4122-8ae0-bf829bed0023",
                          "name": "Entity not found.",
                          "originalRequest": {
                            "url": {
                              "path": [
                                "projects",
                                ":project_id",
                                "pipeline-definitions",
                                ":pipeline_definition_id",
                                "triggers"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [],
                              "variable": [
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "<string>",
                                  "key": "project_id",
                                  "description": "(Required) An opaque identifier of a project."
                                },
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "<string>",
                                  "key": "pipeline_definition_id",
                                  "description": "(Required) An opaque identifier of a pipeline definition."
                                }
                              ]
                            },
                            "header": [
                              {
                                "description": {
                                  "content": "Added as a part of security scheme: apikey",
                                  "type": "text/plain"
                                },
                                "key": "Circle-Token",
                                "value": "<API Key>"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "method": "POST",
                            "body": {
                              "mode": "raw",
                              "raw": "{\n  \"event_source\": {\n    \"provider\": \"github_app\",\n    \"repo\": {\n      \"external_id\": \"some-repo-id\"\n    },\n    \"webhook\": {\n      \"sender\": \"some-webhook-sender\"\n    }\n  },\n  \"event_preset\": \"all-pushes\",\n  \"checkout_ref\": \"some-checkout-ref\",\n  \"config_ref\": \"some-config-ref\",\n  \"event_name\": \"some-event-name\"\n}",
                              "options": {
                                "raw": {
                                  "language": "json"
                                }
                              }
                            }
                          },
                          "status": "Not Found",
                          "code": 404,
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": "{\n  \"message\": \"Context not found.\"\n}",
                          "cookie": [],
                          "_postman_previewlanguage": "json"
                        },
                        {
                          "id": "8e742670-88e4-4a28-aecd-de0fb17f7682",
                          "name": "Internal server error.",
                          "originalRequest": {
                            "url": {
                              "path": [
                                "projects",
                                ":project_id",
                                "pipeline-definitions",
                                ":pipeline_definition_id",
                                "triggers"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [],
                              "variable": [
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "<string>",
                                  "key": "project_id",
                                  "description": "(Required) An opaque identifier of a project."
                                },
                                {
                                  "disabled": false,
                                  "type": "any",
                                  "value": "<string>",
                                  "key": "pipeline_definition_id",
                                  "description": "(Required) An opaque identifier of a pipeline definition."
                                }
                              ]
                            },
                            "header": [
                              {
                                "description": {
                                  "content": "Added as a part of security scheme: apikey",
                                  "type": "text/plain"
                                },
                                "key": "Circle-Token",
                                "value": "<API Key>"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "method": "POST",
                            "body": {
                              "mode": "raw",
                              "raw": "{\n  \"event_source\": {\n    \"provider\": \"github_app\",\n    \"repo\": {\n      \"external_id\": \"some-repo-id\"\n    },\n    \"webhook\": {\n      \"sender\": \"some-webhook-sender\"\n    }\n  },\n  \"event_preset\": \"all-pushes\",\n  \"checkout_ref\": \"some-checkout-ref\",\n  \"config_ref\": \"some-config-ref\",\n  \"event_name\": \"some-event-name\"\n}",
                              "options": {
                                "raw": {
                                  "language": "json"
                                }
                              }
                            }
                          },
                          "status": "Internal Server Error",
                          "code": 500,
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": "{\n  \"message\": \"Internal server error.\"\n}",
                          "cookie": [],
                          "_postman_previewlanguage": "json"
                        }
                      ],
                      "event": [],
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      }
                    }
                  ],
                  "event": []
                }
              ],
              "event": []
            }
          ],
          "event": []
        },
        {
          "id": "f74c1d39-06d1-4300-84b1-f61ded4e723d",
          "name": "triggers/{trigger_id}",
          "item": [
            {
              "id": "eb261389-3ce2-441c-80e3-2895baa94fbe",
              "name": "Get trigger",
              "request": {
                "name": "Get trigger",
                "description": {
                  "content": "Get details for a trigger. Currently only supported for triggers where `event_source.provider` is `github_app`, `bitbucket_dc` or `webhook`. [Share feedback](https://circleci.canny.io/cloud-feature-requests/p/project-administration-apis) about our Project Administration APIs.  Breaking change [upcoming on May 27, 2025](https://discuss.circleci.com/t/upcoming-changes-1-breaking-to-crud-trigger-v2-apis-may-27-2025/53314).",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "projects",
                    ":project_id",
                    "triggers",
                    ":trigger_id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "project_id",
                      "description": "(Required) An opaque identifier of a project."
                    },
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "trigger_id",
                      "description": "(Required) An opaque identifier of a trigger."
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "auth": null
              },
              "response": [
                {
                  "id": "bf88eaaa-4b17-4eaa-9ba7-d04f606e2ded",
                  "name": "Successful response.",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "projects",
                        ":project_id",
                        "triggers",
                        ":trigger_id"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "project_id",
                          "description": "(Required) An opaque identifier of a project."
                        },
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "trigger_id",
                          "description": "(Required) An opaque identifier of a trigger."
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "Added as a part of security scheme: apikey",
                          "type": "text/plain"
                        },
                        "key": "Circle-Token",
                        "value": "<API Key>"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n  \"id\": \"3782a4bd-189e-37b9-7cd1-937ca20db97b\",\n  \"event_name\": \"some event name\",\n  \"created_at\": \"1990-08-31T19:05:25.423Z\",\n  \"event_source\": {\n    \"provider\": \"github_app\",\n    \"repo\": {\n      \"full_name\": \"some-org/some-repo-name\",\n      \"external_id\": \"some-repo-id\"\n    },\n    \"webhook\": {\n      \"url\": \"https://some-webhook.invalid/some-endpoint?secret=some-secret\",\n      \"sender\": \"datadog\"\n    }\n  },\n  \"event_preset\": \"all-pushes\",\n  \"checkout_ref\": \"some-checkout-ref\",\n  \"config_ref\": \"some-config-ref\"\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json"
                },
                {
                  "id": "4e53bd1a-1f7b-44ba-818a-a0fed272a16b",
                  "name": "Unexpected request body provided.",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "projects",
                        ":project_id",
                        "triggers",
                        ":trigger_id"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "project_id",
                          "description": "(Required) An opaque identifier of a project."
                        },
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "trigger_id",
                          "description": "(Required) An opaque identifier of a trigger."
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "Added as a part of security scheme: apikey",
                          "type": "text/plain"
                        },
                        "key": "Circle-Token",
                        "value": "<API Key>"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n  \"message\": \"Unexpected request body provided.\"\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json"
                },
                {
                  "id": "96c116b6-6902-4056-8c57-691af81f2fa2",
                  "name": "Credentials provided are invalid.",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "projects",
                        ":project_id",
                        "triggers",
                        ":trigger_id"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "project_id",
                          "description": "(Required) An opaque identifier of a project."
                        },
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "trigger_id",
                          "description": "(Required) An opaque identifier of a trigger."
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "Added as a part of security scheme: apikey",
                          "type": "text/plain"
                        },
                        "key": "Circle-Token",
                        "value": "<API Key>"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Unauthorized",
                  "code": 401,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n  \"message\": \"Invalid token provided.\"\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json"
                },
                {
                  "id": "7b852181-62dc-4f74-a330-3fad7e9ed008",
                  "name": "Entity not found.",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "projects",
                        ":project_id",
                        "triggers",
                        ":trigger_id"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "project_id",
                          "description": "(Required) An opaque identifier of a project."
                        },
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "trigger_id",
                          "description": "(Required) An opaque identifier of a trigger."
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "Added as a part of security scheme: apikey",
                          "type": "text/plain"
                        },
                        "key": "Circle-Token",
                        "value": "<API Key>"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n  \"message\": \"Context not found.\"\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json"
                },
                {
                  "id": "fcc6d743-66c7-431a-9956-125ac541b9db",
                  "name": "Internal server error.",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "projects",
                        ":project_id",
                        "triggers",
                        ":trigger_id"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "project_id",
                          "description": "(Required) An opaque identifier of a project."
                        },
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "trigger_id",
                          "description": "(Required) An opaque identifier of a trigger."
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "Added as a part of security scheme: apikey",
                          "type": "text/plain"
                        },
                        "key": "Circle-Token",
                        "value": "<API Key>"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n  \"message\": \"Internal server error.\"\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json"
                }
              ],
              "event": [],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              }
            },
            {
              "id": "44a9f755-faa8-405d-a5ac-71434b8c9330",
              "name": "Update trigger",
              "request": {
                "name": "Update trigger",
                "description": {
                  "content": "Update a trigger. Currently only supported for triggers where `event_source.provider` is `github_app`, `bitbucket_dc` or `webhook`. [Share feedback](https://circleci.canny.io/cloud-feature-requests/p/project-administration-apis) about our Project Administration APIs.",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "projects",
                    ":project_id",
                    "triggers",
                    ":trigger_id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "project_id",
                      "description": "(Required) An opaque identifier of a project."
                    },
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "trigger_id",
                      "description": "(Required) An opaque identifier of a trigger."
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "PATCH",
                "auth": null,
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"event_preset\": \"<string>\",\n  \"checkout_ref\": \"<string>\",\n  \"config_ref\": \"<string>\",\n  \"event_name\": \"<string>\",\n  \"event_source\": {\n    \"webhook\": {\n      \"sender\": \"<string>\"\n    }\n  }\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [
                {
                  "id": "7c39d3ab-cb7c-4fa9-9b45-d49ba9d15429",
                  "name": "Successful response.",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "projects",
                        ":project_id",
                        "triggers",
                        ":trigger_id"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "project_id",
                          "description": "(Required) An opaque identifier of a project."
                        },
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "trigger_id",
                          "description": "(Required) An opaque identifier of a trigger."
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "Added as a part of security scheme: apikey",
                          "type": "text/plain"
                        },
                        "key": "Circle-Token",
                        "value": "<API Key>"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "PATCH",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"event_preset\": \"all-pushes\",\n  \"checkout_ref\": \"some-checkout-ref\",\n  \"config_ref\": \"some-config-ref\",\n  \"event_name\": \"some event name\",\n  \"event_source\": {\n    \"webhook\": {\n      \"sender\": \"some sender\"\n    }\n  }\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n  \"id\": \"3782a4bd-189e-37b9-7cd1-937ca20db97b\",\n  \"event_name\": \"some event name\",\n  \"created_at\": \"1990-08-31T19:05:25.423Z\",\n  \"event_source\": {\n    \"provider\": \"github_app\",\n    \"repo\": {\n      \"full_name\": \"some-org/some-repo-name\",\n      \"external_id\": \"some-repo-id\"\n    },\n    \"webhook\": {\n      \"url\": \"https://some-webhook.invalid/some-endpoint?secret=some-secret\",\n      \"sender\": \"datadog\"\n    }\n  },\n  \"event_preset\": \"all-pushes\",\n  \"checkout_ref\": \"some-checkout-ref\",\n  \"config_ref\": \"some-config-ref\"\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json"
                },
                {
                  "id": "bc3c227c-643e-42ce-b22e-4795265dfab2",
                  "name": "Unexpected request body provided.",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "projects",
                        ":project_id",
                        "triggers",
                        ":trigger_id"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "project_id",
                          "description": "(Required) An opaque identifier of a project."
                        },
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "trigger_id",
                          "description": "(Required) An opaque identifier of a trigger."
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "Added as a part of security scheme: apikey",
                          "type": "text/plain"
                        },
                        "key": "Circle-Token",
                        "value": "<API Key>"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "PATCH",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"event_preset\": \"all-pushes\",\n  \"checkout_ref\": \"some-checkout-ref\",\n  \"config_ref\": \"some-config-ref\",\n  \"event_name\": \"some event name\",\n  \"event_source\": {\n    \"webhook\": {\n      \"sender\": \"some sender\"\n    }\n  }\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n  \"message\": \"Unexpected request body provided.\"\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json"
                },
                {
                  "id": "8e97dc5b-0928-4c4c-8cfb-24858fb030aa",
                  "name": "Credentials provided are invalid.",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "projects",
                        ":project_id",
                        "triggers",
                        ":trigger_id"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "project_id",
                          "description": "(Required) An opaque identifier of a project."
                        },
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "trigger_id",
                          "description": "(Required) An opaque identifier of a trigger."
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "Added as a part of security scheme: apikey",
                          "type": "text/plain"
                        },
                        "key": "Circle-Token",
                        "value": "<API Key>"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "PATCH",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"event_preset\": \"all-pushes\",\n  \"checkout_ref\": \"some-checkout-ref\",\n  \"config_ref\": \"some-config-ref\",\n  \"event_name\": \"some event name\",\n  \"event_source\": {\n    \"webhook\": {\n      \"sender\": \"some sender\"\n    }\n  }\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    }
                  },
                  "status": "Unauthorized",
                  "code": 401,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n  \"message\": \"Invalid token provided.\"\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json"
                },
                {
                  "id": "1f0d682c-05b4-4d23-9986-fdae786e9cbb",
                  "name": "Entity not found.",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "projects",
                        ":project_id",
                        "triggers",
                        ":trigger_id"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "project_id",
                          "description": "(Required) An opaque identifier of a project."
                        },
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "trigger_id",
                          "description": "(Required) An opaque identifier of a trigger."
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "Added as a part of security scheme: apikey",
                          "type": "text/plain"
                        },
                        "key": "Circle-Token",
                        "value": "<API Key>"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "PATCH",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"event_preset\": \"all-pushes\",\n  \"checkout_ref\": \"some-checkout-ref\",\n  \"config_ref\": \"some-config-ref\",\n  \"event_name\": \"some event name\",\n  \"event_source\": {\n    \"webhook\": {\n      \"sender\": \"some sender\"\n    }\n  }\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n  \"message\": \"Context not found.\"\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json"
                },
                {
                  "id": "4e75a891-9776-4ea0-b093-d22197b14a47",
                  "name": "Internal server error.",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "projects",
                        ":project_id",
                        "triggers",
                        ":trigger_id"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "project_id",
                          "description": "(Required) An opaque identifier of a project."
                        },
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "trigger_id",
                          "description": "(Required) An opaque identifier of a trigger."
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "Added as a part of security scheme: apikey",
                          "type": "text/plain"
                        },
                        "key": "Circle-Token",
                        "value": "<API Key>"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "PATCH",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"event_preset\": \"all-pushes\",\n  \"checkout_ref\": \"some-checkout-ref\",\n  \"config_ref\": \"some-config-ref\",\n  \"event_name\": \"some event name\",\n  \"event_source\": {\n    \"webhook\": {\n      \"sender\": \"some sender\"\n    }\n  }\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n  \"message\": \"Internal server error.\"\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json"
                }
              ],
              "event": [],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              }
            },
            {
              "id": "2bfae181-db5c-41b2-85a1-f0f1bdc253a9",
              "name": "Delete trigger",
              "request": {
                "name": "Delete trigger",
                "description": {
                  "content": "Delete a trigger. Currently only supported for triggers where `event_source.provider` is `github_app`, `bitbucket_dc` or `webhook`. [Share feedback](https://circleci.canny.io/cloud-feature-requests/p/project-administration-apis) about our Project Administration APIs.",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "projects",
                    ":project_id",
                    "triggers",
                    ":trigger_id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "project_id",
                      "description": "(Required) An opaque identifier of a project."
                    },
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "trigger_id",
                      "description": "(Required) An opaque identifier of a trigger."
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "DELETE",
                "auth": null
              },
              "response": [
                {
                  "id": "25ea9ab6-b3e5-46ba-b950-c262dcd76533",
                  "name": "Successful response.",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "projects",
                        ":project_id",
                        "triggers",
                        ":trigger_id"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "project_id",
                          "description": "(Required) An opaque identifier of a project."
                        },
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "trigger_id",
                          "description": "(Required) An opaque identifier of a trigger."
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "Added as a part of security scheme: apikey",
                          "type": "text/plain"
                        },
                        "key": "Circle-Token",
                        "value": "<API Key>"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "DELETE",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n  \"message\": \"ad\"\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json"
                },
                {
                  "id": "140bd667-5174-4d32-bef5-adb75a0de3f6",
                  "name": "Unexpected request body provided.",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "projects",
                        ":project_id",
                        "triggers",
                        ":trigger_id"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "project_id",
                          "description": "(Required) An opaque identifier of a project."
                        },
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "trigger_id",
                          "description": "(Required) An opaque identifier of a trigger."
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "Added as a part of security scheme: apikey",
                          "type": "text/plain"
                        },
                        "key": "Circle-Token",
                        "value": "<API Key>"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "DELETE",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n  \"message\": \"Unexpected request body provided.\"\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json"
                },
                {
                  "id": "b1a1892f-db96-4e9c-9e22-313434c10851",
                  "name": "Credentials provided are invalid.",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "projects",
                        ":project_id",
                        "triggers",
                        ":trigger_id"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "project_id",
                          "description": "(Required) An opaque identifier of a project."
                        },
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "trigger_id",
                          "description": "(Required) An opaque identifier of a trigger."
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "Added as a part of security scheme: apikey",
                          "type": "text/plain"
                        },
                        "key": "Circle-Token",
                        "value": "<API Key>"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "DELETE",
                    "body": {}
                  },
                  "status": "Unauthorized",
                  "code": 401,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n  \"message\": \"Invalid token provided.\"\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json"
                },
                {
                  "id": "c6fbb2ff-99f1-48b9-91bc-323408d7d2f3",
                  "name": "Entity not found.",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "projects",
                        ":project_id",
                        "triggers",
                        ":trigger_id"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "project_id",
                          "description": "(Required) An opaque identifier of a project."
                        },
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "trigger_id",
                          "description": "(Required) An opaque identifier of a trigger."
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "Added as a part of security scheme: apikey",
                          "type": "text/plain"
                        },
                        "key": "Circle-Token",
                        "value": "<API Key>"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "DELETE",
                    "body": {}
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n  \"message\": \"Context not found.\"\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json"
                },
                {
                  "id": "e870a859-7b84-4c85-b3bb-3c1e3beaf915",
                  "name": "Internal server error.",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "projects",
                        ":project_id",
                        "triggers",
                        ":trigger_id"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "project_id",
                          "description": "(Required) An opaque identifier of a project."
                        },
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<string>",
                          "key": "trigger_id",
                          "description": "(Required) An opaque identifier of a trigger."
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "Added as a part of security scheme: apikey",
                          "type": "text/plain"
                        },
                        "key": "Circle-Token",
                        "value": "<API Key>"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "DELETE",
                    "body": {}
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n  \"message\": \"Internal server error.\"\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json"
                }
              ],
              "event": [],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              }
            }
          ],
          "event": []
        },
        {
          "id": "f7387e3b-b989-4869-a0fd-6e8aff8dc4c7",
          "name": "Rollback a project",
          "request": {
            "name": "Rollback a project",
            "description": {
              "content": "Performs a rollback operation by triggering a rollback pipeline.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects",
                ":project_id",
                "rollback"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "project_id",
                  "description": "(Required) An opaque identifier of a project."
                }
              ]
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n  \"environment_name\": \"<string>\",\n  \"component_name\": \"<string>\",\n  \"current_version\": \"<string>\",\n  \"target_version\": \"<string>\",\n  \"namespace\": \"<string>\",\n  \"parameters\": {\n    \"incididunt_f1\": {},\n    \"in02\": {}\n  }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "id": "986fad93-81ce-4537-beb0-c0db659ddca6",
              "name": "Rollback request accepted.",
              "originalRequest": {
                "url": {
                  "path": [
                    "projects",
                    ":project_id",
                    "rollback"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "project_id",
                      "description": "(Required) An opaque identifier of a project."
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "Circle-Token",
                    "value": "<API Key>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"environment_name\": \"production\",\n  \"component_name\": \"frontend\",\n  \"current_version\": \"1.0.0\",\n  \"target_version\": \"1.0.1\",\n  \"namespace\": \"default\",\n  \"parameters\": {\n    \"laborum_f2_\": {},\n    \"elit2b\": {},\n    \"non_6\": {},\n    \"dolore_e9a\": {}\n  }\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Accepted",
              "code": 202,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"id\": \"123e4567-e89b-12d3-a456-426614174000\",\n  \"rollback_type\": \"PIPELINE\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "d1071162-988f-4529-a498-2d4011b251c9",
              "name": "Unexpected request body provided.",
              "originalRequest": {
                "url": {
                  "path": [
                    "projects",
                    ":project_id",
                    "rollback"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "project_id",
                      "description": "(Required) An opaque identifier of a project."
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "Circle-Token",
                    "value": "<API Key>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"environment_name\": \"production\",\n  \"component_name\": \"frontend\",\n  \"current_version\": \"1.0.0\",\n  \"target_version\": \"1.0.1\",\n  \"namespace\": \"default\",\n  \"parameters\": {\n    \"laborum_f2_\": {},\n    \"elit2b\": {},\n    \"non_6\": {},\n    \"dolore_e9a\": {}\n  }\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"message\": \"Unexpected request body provided.\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "4558a3f9-a9d4-4e1d-9d2f-ca9cb5527266",
              "name": "Entity not found.",
              "originalRequest": {
                "url": {
                  "path": [
                    "projects",
                    ":project_id",
                    "rollback"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "project_id",
                      "description": "(Required) An opaque identifier of a project."
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "Circle-Token",
                    "value": "<API Key>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"environment_name\": \"production\",\n  \"component_name\": \"frontend\",\n  \"current_version\": \"1.0.0\",\n  \"target_version\": \"1.0.1\",\n  \"namespace\": \"default\",\n  \"parameters\": {\n    \"laborum_f2_\": {},\n    \"elit2b\": {},\n    \"non_6\": {},\n    \"dolore_e9a\": {}\n  }\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"message\": \"Context not found.\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "2a8a8d86-da0b-473f-b761-993ec469ab93",
              "name": "A conflict has occurred while attempting to create the resource.\n",
              "originalRequest": {
                "url": {
                  "path": [
                    "projects",
                    ":project_id",
                    "rollback"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "project_id",
                      "description": "(Required) An opaque identifier of a project."
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "Circle-Token",
                    "value": "<API Key>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"environment_name\": \"production\",\n  \"component_name\": \"frontend\",\n  \"current_version\": \"1.0.0\",\n  \"target_version\": \"1.0.1\",\n  \"namespace\": \"default\",\n  \"parameters\": {\n    \"laborum_f2_\": {},\n    \"elit2b\": {},\n    \"non_6\": {},\n    \"dolore_e9a\": {}\n  }\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Conflict",
              "code": 409,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"message\": \"Conflict creating entity.\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "93c774bd-21d9-4d49-b112-5c4ddd12af06",
              "name": "Internal server error.",
              "originalRequest": {
                "url": {
                  "path": [
                    "projects",
                    ":project_id",
                    "rollback"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "project_id",
                      "description": "(Required) An opaque identifier of a project."
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "Circle-Token",
                    "value": "<API Key>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"environment_name\": \"production\",\n  \"component_name\": \"frontend\",\n  \"current_version\": \"1.0.0\",\n  \"target_version\": \"1.0.1\",\n  \"namespace\": \"default\",\n  \"parameters\": {\n    \"laborum_f2_\": {},\n    \"elit2b\": {},\n    \"non_6\": {},\n    \"dolore_e9a\": {}\n  }\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"message\": \"Internal server error.\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    }
  ],
  "event": [],
  "variable": [
    {
      "type": "string",
      "value": "https://circleci.com/api/v2",
      "key": "baseUrl"
    }
  ],
  "auth": {
    "type": "apikey",
    "apikey": [
      {
        "key": "key",
        "value": "Circle-Token"
      },
      {
        "key": "value",
        "value": "{{apiKey}}"
      },
      {
        "key": "in",
        "value": "header"
      }
    ]
  },
  "info": {
    "_postman_id": "5bcb17a6-158a-4f90-aa7f-7c6a08ebf517",
    "name": "CircleCI API",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": {
      "content": "This describes the resources that make up the CircleCI API v2.",
      "type": "text/plain"
    }
  }
}