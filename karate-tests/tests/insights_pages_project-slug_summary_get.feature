# ********RoostGPT********

# Test generated by RoostGPT for test testing-karate-test using AI Type Azure Open AI and AI Model roostgpt-4-32k
# 
# Feature file generated for /insights/pages/{project-slug}/summary_get for http method type GET 
# RoostTestHash=d36b00fabb
# 
# 

# ********RoostGPT********
Feature: Insights API - Get summary metrics and trends for a project

  Background:
    * def baseURL = karate.properties['CIRCLECI_API_BASE_URL'] || karate.properties['CIRCLECI_API_BASE_URL']
    * url baseURL
    * configure report = false

  Scenario Outline: Get summary metrics for a project with different authorization types
    Given path '/insights/pages/<project_slug>/summary'
    And param reporting-window = '<reporting_window>'
    And param branches = <branches>
    And param workflow-names = <workflow_names>
    And <auth_type>
    When method GET
    Then status 200
    And match response.org_id == '#string'
    And match response.project_id == '#string'
    And match response.project_data.metrics.total_runs == '#number'
    And match response.project_data.metrics.total_duration_secs == '#number'
    And match response.project_data.metrics.total_credits_used == '#number'
    And match response.project_data.metrics.success_rate == '##number'
    And match response.project_data.metrics.throughput == '##number'
    And match response.project_data.trends.total_runs == '##number'
    And match response.project_data.trends.total_duration_secs == '##number'
    And match response.project_data.trends.total_credits_used == '##number'
    And match response.project_data.trends.success_rate == '##number'
    And match response.project_data.trends.throughput == '##number'
    And match each response.project_workflow_data[*].workflow_name == '#string'
    And match each response.project_workflow_data[*].metrics.total_credits_used == '#number'
    And match each response.project_workflow_data[*].metrics.p95_duration_secs == '##number'
    And match each response.project_workflow_data[*].metrics.total_runs == '#number'
    And match each response.project_workflow_data[*].metrics.success_rate == '##number'
    And match each response.project_workflow_data[*].trends.total_credits_used == '##number'
    And match each response.project_workflow_data[*].trends.p95_duration_secs == '##number'
    And match each response.project_workflow_data[*].trends.total_runs == '##number'
    And match each response.project_workflow_data[*].trends.success_rate == '##number'
    And match each response.project_workflow_branch_data[*].workflow_name == '#string'
    And match each response.project_workflow_branch_data[*].branch == '#string'
    And match each response.project_workflow_branch_data[*].metrics.total_credits_used == '#number'
    And match each response.project_workflow_branch_data[*].metrics.p95_duration_secs == '##number'
    And match each response.project_workflow_branch_data[*].metrics.total_runs == '#number'
    And match each response.project_workflow_branch_data[*].metrics.success_rate == '##number'
    And match each response.project_workflow_branch_data[*].trends.total_credits_used == '##number'
    And match each response.project_workflow_branch_data[*].trends.p95_duration_secs == '##number'
    And match each response.project_workflow_branch_data[*].trends.total_runs == '##number'
    And match each response.project_workflow_branch_data[*].trends.success_rate == '##number'
    And match response.all_branches == '#[] string'
    And match response.all_workflows == '#[] string'

    Examples:
      | read('insights_pages_project-slug_summary_get.csv') |

  Scenario: Handle default error response
    Given path '/insights/pages/{project-slug}/summary'
    And param reporting-window = 'invalid-window'
    And param branches = ['invalid-branch']
    And param workflow-names = ['invalid-workflow']
    And * def authToken = karate.properties['CIRCLE-Token']
    And configure headers = { Circle-Token: '#(authToken)' }
    When method GET
    Then status != 200
    And assert karate.sizeOf(response) >= 1
    And match response.message == '#string'
