# ********RoostGPT********

# Test generated by RoostGPT for test testing-karate-test using AI Type Azure Open AI and AI Model roostgpt-4-32k
# 
# Feature file generated for /context/{context-id}_get for http method type GET 
# RoostTestHash=d311758cf3
# 
# 

# ********RoostGPT********
Feature: Get Context by ID
  Description: Validate the functionality of the GET /context/{context-id} endpoint.

  Background:
    * def baseURL = karate.properties['CIRCLECI_API_BASE_URL'] || karate.properties['CIRCLECI_API_BASE_URL']
    * url baseURL
    * configure report = false
    * def authToken = karate.properties['circle-token']

  Scenario Outline: Get context with valid context-id
    Given path 'context/<context-id>'
    And param circle-token = authToken
    When method GET
    Then status 200
    And match response == '#object'
    And match response.id == '#string'
    And match response.id == '#regex ^[\\da-f]{8}-[\\da-f]{4}-[1-5][\\da-f]{3}-[89ab][\\da-f]{3}-[\\da-f]{12}$' # UUID format
    And match response.name == '#string'
    And match response.created_at == '#string'
    And match response.created_at == '#regex ^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\.\\d{3}Z$' # Date-time format

    Examples:
      | read('context_context-id_get.csv') |

  Scenario: Get context with invalid context-id
    Given path 'context/invalid-context-id'
    And param circle-token = authToken
    When method GET
    Then assert responseStatus != 200
    And match response == '#object'
    And match response.message == '#string'

  Scenario Outline: Get context with missing authorization token
    Given path 'context/<context-id>'
    When method GET
    Then assert responseStatus != 200
    And match response == '#object'
    And match response.message == '#string'

    Examples:
      | context-id                             |
      | '123e4567-e89b-12d3-a456-426614174000' |
