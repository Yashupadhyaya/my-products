# ********RoostGPT********

# Test generated by RoostGPT for test new-circle-test using AI Type Azure Open AI and AI Model roostgpt-4-32k
# 
# Feature file generated for /context/{context-id}_get for http method type GET 
# RoostTestHash=d311758cf3
# 
# 

# ********RoostGPT********
Feature: Test Context API

  Background:
    * def baseURL = karate.properties['CIRCLECI_API_BASE_URL'] || karate.properties['API_HOST']
    * url baseURL
    * configure report = false
    * def authToken = karate.properties['circle-token']

  Scenario Outline: Validate the response of GET /context/{context-id} with valid UUID
    Given path 'context' + '/' + '<context_id>'
    And param circle-token = authToken
    And headers
      """
      { 
        "Accept": "application/json" 
      }
      """
    When method GET
    Then status 200
    And match response.id == '#uuid'
    And match response.name == '#string'
    And match response.created_at == '#string'
    And match response.created_at == '#regex ^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\.\\d{3}Z'

    Examples:
      | read('context_context-id_get.csv') |

  Scenario: Validate error response schema when GET /context/{context-id} with invalid UUID
    Given path 'context' + '/' + 'invalid-uuid'
    And param circle-token = authToken
    And headers
      """
      { 
        "Accept": "application/json" 
      }
      """
    When method GET
    Then assert responseStatus != 200
    And match response.message == '#string'
