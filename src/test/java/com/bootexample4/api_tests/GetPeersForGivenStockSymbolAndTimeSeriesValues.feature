# ********RoostGPT********

# Test generated by RoostGPT for test testing-finnhub-integratiopn using AI Type Open AI and AI Model gpt-4
# 
# ROOST_METHOD_HASH=58eeb24062
# ROOST_METHOD_SIG_HASH=d5c655d95c
# 
#  ########## Scenario ########## 
# 
# {
#   feature: 'Feature: Retrieve Peer Stocks and their Time Series Data',
#   background: null,
#   rule: null,
#   scenario: {
#     title: 'Scenario: Get peers for a given stock symbol and their time series values',
#     steps: "Given an API key '<FINNHUB_API_KEY>' for Finnhub \n" +
#       "And an API key '<ALPHAVANTAGE_API_KEY>' for AlphaVantage\n" +
#       "And a stock symbol 'AAPL'\n" +
#       "When I retrieve the peer stock symbols from 'https://finnhub.io/api/v1/stock/peers' with the API key\n" +
#       'Then I should get a list of peer stock symbols\n' +
#       "When I retrieve the time series values for each peer stock symbol from 'https://www.alphavantage.co/query' with the API key\n" +
#       'Then I should get the time series data for each peer stock symbol',
#     examples: 'Examples:\n' +
#       '    | FINNHUB_API_KEY     | ALPHAVANTAGE_API_KEY      |\n' +
#       '    | your_finnhub_api_key | your_alphavantage_api_key |'
#   }
# }
# 

# ********RoostGPT********
Feature: Retrieve Peer Stocks and their Time Series Data

Background:
  * def alphavantage_get_resolved_URL = karate.properties['ALPHAVANTAGE_GET_RESOLVED_URL'] || 'http://localhost:4010'
  * def finnhub_URL = karate.properties['FINNHUB_URL'] || 'http://localhost:4010'
  * def alphavantage_get_resolved_AUTH_TOKEN = karate.properties['ALPHAVANTAGE_GET_RESOLVED_AUTH_TOKEN'] || 'http://localhost:4010'
  * def finnhub_AUTH_TOKEN = karate.properties['FINNHUB_AUTH_TOKEN'] || 'http://localhost:4010'

Scenario Outline: Get peers for a given stock symbol and their time series values
  Given url finnhub_URL
  And path '/stock/peers'
  And params {symbol: 'AAPL', token: '<FINNHUB_API_KEY>'}
  When method get
  Then status 200
  * def peerSymbols = response
  * match peerSymbols contains 'AAPL'

  Given url alphavantage_get_resolved_URL
  And path '/query'
  And params {symbol: 'AAPL', apikey: '<ALPHAVANTAGE_API_KEY>', function: 'TIME_SERIES_DAILY'}
  When method get
  Then status 200
  * def timeSeriesData = response
  * match timeSeriesData contains 'Time Series (Daily)'

  Examples:
    | FINNHUB_API_KEY          | ALPHAVANTAGE_API_KEY         |
    | your_finnhub_api_key     | your_alphavantage_api_key     |
