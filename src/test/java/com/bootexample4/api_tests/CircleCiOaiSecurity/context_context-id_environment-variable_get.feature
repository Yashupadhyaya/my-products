# ********RoostGPT********

# Test generated by RoostGPT for test testing-karate-test using AI Type Azure Open AI and AI Model roostgpt-4-32k
# 
# Feature file generated for /context/{context-id}/environment-variable_get for http method type GET 
# RoostTestHash=557b8b225f
# 
# 

# ********RoostGPT********
Feature: List Environment Variables from Context

  Background:
    * def urlBase = karate.properties['API_HOST']
    * def username = karate.properties['AUTH_USERNAME']
    * def password = karate.properties['AUTH_PASSWORD']
    * def credentials = username + ':' + password
    * def encoded = Java.type('java.util.Base64').getEncoder().encodeToString(credentials.getBytes())
    * def authHeader = 'Basic ' + encoded
    * configure headers = { Authorization: '#(authHeader)', Accept: 'application/json' }
    * url urlBase

  Scenario Outline: List environment variables with valid query parameter
    Given path '/context/<context-id>/environment-variable'
    And query page-token = '<page-token>'
    When method GET
    Then status 200
    And match response.items == '#[] objects'
    And match each response.items[*].variable == '#string'
    And match each response.items[*].created_at == '#string'
    And match each response.items[*].updated_at == '#string'
    And match each response.items[*].context_id == '#string'
    And match response.next_page_token == '#? _ == null || typeof _ == "string"'

    Examples:
      | read('context_context-id_environment-variable_get.csv') |

  Scenario: List environment variables without query parameter
    Given path '/context/12345678-1234-1234-1234-123456789abc/environment-variable'
    When method GET
    Then status 200
    And match response.items == '#[] objects'
    And match each response.items[*].variable == '#string'
    And match each response.items[*].created_at == '#string'
    And match each response.items[*].updated_at == '#string'
    And match each response.items[*].context_id == '#string'
    And match response.next_page_token == '##string'

  Scenario: List environment variables with invalid context ID
    Given path '/context/invalid-context-id/environment-variable'
    When method GET
    Then assert responseStatus != 200
    And match response.message == '#string'

  Scenario Outline: List environment variables with null and empty page-token query parameter
    Given path '/context/<context-id>/environment-variable'
    And query page-token = <page-token>
    When method GET
    Then status 200
    And match response.items == '#[] objects'
    And match each response.items[*].variable == '#string'
    And match each response.items[*].created_at == '#string'
    And match each response.items[*].updated_at == '#string'
    And match each response.items[*].context_id == '#string'
    And match response.next_page_token == '#? _ == null || typeof _ == "string"'

    Examples:
      | read('context_context-id_environment-variable_get.csv') |

  Scenario: Assert response headers
    Given path '/context/12345678-1234-1234-1234-123456789abc/environment-variable'
    When method GET
    Then status 200
    And match responseHeaders['Content-Type'] == 'application/json'
