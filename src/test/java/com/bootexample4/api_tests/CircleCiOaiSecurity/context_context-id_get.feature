# ********RoostGPT********

# Test generated by RoostGPT for test testing-karate-test using AI Type Azure Open AI and AI Model roostgpt-4-32k
# 
# Feature file generated for /context/{context-id}_get for http method type GET 
# RoostTestHash=d311758cf3
# 
# 

# ********RoostGPT********
Feature: Context API Tests

  Background:
    * def urlBase = karate.properties['API_HOST']
    * url urlBase
    * def authToken = karate.properties['circle-token']

  Scenario Outline: Get a context by ID - Valid ID
    Given path '/context/' + contextId
    And headers { 'Accept': 'application/json' }
    And param circle-token = authToken
    When method GET
    Then status 200
    And match response.id == '##string'
    And assert response.id.matches(/^([0-9a-fA-F\-]*)$/)
    And match response.name == '##string'
    And match response.created_at == '##string'
    And assert response.created_at.matches(/^\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}.\d{3}Z$/)

    Examples:
      | read('context_context-id_get.csv') |

  Scenario Outline: Get a context by ID - Invalid ID
    Given path '/context/' + contextId
    And headers { 'Accept': 'application/json' }
    And param circle-token = authToken
    When method GET
    Then assert responseStatus != 200
    And match response.message == '##string'

    Examples:
      | contextId                 |
      | 'invalid-context-id'      |
      | '123'                     |
      | '4b7b1d8c-invalid-format' |

  Scenario Outline: Verify required fields in success response - Valid ID
    Given path '/context/' + contextId
    And headers { 'Accept': 'application/json' }
    And param circle-token = authToken
    When method GET
    Then status 200
    And match response.id == '##string'
    And assert response.id != null
    And match response.name == '##string'
    And assert response.name != null
    And match response.created_at == '##string'
    And assert response.created_at != null

    Examples:
      | read('context_context-id_get.csv') |

  Scenario: Verify default error message for invalid context ID
    Given path '/context/invalid-context-id'
    And headers { 'Accept': 'application/json' }
    And param circle-token = authToken
    When method GET
    Then assert responseStatus != 200
    And match response.message == '##string'

  Scenario: Verify response headers are present
    Given path '/context/4b7b1d8c-f169-11e9-97d3-000c2972b03f'
    And headers { 'Accept': 'application/json' }
    And param circle-token = authToken
    When method GET
    Then status 200
    And match responseHeaders['Content-Type'] == '#string'
    And assert responseHeaders['Content-Type'] == 'application/json'
