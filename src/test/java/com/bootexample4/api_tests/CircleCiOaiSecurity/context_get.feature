# ********RoostGPT********

# Test generated by RoostGPT for test testing-karate-test using AI Type Azure Open AI and AI Model roostgpt-4-32k
# 
# Feature file generated for /context_get for http method type GET 
# RoostTestHash=ae15e2262e
# 
# 

# ********RoostGPT********
Feature: List contexts API tests

  Background:
    * def urlBase = karate.properties['API_HOST']
    * url urlBase
    * def authToken = karate.properties['Circle-Token']
    * configure headers = { 'Circle-Token': '#(authToken)', 'Accept': 'application/json' }

  Scenario: Verify successful retrieval of contexts
    Given path 'context'
    And param 'owner-id' = 'c65b68ef-e73b-4bf2-be9a-7a322a9df150'
    When method GET
    Then status 200
    And match response.items == '#[] Context'
    And match response.next_page_token == '#? _ == null || typeof _ == "string"'
    And match each response.items[*].id == '#uuid'
    And match each response.items[*].name == '#string'
    And match each response.items[*].created_at == '#string'

  Scenario Outline: Verify retrieval with different parameters
    Given path 'context'
    And param 'owner-id' = <owner_id>
    And param 'owner-slug' = '<owner_slug>'
    And param 'owner-type' = '<owner_type>'
    And param 'page-token' = '<page_token>'
    When method GET
    Then status 200
    And match response.items == '#[] Context'
    And match response.next_page_token == '#? _ == null || typeof _ == "string"'
    And match each response.items[*].id == '#uuid'
    And match each response.items[*].name == '#string'
    And match each response.items[*].created_at == '#string'

    Examples:
      | read('context_get.csv') |

  Scenario: Verify error response for invalid request
    Given path 'context'
    And param 'owner-id' = 'invalid-uuid'
    When method GET
    Then assert responseStatus != 200
    And match response.message == '#string'

  Scenario Outline: Verify retrieval with empty or invalid tokens for pagination
    Given path 'context'
    And param 'owner-id' = 'c65b68ef-e73b-4bf2-be9a-7a322a9df150'
    And param 'page-token' = '<page_token>'
    When method GET
    Then assert responseStatus != 200
    And match response.message == '#string'

    Examples:
      | page_token      |
      | ''              |
      | 'invalid-token' |
