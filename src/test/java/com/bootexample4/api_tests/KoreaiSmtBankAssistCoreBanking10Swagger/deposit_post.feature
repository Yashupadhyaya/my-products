# ********RoostGPT********

# Test generated by RoostGPT for test karate_open_testing using AI Type Azure Open AI and AI Model roostgpt-4-32k
# 
# Feature file generated for /deposit_post for http method type POST 
# RoostTestHash=70db6d5eac
# 
# 

# ********RoostGPT********
Feature: API Tests for /deposit endpoint

Background:
    * def urlBase = karate.properties['PETSTORE_API_HOST']
    * url urlBase
    * def authToken = 'Bearer ' + karate.properties['AUTH_TOKEN']
    * configure headers = { Authorization: '#(authToken)' }

Scenario Outline: Successful deposit request
    Given path 'deposit'
    And request {
        "customerId": <customerId>,
        "sourceAccountId": '<sourceAccountId>',
        "amount": '<amount>',
        "currency": '<currency>',
        "image": {
            "frontImage": '<frontImage>',
            "backImage": '<backImage>'
        }
    }
    And header botId = '<botId>'
    And header accountId = '<accountId>'
    When method POST
    Then status 200
    And match response == '#object'

Examples:
    | customerId | sourceAccountId | amount   | currency | frontImage          | backImage           | botId         | accountId    |
    | 1045300    | '1042345'       | '1042222'| 'USD'    | 'https://google.com'| 'https://google.com'| 'test_bot_id' | 'test_acc_id'|

Scenario Outline: Authorization failure for deposit
    Given path 'deposit'
    And request {
        "customerId": <customerId>,
        "sourceAccountId": '<sourceAccountId>',
        "amount": '<amount>',
        "currency": '<currency>',
        "image": {
            "frontImage": '<frontImage>',
            "backImage": '<backImage>'
        }
    }
    And header botId = '<botId>'
    And header accountId = '<accountId>'
    * configure headers = { Authorization: 'invalid_token' }
    When method POST
    Then status 401
    And match response.err.message == '#string'

Examples:
    | customerId | sourceAccountId | amount   | currency | frontImage          | backImage           | botId         | accountId    |
    | 1045300    | '1042345'       | '1042222'| 'USD'    | 'https://google.com'| 'https://google.com'| 'test_bot_id' | 'test_acc_id'|

Scenario Outline: Deposit request with missing headers
    Given path 'deposit'
    And request {
        "customerId": <customerId>,
        "sourceAccountId": '<sourceAccountId>',
        "amount": '<amount>',
        "currency": '<currency>',
        "image": {
            "frontImage": '<frontImage>',
            "backImage": '<backImage>'
        }
    }
    And header botId = '<botId>'
    * configure headers = { Authorization: '#(authToken)' }
    When method POST
    Then status 404
    And match response.err.message == '#string'

Examples:
    | customerId | sourceAccountId | amount   | currency | frontImage          | backImage           | botId         |
    | 1045300    | '1042345'       | '1042222'| 'USD'    | 'https://google.com'| 'https://google.com'| 'test_bot_id' |

Scenario: Deposit request with invalid payload
    Given path 'deposit'
    And request {
        "customerId": "invalid_customer_id",
        "sourceAccountId": 'invalid_account_id',
        "amount": 'incorrect_amount',
        "currency": 'unknown_currency',
        "image": {
            "frontImage": 'invalid_url',
            "backImage": 'invalid_url'
        }
    }
    And header botId = 'test_bot_id'
    And header accountId = 'test_acc_id'
    * configure headers = { Authorization: '#(authToken)' }
    When method POST
    Then status 404
    And match response.err.message == '#string'
    
Scenario: Deposit request without payload
    Given path 'deposit'
    And header botId = 'test_bot_id'
    And header accountId = 'test_acc_id'
    * configure headers = { Authorization: '#(authToken)' }
    When method POST
    Then status 404
    And match response.err.message == '#string'
