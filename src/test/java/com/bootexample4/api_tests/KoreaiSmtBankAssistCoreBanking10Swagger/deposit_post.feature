# ********RoostGPT********

# Test generated by RoostGPT for test karate_open_testing using AI Type Azure Open AI and AI Model roostgpt-4-32k
# 
# Feature file generated for /deposit_post for http method type POST 
# RoostTestHash=70db6d5eac
# 
# 

# ********RoostGPT********
Feature: Verify functionality of '/deposit' endpoint

  Background:
    * def urlBase = karate.properties['PETSTORE_API_HOST']
    * url urlBase

  Scenario Outline: Make a successful deposit
    Given path 'deposit'
    And header Authorization = '<Authorization>'
    And header botId = '<botId>'
    And header accountId = '<accountId>'
    And header koreUserId = '<koreUserId>'
    And request
      """
      {
        "customerId": <customerId>,
        "sourceAccountId": "<sourceAccountId>",
        "amount": "<amount>",
        "currency": "<currency>",
        "image": {
          "frontImage": "<frontImage>",
          "backImage": "<backImage>"
        }
      }
      """
    When method POST
    Then status 200
    And match response == '{}'

    Examples:
      | read('deposit_post.csv') |

  Scenario Outline: Unauthorized deposit attempt
    Given path 'deposit'
    And header Authorization = '<Authorization>'
    And header botId = '<botId>'
    And header accountId = '<accountId>'
    And header koreUserId = '<koreUserId>'
    And request
      """
      {
        "customerId": <customerId>,
        "sourceAccountId": "<sourceAccountId>",
        "amount": "<amount>",
        "currency": "<currency>",
        "image": {
          "frontImage": "<frontImage>",
          "backImage": "<backImage>"
        }
      }
      """
    When method POST
    Then status 401
    And match response.err.message == '#string'

    Examples:
      | Authorization        | botId       | accountId   | koreUserId | customerId | sourceAccountId | amount  | currency | frontImage         | backImage          |
      | InvalidAuthorization | sampleBotId | sampleAccId | sampleUser |    1045300 |         1042345 | 1042222 | USD      | https://google.com | https://google.com |

  Scenario Outline: Deposit on non-existent account
    Given path 'deposit'
    And header Authorization = '<Authorization>'
    And header botId = '<botId>'
    And header accountId = '<accountId>'
    And header koreUserId = '<koreUserId>'
    And request
      """
      {
        "customerId": <customerId>,
        "sourceAccountId": "<sourceAccountId>",
        "amount": "<amount>",
        "currency": "<currency>",
        "image": {
          "frontImage": "<frontImage>",
          "backImage": "<backImage>"
        }
      }
      """
    When method POST
    Then status 404
    And match response.err.message == '#string'

    Examples:
      | Authorization | botId       | accountId  | koreUserId | customerId | sourceAccountId | amount  | currency | frontImage         | backImage          |
      | Bearer abc123 | sampleBotId | invalidAcc | sampleUser |    1045300 |         1042345 | 1042222 | USD      | https://google.com | https://google.com |
