# ********RoostGPT********

# Test generated by RoostGPT for test karate_open_testing using AI Type Azure Open AI and AI Model roostgpt-4-32k
# 
# Feature file generated for /deposit_post for http method type POST 
# RoostTestHash=70db6d5eac
# 
# 

# ********RoostGPT********
Feature: Deposit API Tests

  Background:
    * def urlBase = karate.properties['URL_BASE']
    * url urlBase

  Scenario Outline: Valid deposit request
    Given path '/deposit'
    And request """ 
    { 
      customerId: <customerId>, 
      sourceAccountId: <sourceAccountId>, 
      amount: <amount>, 
      currency: <currency>, 
      image: { 
        frontImage: <frontImage>, 
        backImage: <backImage>
      } 
    } 
    """
    And header Authorization = <Authorization>
    And header botId = <botId>
    And header accountId = <accountId>
    And header koreUserId = <koreUserId>
    When method POST
    Then status 200
    And match response == '#object'

    Examples:
      | customerId | sourceAccountId | amount | currency | frontImage           | backImage            | Authorization  | botId    | accountId | koreUserId |
      |    1045300 | "1042345"       | "1500" | "USD"    | "https://google.com" | "https://google.com" | "Bearer token" | "bot123" | "acc123"  | "user123"  |

  Scenario: Unauthorized deposit request
    Given path '/deposit'
    And request """ 
    { 
      customerId: 1045300, 
      sourceAccountId: "1042345", 
      amount: "1500", 
      currency: "USD", 
      image: { 
        frontImage: "https://google.com", 
        backImage: "https://google.com" 
      } 
    } 
    """
    And header Authorization = 'invalid-token'
    And header botId = 'bot123'
    And header accountId = 'acc123'
    And header koreUserId = 'user123'
    When method POST
    Then status 401
    And match response.err == '#object'
    And match response.err.message == '#string'

  Scenario: Deposit request to an invalid account
    Given path '/deposit'
    And request """ 
    { 
      customerId: 9999999, 
      sourceAccountId: "invalid", 
      amount: "1000", 
      currency: "USD", 
      image: { 
        frontImage: "https://google.com", 
        backImage: "https://google.com" 
      } 
    } 
    """
    And header Authorization = 'Bearer token'
    And header botId = 'bot123'
    And header accountId = 'invalid_account'
    And header koreUserId = 'user123'
    When method POST
    Then status 404
    And match response.err == '#object'
    And match response.err.message == '#string'
