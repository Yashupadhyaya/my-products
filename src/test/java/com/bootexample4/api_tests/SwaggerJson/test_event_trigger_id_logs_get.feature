# ********RoostGPT********

# Test generated by RoostGPT for test test-roostapispec-1 using AI Type  and AI Model 
# 
# Feature file generated for /test/event/{trigger_id}/logs_get for http method type GET 
# RoostTestHash=053c7d36b6
# 
# 

# ********RoostGPT********
Feature: Test GET /test/event/{trigger_id}/logs endpoint

  Background:
    * def urlBase = karate.properties['url.base'] || karate.get('urlBase', 'http://localhost:4010')
    * url urlBase
    * def authToken = karate.properties['AUTH_TOKEN']

  Scenario Outline: Get logs for a trigger
    Given path '/test/event', trigger_id, 'logs'
    And header Authorization = 'Bearer ' + authToken
    When method GET
    Then status 200
    And match response == '#object'

    Examples:
      | read('test_event_trigger_id_logs_get.csv') |

  Scenario Outline: Get logs for a trigger - Error responses
    Given path '/test/event', trigger_id, 'logs'
    And header Authorization = 'Bearer ' + authToken
    When method GET
    Then status <status_code>
    And match response contains
      """
      {
        code: '#number',
        timestamp: '#string',
        path: '#string',
        method: '#string',
        message: '#string'
      }
      """
    And match response.code == <status_code>
    And match response.path contains '/test/event/'
    And match response.method == 'GET'

    Examples:
      | read('test_event_trigger_id_logs_get.csv') |

  Scenario: Get logs for a trigger - Unauthorized
    Given path '/test/event/trigger1/logs'
    When method GET
    Then status 401
    And match response contains
      """
      {
        code: '#number',
        timestamp: '#string',
        path: '#string',
        method: '#string',
        message: '#string'
      }
      """
    And match response.code == 401
    And match response.path contains '/test/event/'
    And match response.method == 'GET'
