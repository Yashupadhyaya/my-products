# ********RoostGPT********

# Test generated by RoostGPT for test test-roostapispec-1 using AI Type Claude AI and AI Model claude-3-5-sonnet-20240620
# 
# Feature file generated for /test/event/{trigger_id}/logs_get for http method type GET 
# RoostTestHash=053c7d36b6
# 
# 

# ********RoostGPT********
Feature: Test RoostGPT API - Get Logs for Event Trigger

  Background:
    * def urlBase = karate.properties['url.base'] || karate.get('urlBase', 'http://localhost:4010')
    * url urlBase
    * def authToken = karate.properties['AUTH_TOKEN']

  Scenario Outline: Get logs for event trigger with different trigger IDs
    Given path '/test/event', trigger_id, 'logs'
    And header Authorization = 'Bearer ' + authToken
    When method GET
    Then status 200
    And match response == '#object'

    Examples:
      | read('test_event_trigger_id_logs_get.csv') |

  Scenario: Get logs for event trigger with invalid trigger ID
    Given path '/test/event', 'invalid_trigger', 'logs'
    And header Authorization = 'Bearer ' + authToken
    When method GET
    Then status 404
    And match response ==
      """
      {
        code: 404,
        timestamp: '#string',
        path: '/application/client/git/eaas/trigger',
        method: '#enum',
        message: 'Not found'
      }
      """
    And match response.timestamp == '#regex \\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(\\.\\d{3})?Z'
    And match response.method == '#? _ == "GET" || _ == "DELETE" || _ == "HEAD" || _ == "OPTIONS" || _ == "POST" || _ == "PUT" || _ == "PATCH" || _ == "PURGE" || _ == "LINK" || _ == "UNLINK"'

  Scenario: Attempt to get logs without authorization
    Given path '/test/event', 'trigger1', 'logs'
    When method GET
    Then status 401

  Scenario: Attempt to get logs with invalid authorization
    Given path '/test/event', 'trigger1', 'logs'
    And header Authorization = 'Bearer invalid_token'
    When method GET
    Then status 401
