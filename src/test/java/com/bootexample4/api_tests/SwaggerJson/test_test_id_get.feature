# ********RoostGPT********

# Test generated by RoostGPT for test test-roostapispec-1 using AI Type Claude AI and AI Model claude-3-5-sonnet-20240620
# 
# Feature file generated for /test/{test_id}_get for http method type GET 
# RoostTestHash=7f22b8b745
# 
# 

# ********RoostGPT********
Feature: Test API endpoint /test/{test_id}

  Background:
    * def urlBase = karate.properties['url.base'] || karate.get('urlBase', 'http://localhost:4010')
    * url urlBase
    * def authToken = karate.properties['AUTH_TOKEN']

  Scenario Outline: Get one test by ID
    Given path '/test', <test_id>
    And header Authorization = 'Bearer ' + authToken
    When method GET
    Then status 200

    Examples:
      | read('test_test_id_get.csv') |

  Scenario: Get one test with invalid ID
    Given path '/test/invalid_id'
    And header Authorization = 'Bearer ' + authToken
    When method GET
    Then status 404
    And match response ==
      """
      {
        "code": 404,
        "timestamp": "#string",
        "path": "/test/invalid_id",
        "method": "GET",
        "message": "Not found"
      }
      """
    And match response.timestamp == '#regex \\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(\\.\\d{3})?Z'
    And match response.code == '#number'
    And match response.path == '#string'
    And match response.method == '#? _ == "GET" || _ == "DELETE" || _ == "HEAD" || _ == "OPTIONS" || _ == "POST" || _ == "PUT" || _ == "PATCH" || _ == "PURGE" || _ == "LINK" || _ == "UNLINK"'
    And match response.message == '#string'

  Scenario: Get one test without authorization
    Given path '/test/test_id'
    When method GET
    Then status 401
