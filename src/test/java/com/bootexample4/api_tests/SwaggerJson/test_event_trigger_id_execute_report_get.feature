# ********RoostGPT********

# Test generated by RoostGPT for test test-roostapispec-1 using AI Type  and AI Model 
# 
# Feature file generated for /test/event/{trigger_id}/execute/report_get for http method type GET 
# RoostTestHash=25919140f7
# 
# 

# ********RoostGPT********
Feature: Test Execution Report API

  Background:
    * def urlBase = karate.properties['url.base'] || karate.get('urlBase', 'http://localhost:4010')
    * url urlBase
    * def authToken = karate.properties['AUTH_TOKEN']

  Scenario Outline: Get Test Execution Report
    Given path '/test/event', '<trigger_id>', 'execute/report'
    And param file_choice = '<file_choice>'
    And param file_path = '<file_path>'
    And header Authorization = 'Bearer ' + authToken
    When method GET
    Then status 200
    And match response == '#object'
    And match header Content-Type == 'application/json'

    Examples:
      | read('test_event_trigger_id_execute_report_get.csv') |

  Scenario Outline: Test Execution Report - Error Responses
    Given path '/test/event', '<trigger_id>', 'execute/report'
    And param file_choice = '<file_choice>'
    And param file_path = '<file_path>'
    And header Authorization = 'Bearer ' + authToken
    When method GET
    Then status <status_code>
    And match response ==
      """
      {
        code: '#number',
        timestamp: '#string',
        path: '#string',
        method: '#string',
        message: '#string'
      }
      """
    And match response.code == <status_code>
    And match response.path contains '/test/event'
    And match response.method == 'GET'

    Examples:
      | read('test_event_trigger_id_execute_report_get.csv') |

  Scenario: Test Execution Report - Missing Required Parameters
    Given path '/test/event', 'trig123', 'execute/report'
    And header Authorization = 'Bearer ' + authToken
    When method GET
    Then status 400
    And match response ==
      """
      {
        code: '#number',
        timestamp: '#string',
        path: '#string',
        method: '#string',
        message: '#string'
      }
      """
    And match response.code == 400
    And match response.path contains '/test/event'
    And match response.method == 'GET'
