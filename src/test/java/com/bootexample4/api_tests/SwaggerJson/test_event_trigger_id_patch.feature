# ********RoostGPT********

# Test generated by RoostGPT for test test-roostapispec-1 using AI Type  and AI Model 
# 
# Feature file generated for /test/event/{trigger_id}_patch for http method type PATCH 
# RoostTestHash=1f062a2277
# 
# 

# ********RoostGPT********
Feature: Test GPT Controller - Edit Trigger Event

  Background:
    * def urlBase = karate.properties['url.base'] || karate.get('urlBase', 'http://localhost:4010')
    * url urlBase
    * def authToken = karate.properties['AUTH_TOKEN']

  Scenario Outline: Edit Trigger Event Successfully
    Given path '/test/event', <trigger_id>
    And header Authorization = 'Bearer ' + authToken
    And request
      """
      {
        "status": <status>,
        "status_details": <status_details>,
        "completion_time": <completion_time>,
        "modification_time": <modification_time>,
        "test_endpoints": <test_endpoints>,
        "test_report": <test_report>
      }
      """
    When method PUT
    Then status 200

    Examples:
      | read('test_event_trigger_id_patch.csv') |

  Scenario: Edit Trigger Event with Invalid ID
    Given path '/test/event', 'invalid_id'
    And header Authorization = 'Bearer ' + authToken
    And request
      """
      {
        "status": "pending"
      }
      """
    When method PUT
    Then status 404
    And match response ==
      """
      {
        "code": 404,
        "timestamp": '#string',
        "path": '/application/client/git/eaas/trigger',
        "method": '#regex GET|DELETE|HEAD|OPTIONS|POST|PUT|PATCH|PURGE|LINK|UNLINK',
        "message": 'Not found'
      }
      """
    And match response.timestamp == '#regex \\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(\\.\\d{3})?Z'
