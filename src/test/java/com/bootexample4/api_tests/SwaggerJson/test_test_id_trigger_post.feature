# ********RoostGPT********

# Test generated by RoostGPT for test test-roostapispec-1 using AI Type  and AI Model 
# 
# Feature file generated for /test/{test_id}/trigger_post for http method type POST 
# RoostTestHash=bce43bf0f9
# 
# 

# ********RoostGPT********
Feature: Test Trigger API

  Background:
    * def urlBase = karate.properties['url.base'] || karate.get('urlBase', 'http://localhost:4010')
    * url urlBase
    * def authToken = karate.properties['AUTH_TOKEN']

  Scenario Outline: Trigger a test with different test IDs
    Given path '/test', testId, 'trigger'
    And header Authorization = 'Bearer ' + authToken
    When method POST
    Then status 201

    Examples:
      | read('test_test_id_trigger_post.csv') |

  Scenario: Attempt to trigger a test with invalid test ID
    Given path '/test', 'invalid-test-id', 'trigger'
    And header Authorization = 'Bearer ' + authToken
    When method POST
    Then status 404
    And match response ==
      """
      {
        code: 404,
        timestamp: '#string',
        path: '/application/client/git/eaas/trigger',
        method: '#? _.includes(["GET","DELETE","HEAD","OPTIONS","POST","PUT","PATCH","PURGE","LINK","UNLINK"])',
        message: 'Not found'
      }
      """
    And match response.timestamp == '#regex \\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(\\.\\d{3})?Z'

  Scenario: Attempt to trigger a test without authorization
    Given path '/test', 'test123', 'trigger'
    When method POST
    Then status 401

  Scenario: Attempt to trigger a test with invalid authorization
    Given path '/test', 'test123', 'trigger'
    And header Authorization = 'Bearer invalid_token'
    When method POST
    Then status 401
