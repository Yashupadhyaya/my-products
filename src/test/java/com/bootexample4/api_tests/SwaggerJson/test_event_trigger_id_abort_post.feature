# ********RoostGPT********

# Test generated by RoostGPT for test test-roostapispec-1 using AI Type  and AI Model 
# 
# Feature file generated for /test/event/{trigger_id}/abort_post for http method type POST 
# RoostTestHash=33dc9f1c82
# 
# 

# ********RoostGPT********
Feature: Abort Trigger API

  Background:
    * def urlBase = karate.properties['url.base'] || karate.get('urlBase', 'http://localhost:4010')
    * url urlBase
    * def authToken = karate.properties['AUTH_TOKEN']

  Scenario Outline: Abort trigger with valid trigger_id
    Given path '/test/event', '<trigger_id>', 'abort'
    And header Authorization = 'Bearer ' + authToken
    When method POST
    Then status 201
    And match response == {}

    Examples:
      | read('test_event_trigger_id_abort_post.csv') |

  Scenario Outline: Abort trigger with invalid trigger_id
    Given path '/test/event', '<trigger_id>', 'abort'
    And header Authorization = 'Bearer ' + authToken
    When method POST
    Then status 404
    And match response contains
      """
      {
        code: 404,
        timestamp: '#string',
        path: '#string',
        method: '#string',
        message: '#string'
      }
      """
    And match response.code == 404
    And match response.timestamp contains '20'
    And match response.path contains '/test/event/'
    And match response.method == 'POST'
    And match response.message == 'Not found'

    Examples:
      | trigger_id |
      | invalid1   |
      |     123456 |

  Scenario: Abort trigger without authorization
    Given path '/test/event', 'abc123', 'abort'
    When method POST
    Then status 401

  Scenario: Abort trigger with invalid HTTP method
    Given path '/test/event', 'abc123', 'abort'
    And header Authorization = 'Bearer ' + authToken
    When method GET
    Then status 405
