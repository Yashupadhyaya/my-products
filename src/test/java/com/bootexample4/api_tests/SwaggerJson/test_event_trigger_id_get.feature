# ********RoostGPT********

# Test generated by RoostGPT for test test-roostapispec-1 using AI Type Claude AI and AI Model claude-3-5-sonnet-20240620
# 
# Feature file generated for /test/event/{trigger_id}_get for http method type GET 
# RoostTestHash=52b8e08630
# 
# 

# ********RoostGPT********
Feature: Test GPT Controller - Get One Event

  Background:
    * def urlBase = karate.properties['url.base'] || karate.get('urlBase', 'http://localhost:4010')
    * url urlBase
    * def authToken = karate.properties['AUTH_TOKEN']

  Scenario Outline: Get one event with valid trigger_id
    Given path '/test/event', <trigger_id>
    And header Authorization = 'Bearer ' + authToken
    When method GET
    Then status 200
    And match response == '#object'

    Examples:
      | read('test_event_trigger_id_get.csv') |

  Scenario Outline: Get one event with invalid trigger_id
    Given path '/test/event', <trigger_id>
    And header Authorization = 'Bearer ' + authToken
    When method GET
    Then status 404
    And match response contains
      """
      {
        code: '#number',
        timestamp: '#string',
        path: '#string',
        method: '#string',
        message: '#string'
      }
      """
    And match response.code == 404
    And match response.path contains '/application/client/git/eaas/trigger'
    And match response.method == 'GET'
    And match response.message == 'Not found'

    Examples:
      | trigger_id    |
      | 'invalid_id1' |
      | 'invalid_id2' |

  Scenario: Get one event without authorization
    Given path '/test/event', 'event1'
    When method GET
    Then status 401

  Scenario: Get one event with empty trigger_id
    Given path '/test/event', ''
    And header Authorization = 'Bearer ' + authToken
    When method GET
    Then status 400

  Scenario: Get one event with unsupported HTTP method
    Given path '/test/event', 'event1'
    And header Authorization = 'Bearer ' + authToken
    When method POST
    Then status 405
