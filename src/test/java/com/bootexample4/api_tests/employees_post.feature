# ********RoostGPT********

# Test generated by RoostGPT for test testing-karate1 using AI Type Open AI and AI Model gpt-4
# 
# Feature file generated for /employees_post for http method type POST 
# RoostTestHash=b517afeac4
# 
# 

# ********RoostGPT********
Feature: Employee Management

    Background:
        * def urlBase = karate.properties['url.base'] || karate.get('urlBase', 'http://localhost:8080')
        * url urlBase
        * def authToken = karate.properties['AUTH_TOKEN']
        * def headers = {Authorization: '#(authToken)'}

    Scenario Outline: Add an employee to the system
        Given path '/employees'
        And request
            """
            {
                "id": "<id>",
                "jobTitle": "<jobTitle>",
                "name": "<name>",
                "email": "<email>"
            }
            """
        And headers headers
        When method post
        Then match responseStatus == <statusCode>
        And match response contains {description: '#(description)'}

        Examples:
            | id                                     | jobTitle         | name         | email                      | statusCode | description                           |
            | 'd290f1ee-6c54-4b01-90e6-d701748f0851' | 'System Analyst' | 'John Smith' | 'john.smith@acme-corp.com' | 201        | 'employee created'                    |
            | 'd290f1ee-6c54-4b01-90e6-d701748f0852' | ''               | 'John Doe'   | 'john.doe@acme-corp.com'   | 400        | 'invalid input, object invalid'       |
            | 'd290f1ee-6c54-4b01-90e6-d701748f0851' | 'System Analyst' | 'John Smith' | 'john.smith@acme-corp.com' | 409        | 'an existing employee already exists' |
