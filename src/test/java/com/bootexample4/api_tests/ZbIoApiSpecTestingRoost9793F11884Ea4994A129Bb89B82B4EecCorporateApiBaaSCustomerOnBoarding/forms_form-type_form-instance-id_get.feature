# ********RoostGPT********

# Test generated by RoostGPT for test Test-5619 using AI Type  and AI Model 
# 
# Feature file generated for /forms/{form-type}/{form-instance-id}_get for http method type GET 
# RoostTestHash=75dc581068
# 
# 

# ********RoostGPT********
Feature: Testing Form Type API

  Background:
    * def urlBase = karate.properties['url.base'] || karate.get('urlBase', 'http://localhost:4010')
    * url urlBase
    * def authToken = karate.properties['AUTH_TOKEN']
    * def uuid = java.util.UUID.randomUUID().toString()
    * configure headers = { 'Authorization': '#(authToken)', 'X-HSBC-Request-Correlation-Id': '#(uuid)' }

  Scenario Outline: Test GET /forms/{form-type}/{form-instance-id} endpoint with different form types and instance ids
    Given path '/forms', '<form-type>', '<form-instance-id>'
    When method get
    Then status <status_code>
    And match response.status == '<status>'
    And match response.messages == '#object'
    And match response.views == '#array'
    And match response.count == '#number'

    Examples:
      | read('forms_form-type_form-instance-id_get.csv') |

  Scenario Outline: Test GET /forms/{form-type}/{form-instance-id} endpoint error responses
    Given path '/forms', '<form-type>', '<form-instance-id>'
    When method get
    Then status <status_code>
    And match response.type == '<type>'
    And match response.title == '<title>'
    And match response.detail == '<detail>'
    And match response.errors == '#array'

    Examples:
      | read('forms_form-type_form-instance-id_get.csv') |
