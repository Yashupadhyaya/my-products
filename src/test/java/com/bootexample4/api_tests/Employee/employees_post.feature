# ********RoostGPT********

# Test generated by RoostGPT for test artillery-test using AI Type  and AI Model 
# 
# Feature file generated for /employees_post for http method type POST 
# RoostTestHash=b517afeac4
# 
# 

# ********RoostGPT********
Feature: Employee Management

  Background:
    * def urlBase = karate.properties['acbakcvioqjcvq_URL_BASE'] || karate.get('urlBase', 'http://localhost:4010')
    * url urlBase
    * configure headers = { Authorization: #(karate.properties['acbakcvioqjcvq_AUTH_TOKEN']) }

  Scenario Outline: Add an employee
    Given path '/employees'
    And request { id: '<id>', jobTitle: '<jobTitle>', name: '<name>', email: '<email>' }
    When method post
    Then status 201
    And match response == { description: '#string' }

  Scenario Outline: Invalid input, object invalid
    Given path '/employees'
    And request { id: '<id>', jobTitle: '<jobTitle>', name: '<name>', email: '<email>' }
    When method post
    Then status 400
    And match response == { description: '#string' }

  Scenario Outline: An existing employee already exists
    Given path '/employees'
    And request { id: '<id>', jobTitle: '<jobTitle>', name: '<name>', email: '<email>' }
    When method post
    Then status 409
    And match response == { description: '#string' }

    Examples:
      | id                                     | jobTitle         | name         | email                      |
      | 'd290f1ee-6c54-4b01-90e6-d701748f0851' | 'System Analyst' | 'John Smith' | 'john.smith@acme-corp.com' |
