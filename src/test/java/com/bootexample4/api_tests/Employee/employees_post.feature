# ********RoostGPT********

# Test generated by RoostGPT for test artillery-test using AI Type  and AI Model 
# 
# Feature file generated for /employees_post for http method type POST 
# RoostTestHash=b517afeac4
# 
# 

# ********RoostGPT********
Feature: Employee Management

  Background:
    * def urlBase = karate.properties['url.base'] || karate.get('urlBase', 'http://localhost:4010')
    * url urlBase
    * configure headers = { Authorization: #(karate.properties['AUTH_TOKEN']) }
  # This scenario outline is for adding an employee with valid data

  Scenario Outline: adds an employee
    Given path '/employees'
    And request
      """
      {
        'id': '<id>',
        'jobTitle': '<jobTitle>',
        'name': '<name>',
        'email': '<email>'
      }
      """
    When method post
    Then status 201

    Examples:
      | read('employees_post.csv') |
  # This scenario is for handling invalid input

  Scenario: invalid input, object invalid
    Given path '/employees'
    And request { }
    When method post
    Then status 400
  # This scenario is for handling an existing employee

  Scenario: an existing employee already exists
    Given path '/employees'
    And request
      """
      {
        'id': 'd290f1ee-6c54-4b01-90e6-d701748f0851',
        'jobTitle': 'System Analyst',
        'name': 'John Smith',
        'email': 'john.smith@acme-corp.com'
      }
      """
    When method post
    Then status 409
