# ********RoostGPT********

# Test generated by RoostGPT for test artillery-test using AI Type  and AI Model 
# 
# Feature file generated for /employees_post for http method type POST 
# RoostTestHash=b517afeac4
# 
# 

# ********RoostGPT********
Feature: Employee Management

  Background:
    * def urlBase = karate.properties['url.base'] || karate.get('urlBase', 'http://localhost:4010')
    * url urlBase
    * configure headers = { Authorization: '#(karate.properties['AUTH_TOKEN'])' }

  Scenario Outline: adds an employee
    Given path '/employees'
    And request """
    { 
      id: '#(id)', 
      jobTitle: '#(jobTitle)', 
      name: '#(name)', 
      email: '#(email)' 
    }
    """
    When method post
    Then status 201
    And match response == """
    { 
      id: '#string', 
      jobTitle: '#string', 
      name: '#string', 
      email: '#string' 
    }
    """

    Examples:
      | id                                     | jobTitle         | name         | email                      |
      | 'd290f1ee-6c54-4b01-90e6-d701748f0851' | 'System Analyst' | 'John Smith' | 'john.smith@acme-corp.com' |

  Scenario: invalid input, object invalid
    Given path '/employees'
    And request """
    { 
      id: '1234', 
      jobTitle: 'System Analyst', 
      name: 'John Smith', 
      email: 'john.smith@acme-corp.com' 
    }
    """
    When method post
    Then status 400

  Scenario: an existing employee already exists
    Given path '/employees'
    And request """
    { 
      id: 'd290f1ee-6c54-4b01-90e6-d701748f0851', 
      jobTitle: 'System Analyst', 
      name: 'John Smith', 
      email: 'john.smith@acme-corp.com' 
    }
    """
    When method post
    Then status 409
