# ********RoostGPT********

# Test generated by RoostGPT for test testing-karate-test using AI Type Azure Open AI and AI Model roostgpt-4-32k
# 
# Feature file generated for /employees_post for http method type POST 
# RoostTestHash=b517afeac4
# 
# 

# ********RoostGPT********
Feature: Employee API Validation

  Background:
    * def urlBase = karate.properties['API_HOST']
    * url urlBase
    * configure headers = { "Accept": "application/json", "Authorization": '{{$processEnvironment.AUTH_TOKEN}}' }

  Scenario Outline: Add Employee with valid data
    Given url '/employees'
    And request
      """
        {
          "email": <email>,
          "jobTitle": <jobTitle>,
          "name": <name>
        }
      """
    When method POST
    Then status 201
    And match response == '##object'

    Examples:
      | read('employees_post.csv') |

  Scenario: Add Employee with missing required fields
    Given url '/employees'
    And request
      """
        {
          "jobTitle": "System Analyst"
        }
      """
    When method POST
    Then status != 201
    And assert responseStatus == 400
    And match response.error == '##object'
    And match response.error.code == '##string'
    And match response.error.message == '##string'

  Scenario Outline: Add Employee with existing employee details
    Given url '/employees'
    And request
      """
        {
          "email": <email>,
          "jobTitle": <jobTitle>,
          "name": <name>
        }
      """
    When method POST
    Then status != 201
    And assert responseStatus == 409
    And match response.error == '##object'
    And match response.error.code == '##string'
    And match response.error.message == '##string'

    Examples:
      | email                        | jobTitle    | name            |
      | 'existing.email@company.com' | 'Team Lead' | 'Existing User' |
