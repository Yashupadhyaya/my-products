/*
Test generated by RoostGPT for test testing-integration-test using AI Type Open AI and AI Model gpt-4

{
  background: 'Given the base URL is "http://localhost:8080"',
  rule: null,
  scenario: 'Create my account \n' +
    '    When the client sends a POST request "/accounts" with the accounts_body payload\n' +
    '    Then create an account with the specified informatio\n' +
    '    And verify the account created using GET request for "/me"',
  title: 'Create my account'
}

*/
package com.bootexample4.RoostTest;

import io.restassured.RestAssured;
import io.restassured.http.ContentType;
import io.restassured.response.Response;
import org.junit.jupiter.api.Test;

import static io.restassured.RestAssured.given;
import static org.hamcrest.Matchers.equalTo;

public class CreateMyAccountTest {
    @Test
    public void createMyAccount() {
        RestAssured.baseURI = System.getenv("API_HOST");
        String payload = "{...}"; // Add the required payload here
        String headers = "{...}"; // Add the required headers here

        // POST request to create an account
        given()
            .header("Content-Type", "application/json")
            .body(payload)
            .when()
            .post("/accounts")
            .then()
            .assertThat()
            .statusCode(201)
            .contentType(ContentType.JSON)
            .body("message", equalTo("Account created successfully"))
            .extract()
            .response();

        // GET request to verify the created account
        Response response = given()
            .header("Content-Type", "application/json")
            .when()
            .get("/me")
            .then()
            .assertThat()
            .statusCode(200)
            .contentType(ContentType.JSON)
            .body("account.name", equalTo("new account name")) // replace "new account name" with the actual account name
            .extract()
            .response();
    }
}
