// ********RoostGPT********
/*
Test generated by RoostGPT for test postman-test using AI Type Open AI and AI Model gpt-4

Test generated for /pet/findByStatus_get for http method type GET in rest-assured framework

RoostTestHash=a8d5f26364


*/

// ********RoostGPT********
package com.bootexample4.RoostTest;
import io.restassured.RestAssured;
import io.restassured.path.json.JsonPath;
import io.restassured.http.ContentType;
import io.restassured.response.Response;
import org.junit.Before;
import org.junit.jupiter.api.Test;
import static io.restassured.RestAssured.given;
import static org.junit.Assert.*;
import java.io.BufferedReader;
import java.io.File;
import java.io.IOException;
import java.util.HashMap;
import java.util.Map;
import java.util.ArrayList;
import java.util.List;
import org.hamcrest.MatcherAssert;
import static org.hamcrest.Matchers.*;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.json.JSONObject;
import org.json.XML;
import org.json.JSONException;

public class findByStatusGetTest {

    List<Map<String, String>> envList = new ArrayList<>();


    @Before
    public void setUp() {
      TestdataLoader dataloader = new TestdataLoader();
      envList = dataloader.loadData("src/test/java/com/bootexample4/RoostTest/findByStatusGetTest.csv");
    }

  
    @Test  
    public void findByStatusGet_Test() {
        this.setUp();
        for (Map<String, String> testData : envList) {
          RestAssured.baseURI = "/api/v3";  
  
                Response responseObj = given()
				.queryParam("status", testData.get("status") != null ? testData.get("status") : "")
                .when()
                .get("/pet/findByStatus")  
                .then() 
                .extract().response(); 
              JsonPath response;
              String contentType = responseObj.getContentType();
              if (contentType.contains("application/xml") || contentType.contains("text/xml")) {
                String xmlResponse = responseObj.asString();
                JSONObject jsonResponse = XML.toJSONObject(xmlResponse);
                JSONObject jsonData = jsonResponse.getJSONObject("xml");
                String jsonString = jsonData.toString();
                response = new JsonPath(jsonString);
        
              } else {  
                response = responseObj.jsonPath(); 
              }  
         
                if (responseObj.statusCode() == 200) {
					System.out.println("Description: successful operation");
for (int i = 0; i < response.getList("").size(); i++) {
        
      if (response.get(""+ i +".id") != null) {        
      if (response.get(""+ i +".idid") != null) {  
                MatcherAssert.assertThat(response.get(""+ i +".idid"), instanceOf(Integer.class));  
          }
        
      if (response.get(""+ i +".idname") != null) {  
                MatcherAssert.assertThat(response.get(""+ i +".idname"), instanceOf(String.class));  
          }
        
      if (response.get(""+ i +".idcategory") != null) {        
      if (response.get(""+ i +".idcategoryid") != null) {        
      if (response.get(""+ i +".idcategoryidid") != null) {  
                MatcherAssert.assertThat(response.get(""+ i +".idcategoryidid"), instanceOf(Integer.class));  
          }
        
      if (response.get(""+ i +".idcategoryidname") != null) {  
                MatcherAssert.assertThat(response.get(""+ i +".idcategoryidname"), instanceOf(String.class));  
          }
  
          }
        
      if (response.get(""+ i +".idcategoryname") != null) {        
      if (response.get(""+ i +".idcategorynameid") != null) {  
                MatcherAssert.assertThat(response.get(""+ i +".idcategorynameid"), instanceOf(Integer.class));  
          }
        
      if (response.get(""+ i +".idcategorynamename") != null) {  
                MatcherAssert.assertThat(response.get(""+ i +".idcategorynamename"), instanceOf(String.class));  
          }
  
          }
  
          }
        
      if (response.get(""+ i +".idphotoUrls") != null) {        
                for (int ii = 0; ii < response.getList(""+ i +".idphotoUrls").size(); ii++) {        
                  }      
                MatcherAssert.assertThat(response.getList(""+ i +".idphotoUrls"), instanceOf(List.class));
  
          }
        
      if (response.get(""+ i +".idtags") != null) {        
                for (int ii = 0; ii < response.getList(""+ i +".idtags").size(); ii++) {        
      if (response.get(""+ i +".idtags["+ ii +"].idid") != null) {  
                MatcherAssert.assertThat(response.get(""+ i +".idtags["+ ii +"].idid"), instanceOf(Integer.class));  
          }
        
      if (response.get(""+ i +".idtags["+ ii +"].idname") != null) {  
                MatcherAssert.assertThat(response.get(""+ i +".idtags["+ ii +"].idname"), instanceOf(String.class));  
          }
        
      if (response.get(""+ i +".idtags["+ ii +"].nameid") != null) {  
                MatcherAssert.assertThat(response.get(""+ i +".idtags["+ ii +"].nameid"), instanceOf(Integer.class));  
          }
        
      if (response.get(""+ i +".idtags["+ ii +"].namename") != null) {  
                MatcherAssert.assertThat(response.get(""+ i +".idtags["+ ii +"].namename"), instanceOf(String.class));  
          }
        
                  }      
                MatcherAssert.assertThat(response.getList(""+ i +".idtags"), instanceOf(List.class));
  
          }
        
      if (response.get(""+ i +".idstatus") != null) {  
                MatcherAssert.assertThat(response.get(""+ i +".idstatus"), instanceOf(String.class));  
                MatcherAssert.assertThat(response.getString(""+ i +".idstatus"), anyOf(equalTo("available"), equalTo("pending"), equalTo("sold")));
  
          }
  
          }
        
      if (response.get(""+ i +".name") != null) {        
      if (response.get(""+ i +".nameid") != null) {  
                MatcherAssert.assertThat(response.get(""+ i +".nameid"), instanceOf(Integer.class));  
          }
        
      if (response.get(""+ i +".namename") != null) {  
                MatcherAssert.assertThat(response.get(""+ i +".namename"), instanceOf(String.class));  
          }
        
      if (response.get(""+ i +".namecategory") != null) {        
      if (response.get(""+ i +".namecategoryid") != null) {        
      if (response.get(""+ i +".namecategoryidid") != null) {  
                MatcherAssert.assertThat(response.get(""+ i +".namecategoryidid"), instanceOf(Integer.class));  
          }
        
      if (response.get(""+ i +".namecategoryidname") != null) {  
                MatcherAssert.assertThat(response.get(""+ i +".namecategoryidname"), instanceOf(String.class));  
          }
  
          }
        
      if (response.get(""+ i +".namecategoryname") != null) {        
      if (response.get(""+ i +".namecategorynameid") != null) {  
                MatcherAssert.assertThat(response.get(""+ i +".namecategorynameid"), instanceOf(Integer.class));  
          }
        
      if (response.get(""+ i +".namecategorynamename") != null) {  
                MatcherAssert.assertThat(response.get(""+ i +".namecategorynamename"), instanceOf(String.class));  
          }
  
          }
  
          }
        
      if (response.get(""+ i +".namephotoUrls") != null) {        
                for (int ii = 0; ii < response.getList(""+ i +".namephotoUrls").size(); ii++) {        
                  }      
                MatcherAssert.assertThat(response.getList(""+ i +".namephotoUrls"), instanceOf(List.class));
  
          }
        
      if (response.get(""+ i +".nametags") != null) {        
                for (int ii = 0; ii < response.getList(""+ i +".nametags").size(); ii++) {        
      if (response.get(""+ i +".nametags["+ ii +"].idid") != null) {  
                MatcherAssert.assertThat(response.get(""+ i +".nametags["+ ii +"].idid"), instanceOf(Integer.class));  
          }
        
      if (response.get(""+ i +".nametags["+ ii +"].idname") != null) {  
                MatcherAssert.assertThat(response.get(""+ i +".nametags["+ ii +"].idname"), instanceOf(String.class));  
          }
        
      if (response.get(""+ i +".nametags["+ ii +"].nameid") != null) {  
                MatcherAssert.assertThat(response.get(""+ i +".nametags["+ ii +"].nameid"), instanceOf(Integer.class));  
          }
        
      if (response.get(""+ i +".nametags["+ ii +"].namename") != null) {  
                MatcherAssert.assertThat(response.get(""+ i +".nametags["+ ii +"].namename"), instanceOf(String.class));  
          }
        
                  }      
                MatcherAssert.assertThat(response.getList(""+ i +".nametags"), instanceOf(List.class));
  
          }
        
      if (response.get(""+ i +".namestatus") != null) {  
                MatcherAssert.assertThat(response.get(""+ i +".namestatus"), instanceOf(String.class));  
                MatcherAssert.assertThat(response.getString(""+ i +".namestatus"), anyOf(equalTo("available"), equalTo("pending"), equalTo("sold")));
  
          }
  
          }
        
      if (response.get(""+ i +".category") != null) {        
      if (response.get(""+ i +".categoryid") != null) {  
                MatcherAssert.assertThat(response.get(""+ i +".categoryid"), instanceOf(Integer.class));  
          }
        
      if (response.get(""+ i +".categoryname") != null) {  
                MatcherAssert.assertThat(response.get(""+ i +".categoryname"), instanceOf(String.class));  
          }
        
      if (response.get(""+ i +".categorycategory") != null) {        
      if (response.get(""+ i +".categorycategoryid") != null) {        
      if (response.get(""+ i +".categorycategoryidid") != null) {  
                MatcherAssert.assertThat(response.get(""+ i +".categorycategoryidid"), instanceOf(Integer.class));  
          }
        
      if (response.get(""+ i +".categorycategoryidname") != null) {  
                MatcherAssert.assertThat(response.get(""+ i +".categorycategoryidname"), instanceOf(String.class));  
          }
  
          }
        
      if (response.get(""+ i +".categorycategoryname") != null) {        
      if (response.get(""+ i +".categorycategorynameid") != null) {  
                MatcherAssert.assertThat(response.get(""+ i +".categorycategorynameid"), instanceOf(Integer.class));  
          }
        
      if (response.get(""+ i +".categorycategorynamename") != null) {  
                MatcherAssert.assertThat(response.get(""+ i +".categorycategorynamename"), instanceOf(String.class));  
          }
  
          }
  
          }
        
      if (response.get(""+ i +".categoryphotoUrls") != null) {        
                for (int ii = 0; ii < response.getList(""+ i +".categoryphotoUrls").size(); ii++) {        
                  }      
                MatcherAssert.assertThat(response.getList(""+ i +".categoryphotoUrls"), instanceOf(List.class));
  
          }
        
      if (response.get(""+ i +".categorytags") != null) {        
                for (int ii = 0; ii < response.getList(""+ i +".categorytags").size(); ii++) {        
      if (response.get(""+ i +".categorytags["+ ii +"].idid") != null) {  
                MatcherAssert.assertThat(response.get(""+ i +".categorytags["+ ii +"].idid"), instanceOf(Integer.class));  
          }
        
      if (response.get(""+ i +".categorytags["+ ii +"].idname") != null) {  
                MatcherAssert.assertThat(response.get(""+ i +".categorytags["+ ii +"].idname"), instanceOf(String.class));  
          }
        
      if (response.get(""+ i +".categorytags["+ ii +"].nameid") != null) {  
                MatcherAssert.assertThat(response.get(""+ i +".categorytags["+ ii +"].nameid"), instanceOf(Integer.class));  
          }
        
      if (response.get(""+ i +".categorytags["+ ii +"].namename") != null) {  
                MatcherAssert.assertThat(response.get(""+ i +".categorytags["+ ii +"].namename"), instanceOf(String.class));  
          }
        
                  }      
                MatcherAssert.assertThat(response.getList(""+ i +".categorytags"), instanceOf(List.class));
  
          }
        
      if (response.get(""+ i +".categorystatus") != null) {  
                MatcherAssert.assertThat(response.get(""+ i +".categorystatus"), instanceOf(String.class));  
                MatcherAssert.assertThat(response.getString(""+ i +".categorystatus"), anyOf(equalTo("available"), equalTo("pending"), equalTo("sold")));
  
          }
  
          }
        
      if (response.get(""+ i +".photoUrls") != null) {        
      if (response.get(""+ i +".photoUrlsid") != null) {  
                MatcherAssert.assertThat(response.get(""+ i +".photoUrlsid"), instanceOf(Integer.class));  
          }
        
      if (response.get(""+ i +".photoUrlsname") != null) {  
                MatcherAssert.assertThat(response.get(""+ i +".photoUrlsname"), instanceOf(String.class));  
          }
        
      if (response.get(""+ i +".photoUrlscategory") != null) {        
      if (response.get(""+ i +".photoUrlscategoryid") != null) {        
      if (response.get(""+ i +".photoUrlscategoryidid") != null) {  
                MatcherAssert.assertThat(response.get(""+ i +".photoUrlscategoryidid"), instanceOf(Integer.class));  
          }
        
      if (response.get(""+ i +".photoUrlscategoryidname") != null) {  
                MatcherAssert.assertThat(response.get(""+ i +".photoUrlscategoryidname"), instanceOf(String.class));  
          }
  
          }
        
      if (response.get(""+ i +".photoUrlscategoryname") != null) {        
      if (response.get(""+ i +".photoUrlscategorynameid") != null) {  
                MatcherAssert.assertThat(response.get(""+ i +".photoUrlscategorynameid"), instanceOf(Integer.class));  
          }
        
      if (response.get(""+ i +".photoUrlscategorynamename") != null) {  
                MatcherAssert.assertThat(response.get(""+ i +".photoUrlscategorynamename"), instanceOf(String.class));  
          }
  
          }
  
          }
        
      if (response.get(""+ i +".photoUrlsphotoUrls") != null) {        
                for (int ii = 0; ii < response.getList(""+ i +".photoUrlsphotoUrls").size(); ii++) {        
                  }      
                MatcherAssert.assertThat(response.getList(""+ i +".photoUrlsphotoUrls"), instanceOf(List.class));
  
          }
        
      if (response.get(""+ i +".photoUrlstags") != null) {        
                for (int ii = 0; ii < response.getList(""+ i +".photoUrlstags").size(); ii++) {        
      if (response.get(""+ i +".photoUrlstags["+ ii +"].idid") != null) {  
                MatcherAssert.assertThat(response.get(""+ i +".photoUrlstags["+ ii +"].idid"), instanceOf(Integer.class));  
          }
        
      if (response.get(""+ i +".photoUrlstags["+ ii +"].idname") != null) {  
                MatcherAssert.assertThat(response.get(""+ i +".photoUrlstags["+ ii +"].idname"), instanceOf(String.class));  
          }
        
      if (response.get(""+ i +".photoUrlstags["+ ii +"].nameid") != null) {  
                MatcherAssert.assertThat(response.get(""+ i +".photoUrlstags["+ ii +"].nameid"), instanceOf(Integer.class));  
          }
        
      if (response.get(""+ i +".photoUrlstags["+ ii +"].namename") != null) {  
                MatcherAssert.assertThat(response.get(""+ i +".photoUrlstags["+ ii +"].namename"), instanceOf(String.class));  
          }
        
                  }      
                MatcherAssert.assertThat(response.getList(""+ i +".photoUrlstags"), instanceOf(List.class));
  
          }
        
      if (response.get(""+ i +".photoUrlsstatus") != null) {  
                MatcherAssert.assertThat(response.get(""+ i +".photoUrlsstatus"), instanceOf(String.class));  
                MatcherAssert.assertThat(response.getString(""+ i +".photoUrlsstatus"), anyOf(equalTo("available"), equalTo("pending"), equalTo("sold")));
  
          }
  
          }
        
      if (response.get(""+ i +".tags") != null) {        
      if (response.get(""+ i +".tagsid") != null) {  
                MatcherAssert.assertThat(response.get(""+ i +".tagsid"), instanceOf(Integer.class));  
          }
        
      if (response.get(""+ i +".tagsname") != null) {  
                MatcherAssert.assertThat(response.get(""+ i +".tagsname"), instanceOf(String.class));  
          }
        
      if (response.get(""+ i +".tagscategory") != null) {        
      if (response.get(""+ i +".tagscategoryid") != null) {        
      if (response.get(""+ i +".tagscategoryidid") != null) {  
                MatcherAssert.assertThat(response.get(""+ i +".tagscategoryidid"), instanceOf(Integer.class));  
          }
        
      if (response.get(""+ i +".tagscategoryidname") != null) {  
                MatcherAssert.assertThat(response.get(""+ i +".tagscategoryidname"), instanceOf(String.class));  
          }
  
          }
        
      if (response.get(""+ i +".tagscategoryname") != null) {        
      if (response.get(""+ i +".tagscategorynameid") != null) {  
                MatcherAssert.assertThat(response.get(""+ i +".tagscategorynameid"), instanceOf(Integer.class));  
          }
        
      if (response.get(""+ i +".tagscategorynamename") != null) {  
                MatcherAssert.assertThat(response.get(""+ i +".tagscategorynamename"), instanceOf(String.class));  
          }
  
          }
  
          }
        
      if (response.get(""+ i +".tagsphotoUrls") != null) {        
                for (int ii = 0; ii < response.getList(""+ i +".tagsphotoUrls").size(); ii++) {        
                  }      
                MatcherAssert.assertThat(response.getList(""+ i +".tagsphotoUrls"), instanceOf(List.class));
  
          }
        
      if (response.get(""+ i +".tagstags") != null) {        
                for (int ii = 0; ii < response.getList(""+ i +".tagstags").size(); ii++) {        
      if (response.get(""+ i +".tagstags["+ ii +"].idid") != null) {  
                MatcherAssert.assertThat(response.get(""+ i +".tagstags["+ ii +"].idid"), instanceOf(Integer.class));  
          }
        
      if (response.get(""+ i +".tagstags["+ ii +"].idname") != null) {  
                MatcherAssert.assertThat(response.get(""+ i +".tagstags["+ ii +"].idname"), instanceOf(String.class));  
          }
        
      if (response.get(""+ i +".tagstags["+ ii +"].nameid") != null) {  
                MatcherAssert.assertThat(response.get(""+ i +".tagstags["+ ii +"].nameid"), instanceOf(Integer.class));  
          }
        
      if (response.get(""+ i +".tagstags["+ ii +"].namename") != null) {  
                MatcherAssert.assertThat(response.get(""+ i +".tagstags["+ ii +"].namename"), instanceOf(String.class));  
          }
        
                  }      
                MatcherAssert.assertThat(response.getList(""+ i +".tagstags"), instanceOf(List.class));
  
          }
        
      if (response.get(""+ i +".tagsstatus") != null) {  
                MatcherAssert.assertThat(response.get(""+ i +".tagsstatus"), instanceOf(String.class));  
                MatcherAssert.assertThat(response.getString(""+ i +".tagsstatus"), anyOf(equalTo("available"), equalTo("pending"), equalTo("sold")));
  
          }
  
          }
        
      if (response.get(""+ i +".status") != null) {        
      if (response.get(""+ i +".statusid") != null) {  
                MatcherAssert.assertThat(response.get(""+ i +".statusid"), instanceOf(Integer.class));  
          }
        
      if (response.get(""+ i +".statusname") != null) {  
                MatcherAssert.assertThat(response.get(""+ i +".statusname"), instanceOf(String.class));  
          }
        
      if (response.get(""+ i +".statuscategory") != null) {        
      if (response.get(""+ i +".statuscategoryid") != null) {        
      if (response.get(""+ i +".statuscategoryidid") != null) {  
                MatcherAssert.assertThat(response.get(""+ i +".statuscategoryidid"), instanceOf(Integer.class));  
          }
        
      if (response.get(""+ i +".statuscategoryidname") != null) {  
                MatcherAssert.assertThat(response.get(""+ i +".statuscategoryidname"), instanceOf(String.class));  
          }
  
          }
        
      if (response.get(""+ i +".statuscategoryname") != null) {        
      if (response.get(""+ i +".statuscategorynameid") != null) {  
                MatcherAssert.assertThat(response.get(""+ i +".statuscategorynameid"), instanceOf(Integer.class));  
          }
        
      if (response.get(""+ i +".statuscategorynamename") != null) {  
                MatcherAssert.assertThat(response.get(""+ i +".statuscategorynamename"), instanceOf(String.class));  
          }
  
          }
  
          }
        
      if (response.get(""+ i +".statusphotoUrls") != null) {        
                for (int ii = 0; ii < response.getList(""+ i +".statusphotoUrls").size(); ii++) {        
                  }      
                MatcherAssert.assertThat(response.getList(""+ i +".statusphotoUrls"), instanceOf(List.class));
  
          }
        
      if (response.get(""+ i +".statustags") != null) {        
                for (int ii = 0; ii < response.getList(""+ i +".statustags").size(); ii++) {        
      if (response.get(""+ i +".statustags["+ ii +"].idid") != null) {  
                MatcherAssert.assertThat(response.get(""+ i +".statustags["+ ii +"].idid"), instanceOf(Integer.class));  
          }
        
      if (response.get(""+ i +".statustags["+ ii +"].idname") != null) {  
                MatcherAssert.assertThat(response.get(""+ i +".statustags["+ ii +"].idname"), instanceOf(String.class));  
          }
        
      if (response.get(""+ i +".statustags["+ ii +"].nameid") != null) {  
                MatcherAssert.assertThat(response.get(""+ i +".statustags["+ ii +"].nameid"), instanceOf(Integer.class));  
          }
        
      if (response.get(""+ i +".statustags["+ ii +"].namename") != null) {  
                MatcherAssert.assertThat(response.get(""+ i +".statustags["+ ii +"].namename"), instanceOf(String.class));  
          }
        
                  }      
                MatcherAssert.assertThat(response.getList(""+ i +".statustags"), instanceOf(List.class));
  
          }
        
      if (response.get(""+ i +".statusstatus") != null) {  
                MatcherAssert.assertThat(response.get(""+ i +".statusstatus"), instanceOf(String.class));  
                MatcherAssert.assertThat(response.getString(""+ i +".statusstatus"), anyOf(equalTo("available"), equalTo("pending"), equalTo("sold")));
  
          }
  
          }
}
				}
if (responseObj.statusCode() == 400) {
					System.out.println("Description: Invalid status value");
				}
  
            }  
    }
}
