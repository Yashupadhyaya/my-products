// ********RoostGPT********
/*
Test generated by RoostGPT for test postman-test using AI Type Open AI and AI Model gpt-4

Test generated for /pet/findByStatus_get for http method type GET in rest-assured framework

RoostTestHash=a8d5f26364


*/

// ********RoostGPT********
package com.bootexample4.RoostTest;
import io.restassured.RestAssured;
import io.restassured.path.json.JsonPath;
import io.restassured.http.ContentType;
import io.restassured.response.Response;
import org.junit.Before;
import org.junit.jupiter.api.Test;
import static io.restassured.RestAssured.given;
import static org.junit.Assert.*;
import java.io.BufferedReader;
import java.io.File;
import java.io.IOException;
import java.util.HashMap;
import java.util.Map;
import java.util.ArrayList;
import java.util.List;
import org.hamcrest.MatcherAssert;
import static org.hamcrest.Matchers.*;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.json.JSONObject;
import org.json.XML;
import org.json.JSONException;

public class findByStatusGetTest {

    List<Map<String, String>> envList = new ArrayList<>();


    @Before
    public void setUp() {
      TestdataLoader dataloader = new TestdataLoader();
      envList = dataloader.loadData("src/test/java/com/bootexample4/RoostTest/findByStatusGetTest.csv");
    }

  
    @Test  
    public void findByStatusGet_Test() {
        this.setUp();
        for (Map<String, String> testData : envList) {
          RestAssured.baseURI = "/api/v3";  
  
                Response responseObj = given()
				.queryParam("status", testData.get("status") != null ? testData.get("status") : "")
                .when()
                .get("/pet/findByStatus")  
                .then() 
                .extract().response(); 
              JsonPath response;
              String contentType = responseObj.getContentType();
              if (contentType.contains("application/xml") || contentType.contains("text/xml")) {
                String xmlResponse = responseObj.asString();
                JSONObject jsonResponse = XML.toJSONObject(xmlResponse);
                JSONObject jsonData = jsonResponse.getJSONObject("xml");
                String jsonString = jsonData.toString();
                response = new JsonPath(jsonString);
        
              } else {  
                response = responseObj.jsonPath(); 
              }  
         
                if (responseObj.statusCode() == 200) {
					System.out.println("Description: successful operation");
      
              if (response.get("id") != null) {      
              if (response.get("id.id") != null) {  
                MatcherAssert.assertThat(response.get("id.id"), instanceOf(Integer.class));  
          }
      
              if (response.get("id.name") != null) {  
                MatcherAssert.assertThat(response.get("id.name"), instanceOf(String.class));  
          }
      
              if (response.get("id.category") != null) {      
              if (response.get("id.category.id") != null) {      
              if (response.get("id.category.id.id") != null) {  
                MatcherAssert.assertThat(response.get("id.category.id.id"), instanceOf(Integer.class));  
          }
      
              if (response.get("id.category.id.name") != null) {  
                MatcherAssert.assertThat(response.get("id.category.id.name"), instanceOf(String.class));  
          }
  
          }
      
              if (response.get("id.category.name") != null) {      
              if (response.get("id.category.name.id") != null) {  
                MatcherAssert.assertThat(response.get("id.category.name.id"), instanceOf(Integer.class));  
          }
      
              if (response.get("id.category.name.name") != null) {  
                MatcherAssert.assertThat(response.get("id.category.name.name"), instanceOf(String.class));  
          }
  
          }
  
          }
      
              if (response.get("id.photoUrls") != null) {        
                for (int i = 0; i < response.getList("id.photoUrls").size(); i++) {        
                  }      
                MatcherAssert.assertThat(response.getList("id.photoUrls"), instanceOf(List.class));
  
          }
      
              if (response.get("id.tags") != null) {        
                for (int i = 0; i < response.getList("id.tags").size(); i++) {      
              if (response.get("id.tags["+ i +"].id.id") != null) {  
                MatcherAssert.assertThat(response.get("id.tags["+ i +"].id.id"), instanceOf(Integer.class));  
          }
      
              if (response.get("id.tags["+ i +"].id.name") != null) {  
                MatcherAssert.assertThat(response.get("id.tags["+ i +"].id.name"), instanceOf(String.class));  
          }
      
              if (response.get("id.tags["+ i +"].name.id") != null) {  
                MatcherAssert.assertThat(response.get("id.tags["+ i +"].name.id"), instanceOf(Integer.class));  
          }
      
              if (response.get("id.tags["+ i +"].name.name") != null) {  
                MatcherAssert.assertThat(response.get("id.tags["+ i +"].name.name"), instanceOf(String.class));  
          }
        
                  }      
                MatcherAssert.assertThat(response.getList("id.tags"), instanceOf(List.class));
  
          }
      
              if (response.get("id.status") != null) {  
                MatcherAssert.assertThat(response.get("id.status"), instanceOf(String.class));  
                MatcherAssert.assertThat(response.getString("id.status"), anyOf(equalTo("available"), equalTo("pending"), equalTo("sold")));
  
          }
  
          }
      
              if (response.get("name") != null) {      
              if (response.get("name.id") != null) {  
                MatcherAssert.assertThat(response.get("name.id"), instanceOf(Integer.class));  
          }
      
              if (response.get("name.name") != null) {  
                MatcherAssert.assertThat(response.get("name.name"), instanceOf(String.class));  
          }
      
              if (response.get("name.category") != null) {      
              if (response.get("name.category.id") != null) {      
              if (response.get("name.category.id.id") != null) {  
                MatcherAssert.assertThat(response.get("name.category.id.id"), instanceOf(Integer.class));  
          }
      
              if (response.get("name.category.id.name") != null) {  
                MatcherAssert.assertThat(response.get("name.category.id.name"), instanceOf(String.class));  
          }
  
          }
      
              if (response.get("name.category.name") != null) {      
              if (response.get("name.category.name.id") != null) {  
                MatcherAssert.assertThat(response.get("name.category.name.id"), instanceOf(Integer.class));  
          }
      
              if (response.get("name.category.name.name") != null) {  
                MatcherAssert.assertThat(response.get("name.category.name.name"), instanceOf(String.class));  
          }
  
          }
  
          }
      
              if (response.get("name.photoUrls") != null) {        
                for (int i = 0; i < response.getList("name.photoUrls").size(); i++) {        
                  }      
                MatcherAssert.assertThat(response.getList("name.photoUrls"), instanceOf(List.class));
  
          }
      
              if (response.get("name.tags") != null) {        
                for (int i = 0; i < response.getList("name.tags").size(); i++) {      
              if (response.get("name.tags["+ i +"].id.id") != null) {  
                MatcherAssert.assertThat(response.get("name.tags["+ i +"].id.id"), instanceOf(Integer.class));  
          }
      
              if (response.get("name.tags["+ i +"].id.name") != null) {  
                MatcherAssert.assertThat(response.get("name.tags["+ i +"].id.name"), instanceOf(String.class));  
          }
      
              if (response.get("name.tags["+ i +"].name.id") != null) {  
                MatcherAssert.assertThat(response.get("name.tags["+ i +"].name.id"), instanceOf(Integer.class));  
          }
      
              if (response.get("name.tags["+ i +"].name.name") != null) {  
                MatcherAssert.assertThat(response.get("name.tags["+ i +"].name.name"), instanceOf(String.class));  
          }
        
                  }      
                MatcherAssert.assertThat(response.getList("name.tags"), instanceOf(List.class));
  
          }
      
              if (response.get("name.status") != null) {  
                MatcherAssert.assertThat(response.get("name.status"), instanceOf(String.class));  
                MatcherAssert.assertThat(response.getString("name.status"), anyOf(equalTo("available"), equalTo("pending"), equalTo("sold")));
  
          }
  
          }
      
              if (response.get("category") != null) {      
              if (response.get("category.id") != null) {  
                MatcherAssert.assertThat(response.get("category.id"), instanceOf(Integer.class));  
          }
      
              if (response.get("category.name") != null) {  
                MatcherAssert.assertThat(response.get("category.name"), instanceOf(String.class));  
          }
      
              if (response.get("category.category") != null) {      
              if (response.get("category.category.id") != null) {      
              if (response.get("category.category.id.id") != null) {  
                MatcherAssert.assertThat(response.get("category.category.id.id"), instanceOf(Integer.class));  
          }
      
              if (response.get("category.category.id.name") != null) {  
                MatcherAssert.assertThat(response.get("category.category.id.name"), instanceOf(String.class));  
          }
  
          }
      
              if (response.get("category.category.name") != null) {      
              if (response.get("category.category.name.id") != null) {  
                MatcherAssert.assertThat(response.get("category.category.name.id"), instanceOf(Integer.class));  
          }
      
              if (response.get("category.category.name.name") != null) {  
                MatcherAssert.assertThat(response.get("category.category.name.name"), instanceOf(String.class));  
          }
  
          }
  
          }
      
              if (response.get("category.photoUrls") != null) {        
                for (int i = 0; i < response.getList("category.photoUrls").size(); i++) {        
                  }      
                MatcherAssert.assertThat(response.getList("category.photoUrls"), instanceOf(List.class));
  
          }
      
              if (response.get("category.tags") != null) {        
                for (int i = 0; i < response.getList("category.tags").size(); i++) {      
              if (response.get("category.tags["+ i +"].id.id") != null) {  
                MatcherAssert.assertThat(response.get("category.tags["+ i +"].id.id"), instanceOf(Integer.class));  
          }
      
              if (response.get("category.tags["+ i +"].id.name") != null) {  
                MatcherAssert.assertThat(response.get("category.tags["+ i +"].id.name"), instanceOf(String.class));  
          }
      
              if (response.get("category.tags["+ i +"].name.id") != null) {  
                MatcherAssert.assertThat(response.get("category.tags["+ i +"].name.id"), instanceOf(Integer.class));  
          }
      
              if (response.get("category.tags["+ i +"].name.name") != null) {  
                MatcherAssert.assertThat(response.get("category.tags["+ i +"].name.name"), instanceOf(String.class));  
          }
        
                  }      
                MatcherAssert.assertThat(response.getList("category.tags"), instanceOf(List.class));
  
          }
      
              if (response.get("category.status") != null) {  
                MatcherAssert.assertThat(response.get("category.status"), instanceOf(String.class));  
                MatcherAssert.assertThat(response.getString("category.status"), anyOf(equalTo("available"), equalTo("pending"), equalTo("sold")));
  
          }
  
          }
      
              if (response.get("photoUrls") != null) {      
              if (response.get("photoUrls.id") != null) {  
                MatcherAssert.assertThat(response.get("photoUrls.id"), instanceOf(Integer.class));  
          }
      
              if (response.get("photoUrls.name") != null) {  
                MatcherAssert.assertThat(response.get("photoUrls.name"), instanceOf(String.class));  
          }
      
              if (response.get("photoUrls.category") != null) {      
              if (response.get("photoUrls.category.id") != null) {      
              if (response.get("photoUrls.category.id.id") != null) {  
                MatcherAssert.assertThat(response.get("photoUrls.category.id.id"), instanceOf(Integer.class));  
          }
      
              if (response.get("photoUrls.category.id.name") != null) {  
                MatcherAssert.assertThat(response.get("photoUrls.category.id.name"), instanceOf(String.class));  
          }
  
          }
      
              if (response.get("photoUrls.category.name") != null) {      
              if (response.get("photoUrls.category.name.id") != null) {  
                MatcherAssert.assertThat(response.get("photoUrls.category.name.id"), instanceOf(Integer.class));  
          }
      
              if (response.get("photoUrls.category.name.name") != null) {  
                MatcherAssert.assertThat(response.get("photoUrls.category.name.name"), instanceOf(String.class));  
          }
  
          }
  
          }
      
              if (response.get("photoUrls.photoUrls") != null) {        
                for (int i = 0; i < response.getList("photoUrls.photoUrls").size(); i++) {        
                  }      
                MatcherAssert.assertThat(response.getList("photoUrls.photoUrls"), instanceOf(List.class));
  
          }
      
              if (response.get("photoUrls.tags") != null) {        
                for (int i = 0; i < response.getList("photoUrls.tags").size(); i++) {      
              if (response.get("photoUrls.tags["+ i +"].id.id") != null) {  
                MatcherAssert.assertThat(response.get("photoUrls.tags["+ i +"].id.id"), instanceOf(Integer.class));  
          }
      
              if (response.get("photoUrls.tags["+ i +"].id.name") != null) {  
                MatcherAssert.assertThat(response.get("photoUrls.tags["+ i +"].id.name"), instanceOf(String.class));  
          }
      
              if (response.get("photoUrls.tags["+ i +"].name.id") != null) {  
                MatcherAssert.assertThat(response.get("photoUrls.tags["+ i +"].name.id"), instanceOf(Integer.class));  
          }
      
              if (response.get("photoUrls.tags["+ i +"].name.name") != null) {  
                MatcherAssert.assertThat(response.get("photoUrls.tags["+ i +"].name.name"), instanceOf(String.class));  
          }
        
                  }      
                MatcherAssert.assertThat(response.getList("photoUrls.tags"), instanceOf(List.class));
  
          }
      
              if (response.get("photoUrls.status") != null) {  
                MatcherAssert.assertThat(response.get("photoUrls.status"), instanceOf(String.class));  
                MatcherAssert.assertThat(response.getString("photoUrls.status"), anyOf(equalTo("available"), equalTo("pending"), equalTo("sold")));
  
          }
  
          }
      
              if (response.get("tags") != null) {      
              if (response.get("tags.id") != null) {  
                MatcherAssert.assertThat(response.get("tags.id"), instanceOf(Integer.class));  
          }
      
              if (response.get("tags.name") != null) {  
                MatcherAssert.assertThat(response.get("tags.name"), instanceOf(String.class));  
          }
      
              if (response.get("tags.category") != null) {      
              if (response.get("tags.category.id") != null) {      
              if (response.get("tags.category.id.id") != null) {  
                MatcherAssert.assertThat(response.get("tags.category.id.id"), instanceOf(Integer.class));  
          }
      
              if (response.get("tags.category.id.name") != null) {  
                MatcherAssert.assertThat(response.get("tags.category.id.name"), instanceOf(String.class));  
          }
  
          }
      
              if (response.get("tags.category.name") != null) {      
              if (response.get("tags.category.name.id") != null) {  
                MatcherAssert.assertThat(response.get("tags.category.name.id"), instanceOf(Integer.class));  
          }
      
              if (response.get("tags.category.name.name") != null) {  
                MatcherAssert.assertThat(response.get("tags.category.name.name"), instanceOf(String.class));  
          }
  
          }
  
          }
      
              if (response.get("tags.photoUrls") != null) {        
                for (int i = 0; i < response.getList("tags.photoUrls").size(); i++) {        
                  }      
                MatcherAssert.assertThat(response.getList("tags.photoUrls"), instanceOf(List.class));
  
          }
      
              if (response.get("tags.tags") != null) {        
                for (int i = 0; i < response.getList("tags.tags").size(); i++) {      
              if (response.get("tags.tags["+ i +"].id.id") != null) {  
                MatcherAssert.assertThat(response.get("tags.tags["+ i +"].id.id"), instanceOf(Integer.class));  
          }
      
              if (response.get("tags.tags["+ i +"].id.name") != null) {  
                MatcherAssert.assertThat(response.get("tags.tags["+ i +"].id.name"), instanceOf(String.class));  
          }
      
              if (response.get("tags.tags["+ i +"].name.id") != null) {  
                MatcherAssert.assertThat(response.get("tags.tags["+ i +"].name.id"), instanceOf(Integer.class));  
          }
      
              if (response.get("tags.tags["+ i +"].name.name") != null) {  
                MatcherAssert.assertThat(response.get("tags.tags["+ i +"].name.name"), instanceOf(String.class));  
          }
        
                  }      
                MatcherAssert.assertThat(response.getList("tags.tags"), instanceOf(List.class));
  
          }
      
              if (response.get("tags.status") != null) {  
                MatcherAssert.assertThat(response.get("tags.status"), instanceOf(String.class));  
                MatcherAssert.assertThat(response.getString("tags.status"), anyOf(equalTo("available"), equalTo("pending"), equalTo("sold")));
  
          }
  
          }
      
              if (response.get("status") != null) {      
              if (response.get("status.id") != null) {  
                MatcherAssert.assertThat(response.get("status.id"), instanceOf(Integer.class));  
          }
      
              if (response.get("status.name") != null) {  
                MatcherAssert.assertThat(response.get("status.name"), instanceOf(String.class));  
          }
      
              if (response.get("status.category") != null) {      
              if (response.get("status.category.id") != null) {      
              if (response.get("status.category.id.id") != null) {  
                MatcherAssert.assertThat(response.get("status.category.id.id"), instanceOf(Integer.class));  
          }
      
              if (response.get("status.category.id.name") != null) {  
                MatcherAssert.assertThat(response.get("status.category.id.name"), instanceOf(String.class));  
          }
  
          }
      
              if (response.get("status.category.name") != null) {      
              if (response.get("status.category.name.id") != null) {  
                MatcherAssert.assertThat(response.get("status.category.name.id"), instanceOf(Integer.class));  
          }
      
              if (response.get("status.category.name.name") != null) {  
                MatcherAssert.assertThat(response.get("status.category.name.name"), instanceOf(String.class));  
          }
  
          }
  
          }
      
              if (response.get("status.photoUrls") != null) {        
                for (int i = 0; i < response.getList("status.photoUrls").size(); i++) {        
                  }      
                MatcherAssert.assertThat(response.getList("status.photoUrls"), instanceOf(List.class));
  
          }
      
              if (response.get("status.tags") != null) {        
                for (int i = 0; i < response.getList("status.tags").size(); i++) {      
              if (response.get("status.tags["+ i +"].id.id") != null) {  
                MatcherAssert.assertThat(response.get("status.tags["+ i +"].id.id"), instanceOf(Integer.class));  
          }
      
              if (response.get("status.tags["+ i +"].id.name") != null) {  
                MatcherAssert.assertThat(response.get("status.tags["+ i +"].id.name"), instanceOf(String.class));  
          }
      
              if (response.get("status.tags["+ i +"].name.id") != null) {  
                MatcherAssert.assertThat(response.get("status.tags["+ i +"].name.id"), instanceOf(Integer.class));  
          }
      
              if (response.get("status.tags["+ i +"].name.name") != null) {  
                MatcherAssert.assertThat(response.get("status.tags["+ i +"].name.name"), instanceOf(String.class));  
          }
        
                  }      
                MatcherAssert.assertThat(response.getList("status.tags"), instanceOf(List.class));
  
          }
      
              if (response.get("status.status") != null) {  
                MatcherAssert.assertThat(response.get("status.status"), instanceOf(String.class));  
                MatcherAssert.assertThat(response.getString("status.status"), anyOf(equalTo("available"), equalTo("pending"), equalTo("sold")));
  
          }
  
          }
				}
if (responseObj.statusCode() == 400) {
					System.out.println("Description: Invalid status value");
				}
  
            }  
    }
}
