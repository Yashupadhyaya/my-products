// ********RoostGPT********
/*
Test generated by RoostGPT for test postman-test using AI Type Open AI and AI Model gpt-4

Test generated for /pet/findByStatus_get for http method type GET in rest-assured framework

RoostTestHash=a8d5f26364


*/

// ********RoostGPT********
package com.bootexample4.RoostTest;
import io.restassured.RestAssured;
import io.restassured.path.json.JsonPath;
import io.restassured.http.ContentType;
import io.restassured.response.Response;
import org.junit.Before;
import org.junit.jupiter.api.Test;
import static io.restassured.RestAssured.given;
import static org.junit.Assert.*;
import java.io.BufferedReader;
import java.io.File;
import java.io.IOException;
import java.util.HashMap;
import java.util.Map;
import java.util.ArrayList;
import java.util.List;
import org.hamcrest.MatcherAssert;
import static org.hamcrest.Matchers.*;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.json.JSONObject;
import org.json.XML;
import org.json.JSONException;

public class findByStatusGetTest {

    List<Map<String, String>> envList = new ArrayList<>();


    @Before
    public void setUp() {
      TestdataLoader dataloader = new TestdataLoader();
      envList = dataloader.loadData("src/test/java/com/bootexample4/RoostTest/findByStatusGetTest.csv");
    }

  
    @Test  
    public void findByStatusGet_Test() {
        this.setUp();
        for (Map<String, String> testData : envList) {
          RestAssured.baseURI = "/api/v3";  
  
                Response responseObj = given()
				.queryParam("status", testData.get("status") != null ? testData.get("status") : "")
                .when()
                .get("/pet/findByStatus")  
                .then() 
                .extract().response(); 
              JsonPath response;
              String contentType = responseObj.getContentType();
              if (contentType.contains("application/xml") || contentType.contains("text/xml")) {
                String xmlResponse = responseObj.asString();
                JSONObject jsonResponse = XML.toJSONObject(xmlResponse);
                JSONObject jsonData = jsonResponse.getJSONObject("xml");
                String jsonString = jsonData.toString();
                response = new JsonPath(jsonString);
        
              } else {  
                response = responseObj.jsonPath(); 
              }  
         
                if (responseObj.statusCode() == 200) {
					System.out.println("Description: successful operation");
        
        if (response.get("id") != null) {        
        if (response.get("idid") != null) {  
                MatcherAssert.assertThat(response.get("idid"), instanceOf(Integer.class));  
          }
        
        if (response.get("idname") != null) {  
                MatcherAssert.assertThat(response.get("idname"), instanceOf(String.class));  
          }
        
        if (response.get("idcategory") != null) {        
        if (response.get("idcategoryid") != null) {        
        if (response.get("idcategoryidid") != null) {  
                MatcherAssert.assertThat(response.get("idcategoryidid"), instanceOf(Integer.class));  
          }
        
        if (response.get("idcategoryidname") != null) {  
                MatcherAssert.assertThat(response.get("idcategoryidname"), instanceOf(String.class));  
          }
  
          }
        
        if (response.get("idcategoryname") != null) {        
        if (response.get("idcategorynameid") != null) {  
                MatcherAssert.assertThat(response.get("idcategorynameid"), instanceOf(Integer.class));  
          }
        
        if (response.get("idcategorynamename") != null) {  
                MatcherAssert.assertThat(response.get("idcategorynamename"), instanceOf(String.class));  
          }
  
          }
  
          }
        
        if (response.get("idphotoUrls") != null) {          
                  for (int i = 0; i < response.getList("idphotoUrls").size(); i++) {          
                    }        
                  MatcherAssert.assertThat(response.getList("idphotoUrls"), instanceOf(List.class));
  
          }
        
        if (response.get("idtags") != null) {          
                  for (int i = 0; i < response.getList("idtags").size(); i++) {        
        if (response.get("idtags["+ i +"].idid") != null) {  
                MatcherAssert.assertThat(response.get("idtags["+ i +"].idid"), instanceOf(Integer.class));  
          }
        
        if (response.get("idtags["+ i +"].idname") != null) {  
                MatcherAssert.assertThat(response.get("idtags["+ i +"].idname"), instanceOf(String.class));  
          }
        
        if (response.get("idtags["+ i +"].nameid") != null) {  
                MatcherAssert.assertThat(response.get("idtags["+ i +"].nameid"), instanceOf(Integer.class));  
          }
        
        if (response.get("idtags["+ i +"].namename") != null) {  
                MatcherAssert.assertThat(response.get("idtags["+ i +"].namename"), instanceOf(String.class));  
          }
          
                    }        
                  MatcherAssert.assertThat(response.getList("idtags"), instanceOf(List.class));
  
          }
        
        if (response.get("idstatus") != null) {  
                MatcherAssert.assertThat(response.get("idstatus"), instanceOf(String.class));  
                MatcherAssert.assertThat(response.getString("idstatus"), anyOf(equalTo("available"), equalTo("pending"), equalTo("sold")));
  
          }
  
          }
        
        if (response.get("name") != null) {        
        if (response.get("nameid") != null) {  
                MatcherAssert.assertThat(response.get("nameid"), instanceOf(Integer.class));  
          }
        
        if (response.get("namename") != null) {  
                MatcherAssert.assertThat(response.get("namename"), instanceOf(String.class));  
          }
        
        if (response.get("namecategory") != null) {        
        if (response.get("namecategoryid") != null) {        
        if (response.get("namecategoryidid") != null) {  
                MatcherAssert.assertThat(response.get("namecategoryidid"), instanceOf(Integer.class));  
          }
        
        if (response.get("namecategoryidname") != null) {  
                MatcherAssert.assertThat(response.get("namecategoryidname"), instanceOf(String.class));  
          }
  
          }
        
        if (response.get("namecategoryname") != null) {        
        if (response.get("namecategorynameid") != null) {  
                MatcherAssert.assertThat(response.get("namecategorynameid"), instanceOf(Integer.class));  
          }
        
        if (response.get("namecategorynamename") != null) {  
                MatcherAssert.assertThat(response.get("namecategorynamename"), instanceOf(String.class));  
          }
  
          }
  
          }
        
        if (response.get("namephotoUrls") != null) {          
                  for (int i = 0; i < response.getList("namephotoUrls").size(); i++) {          
                    }        
                  MatcherAssert.assertThat(response.getList("namephotoUrls"), instanceOf(List.class));
  
          }
        
        if (response.get("nametags") != null) {          
                  for (int i = 0; i < response.getList("nametags").size(); i++) {        
        if (response.get("nametags["+ i +"].idid") != null) {  
                MatcherAssert.assertThat(response.get("nametags["+ i +"].idid"), instanceOf(Integer.class));  
          }
        
        if (response.get("nametags["+ i +"].idname") != null) {  
                MatcherAssert.assertThat(response.get("nametags["+ i +"].idname"), instanceOf(String.class));  
          }
        
        if (response.get("nametags["+ i +"].nameid") != null) {  
                MatcherAssert.assertThat(response.get("nametags["+ i +"].nameid"), instanceOf(Integer.class));  
          }
        
        if (response.get("nametags["+ i +"].namename") != null) {  
                MatcherAssert.assertThat(response.get("nametags["+ i +"].namename"), instanceOf(String.class));  
          }
          
                    }        
                  MatcherAssert.assertThat(response.getList("nametags"), instanceOf(List.class));
  
          }
        
        if (response.get("namestatus") != null) {  
                MatcherAssert.assertThat(response.get("namestatus"), instanceOf(String.class));  
                MatcherAssert.assertThat(response.getString("namestatus"), anyOf(equalTo("available"), equalTo("pending"), equalTo("sold")));
  
          }
  
          }
        
        if (response.get("category") != null) {        
        if (response.get("categoryid") != null) {  
                MatcherAssert.assertThat(response.get("categoryid"), instanceOf(Integer.class));  
          }
        
        if (response.get("categoryname") != null) {  
                MatcherAssert.assertThat(response.get("categoryname"), instanceOf(String.class));  
          }
        
        if (response.get("categorycategory") != null) {        
        if (response.get("categorycategoryid") != null) {        
        if (response.get("categorycategoryidid") != null) {  
                MatcherAssert.assertThat(response.get("categorycategoryidid"), instanceOf(Integer.class));  
          }
        
        if (response.get("categorycategoryidname") != null) {  
                MatcherAssert.assertThat(response.get("categorycategoryidname"), instanceOf(String.class));  
          }
  
          }
        
        if (response.get("categorycategoryname") != null) {        
        if (response.get("categorycategorynameid") != null) {  
                MatcherAssert.assertThat(response.get("categorycategorynameid"), instanceOf(Integer.class));  
          }
        
        if (response.get("categorycategorynamename") != null) {  
                MatcherAssert.assertThat(response.get("categorycategorynamename"), instanceOf(String.class));  
          }
  
          }
  
          }
        
        if (response.get("categoryphotoUrls") != null) {          
                  for (int i = 0; i < response.getList("categoryphotoUrls").size(); i++) {          
                    }        
                  MatcherAssert.assertThat(response.getList("categoryphotoUrls"), instanceOf(List.class));
  
          }
        
        if (response.get("categorytags") != null) {          
                  for (int i = 0; i < response.getList("categorytags").size(); i++) {        
        if (response.get("categorytags["+ i +"].idid") != null) {  
                MatcherAssert.assertThat(response.get("categorytags["+ i +"].idid"), instanceOf(Integer.class));  
          }
        
        if (response.get("categorytags["+ i +"].idname") != null) {  
                MatcherAssert.assertThat(response.get("categorytags["+ i +"].idname"), instanceOf(String.class));  
          }
        
        if (response.get("categorytags["+ i +"].nameid") != null) {  
                MatcherAssert.assertThat(response.get("categorytags["+ i +"].nameid"), instanceOf(Integer.class));  
          }
        
        if (response.get("categorytags["+ i +"].namename") != null) {  
                MatcherAssert.assertThat(response.get("categorytags["+ i +"].namename"), instanceOf(String.class));  
          }
          
                    }        
                  MatcherAssert.assertThat(response.getList("categorytags"), instanceOf(List.class));
  
          }
        
        if (response.get("categorystatus") != null) {  
                MatcherAssert.assertThat(response.get("categorystatus"), instanceOf(String.class));  
                MatcherAssert.assertThat(response.getString("categorystatus"), anyOf(equalTo("available"), equalTo("pending"), equalTo("sold")));
  
          }
  
          }
        
        if (response.get("photoUrls") != null) {        
        if (response.get("photoUrlsid") != null) {  
                MatcherAssert.assertThat(response.get("photoUrlsid"), instanceOf(Integer.class));  
          }
        
        if (response.get("photoUrlsname") != null) {  
                MatcherAssert.assertThat(response.get("photoUrlsname"), instanceOf(String.class));  
          }
        
        if (response.get("photoUrlscategory") != null) {        
        if (response.get("photoUrlscategoryid") != null) {        
        if (response.get("photoUrlscategoryidid") != null) {  
                MatcherAssert.assertThat(response.get("photoUrlscategoryidid"), instanceOf(Integer.class));  
          }
        
        if (response.get("photoUrlscategoryidname") != null) {  
                MatcherAssert.assertThat(response.get("photoUrlscategoryidname"), instanceOf(String.class));  
          }
  
          }
        
        if (response.get("photoUrlscategoryname") != null) {        
        if (response.get("photoUrlscategorynameid") != null) {  
                MatcherAssert.assertThat(response.get("photoUrlscategorynameid"), instanceOf(Integer.class));  
          }
        
        if (response.get("photoUrlscategorynamename") != null) {  
                MatcherAssert.assertThat(response.get("photoUrlscategorynamename"), instanceOf(String.class));  
          }
  
          }
  
          }
        
        if (response.get("photoUrlsphotoUrls") != null) {          
                  for (int i = 0; i < response.getList("photoUrlsphotoUrls").size(); i++) {          
                    }        
                  MatcherAssert.assertThat(response.getList("photoUrlsphotoUrls"), instanceOf(List.class));
  
          }
        
        if (response.get("photoUrlstags") != null) {          
                  for (int i = 0; i < response.getList("photoUrlstags").size(); i++) {        
        if (response.get("photoUrlstags["+ i +"].idid") != null) {  
                MatcherAssert.assertThat(response.get("photoUrlstags["+ i +"].idid"), instanceOf(Integer.class));  
          }
        
        if (response.get("photoUrlstags["+ i +"].idname") != null) {  
                MatcherAssert.assertThat(response.get("photoUrlstags["+ i +"].idname"), instanceOf(String.class));  
          }
        
        if (response.get("photoUrlstags["+ i +"].nameid") != null) {  
                MatcherAssert.assertThat(response.get("photoUrlstags["+ i +"].nameid"), instanceOf(Integer.class));  
          }
        
        if (response.get("photoUrlstags["+ i +"].namename") != null) {  
                MatcherAssert.assertThat(response.get("photoUrlstags["+ i +"].namename"), instanceOf(String.class));  
          }
          
                    }        
                  MatcherAssert.assertThat(response.getList("photoUrlstags"), instanceOf(List.class));
  
          }
        
        if (response.get("photoUrlsstatus") != null) {  
                MatcherAssert.assertThat(response.get("photoUrlsstatus"), instanceOf(String.class));  
                MatcherAssert.assertThat(response.getString("photoUrlsstatus"), anyOf(equalTo("available"), equalTo("pending"), equalTo("sold")));
  
          }
  
          }
        
        if (response.get("tags") != null) {        
        if (response.get("tagsid") != null) {  
                MatcherAssert.assertThat(response.get("tagsid"), instanceOf(Integer.class));  
          }
        
        if (response.get("tagsname") != null) {  
                MatcherAssert.assertThat(response.get("tagsname"), instanceOf(String.class));  
          }
        
        if (response.get("tagscategory") != null) {        
        if (response.get("tagscategoryid") != null) {        
        if (response.get("tagscategoryidid") != null) {  
                MatcherAssert.assertThat(response.get("tagscategoryidid"), instanceOf(Integer.class));  
          }
        
        if (response.get("tagscategoryidname") != null) {  
                MatcherAssert.assertThat(response.get("tagscategoryidname"), instanceOf(String.class));  
          }
  
          }
        
        if (response.get("tagscategoryname") != null) {        
        if (response.get("tagscategorynameid") != null) {  
                MatcherAssert.assertThat(response.get("tagscategorynameid"), instanceOf(Integer.class));  
          }
        
        if (response.get("tagscategorynamename") != null) {  
                MatcherAssert.assertThat(response.get("tagscategorynamename"), instanceOf(String.class));  
          }
  
          }
  
          }
        
        if (response.get("tagsphotoUrls") != null) {          
                  for (int i = 0; i < response.getList("tagsphotoUrls").size(); i++) {          
                    }        
                  MatcherAssert.assertThat(response.getList("tagsphotoUrls"), instanceOf(List.class));
  
          }
        
        if (response.get("tagstags") != null) {          
                  for (int i = 0; i < response.getList("tagstags").size(); i++) {        
        if (response.get("tagstags["+ i +"].idid") != null) {  
                MatcherAssert.assertThat(response.get("tagstags["+ i +"].idid"), instanceOf(Integer.class));  
          }
        
        if (response.get("tagstags["+ i +"].idname") != null) {  
                MatcherAssert.assertThat(response.get("tagstags["+ i +"].idname"), instanceOf(String.class));  
          }
        
        if (response.get("tagstags["+ i +"].nameid") != null) {  
                MatcherAssert.assertThat(response.get("tagstags["+ i +"].nameid"), instanceOf(Integer.class));  
          }
        
        if (response.get("tagstags["+ i +"].namename") != null) {  
                MatcherAssert.assertThat(response.get("tagstags["+ i +"].namename"), instanceOf(String.class));  
          }
          
                    }        
                  MatcherAssert.assertThat(response.getList("tagstags"), instanceOf(List.class));
  
          }
        
        if (response.get("tagsstatus") != null) {  
                MatcherAssert.assertThat(response.get("tagsstatus"), instanceOf(String.class));  
                MatcherAssert.assertThat(response.getString("tagsstatus"), anyOf(equalTo("available"), equalTo("pending"), equalTo("sold")));
  
          }
  
          }
        
        if (response.get("status") != null) {        
        if (response.get("statusid") != null) {  
                MatcherAssert.assertThat(response.get("statusid"), instanceOf(Integer.class));  
          }
        
        if (response.get("statusname") != null) {  
                MatcherAssert.assertThat(response.get("statusname"), instanceOf(String.class));  
          }
        
        if (response.get("statuscategory") != null) {        
        if (response.get("statuscategoryid") != null) {        
        if (response.get("statuscategoryidid") != null) {  
                MatcherAssert.assertThat(response.get("statuscategoryidid"), instanceOf(Integer.class));  
          }
        
        if (response.get("statuscategoryidname") != null) {  
                MatcherAssert.assertThat(response.get("statuscategoryidname"), instanceOf(String.class));  
          }
  
          }
        
        if (response.get("statuscategoryname") != null) {        
        if (response.get("statuscategorynameid") != null) {  
                MatcherAssert.assertThat(response.get("statuscategorynameid"), instanceOf(Integer.class));  
          }
        
        if (response.get("statuscategorynamename") != null) {  
                MatcherAssert.assertThat(response.get("statuscategorynamename"), instanceOf(String.class));  
          }
  
          }
  
          }
        
        if (response.get("statusphotoUrls") != null) {          
                  for (int i = 0; i < response.getList("statusphotoUrls").size(); i++) {          
                    }        
                  MatcherAssert.assertThat(response.getList("statusphotoUrls"), instanceOf(List.class));
  
          }
        
        if (response.get("statustags") != null) {          
                  for (int i = 0; i < response.getList("statustags").size(); i++) {        
        if (response.get("statustags["+ i +"].idid") != null) {  
                MatcherAssert.assertThat(response.get("statustags["+ i +"].idid"), instanceOf(Integer.class));  
          }
        
        if (response.get("statustags["+ i +"].idname") != null) {  
                MatcherAssert.assertThat(response.get("statustags["+ i +"].idname"), instanceOf(String.class));  
          }
        
        if (response.get("statustags["+ i +"].nameid") != null) {  
                MatcherAssert.assertThat(response.get("statustags["+ i +"].nameid"), instanceOf(Integer.class));  
          }
        
        if (response.get("statustags["+ i +"].namename") != null) {  
                MatcherAssert.assertThat(response.get("statustags["+ i +"].namename"), instanceOf(String.class));  
          }
          
                    }        
                  MatcherAssert.assertThat(response.getList("statustags"), instanceOf(List.class));
  
          }
        
        if (response.get("statusstatus") != null) {  
                MatcherAssert.assertThat(response.get("statusstatus"), instanceOf(String.class));  
                MatcherAssert.assertThat(response.getString("statusstatus"), anyOf(equalTo("available"), equalTo("pending"), equalTo("sold")));
  
          }
  
          }
				}
if (responseObj.statusCode() == 400) {
					System.out.println("Description: Invalid status value");
				}
  
            }  
    }
}
