// ********RoostGPT********
/*
Test generated by RoostGPT for test postman-test using AI Type Open AI and AI Model gpt-4

Test generated for /threads/{thread_id}/messages/{message_id}_post for http method type POST in rest-assured framework

RoostTestHash=be96f1c275


*/

// ********RoostGPT********

public class messagesMessageIdPostTest {

    List<Map<String, String>> envList = new ArrayList<>();


    // @Before   // Commented out due to potential incompatibility with JUnit 5
    public void setUp() {
      // TestdataLoader dataloader = new TestdataLoader();  // Commented out due to potential compilation error
      // envList = dataloader.loadData("src/test/java/com/bootexample4/RoostTest/messages_message_idPostTest.csv"); // Commented out due to potential compilation error
    }

  
    @Test  
    public void messagesMessageIdPost_Test() {
        // this.setUp();   // Commented out due to potential compilation error
        for (Map<String, String> testData : envList) {
          RestAssured.baseURI = "https://api.openai.com/v1";  
  
                Response response = given()
				.pathParam("thread_id", testData.get("thread_id") != null ? testData.get("thread_id") : "")
				.pathParam("message_id", testData.get("message_id") != null ? testData.get("message_id") : "")
				.contentType(ContentType.JSON)
				.body("{\n"+
					"  \"metadata\": \"" + (testData.get("metadata") != null ? testData.get("metadata") : "") + "\n" +
 				"}")
				.header("api_key", testData.get("api_key"))
                .when()
                .post("/threads/{thread_id}/messages/{message_id}")  
                .then() 
                .extract().response();    
         
                if (response.statusCode() == 200) {
					System.out.println("Description: OK");
      
              if (response.jsonPath().get("id") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("id"), instanceOf(String.class));  
          }
      
              if (response.jsonPath().get("object") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("object"), instanceOf(String.class));  
                // MatcherAssert.assertThat(response.jsonPath().getString("object"), anyOf(equalTo("thread.message")));  // Commented out due to potential compilation error
  
          }
      
              if (response.jsonPath().get("created_at") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("created_at"), instanceOf(Integer.class));  
          }
      
              if (response.jsonPath().get("thread_id") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("thread_id"), instanceOf(String.class));  
          }
      
              if (response.jsonPath().get("role") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("role"), instanceOf(String.class));  
                // MatcherAssert.assertThat(response.jsonPath().getString("role"), anyOf(equalTo("user"), equalTo("assistant"))); // Commented out due to potential compilation error
  
          }
      
              if (response.jsonPath().get("content") != null) {      
                for (int i = 0; i < response.jsonPath().getList("content").size(); i++) {      
                  }    
                MatcherAssert.assertThat(response.jsonPath().getList("content"), instanceOf(List.class));
  
          }
      
              if (response.jsonPath().get("assistant_id") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("assistant_id"), instanceOf(String.class));  
          }
      
              if (response.jsonPath().get("run_id") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("run_id"), instanceOf(String.class));  
          }
      
              if (response.jsonPath().get("file_ids") != null) {      
                for (int i = 0; i < response.jsonPath().getList("file_ids").size(); i++) {      
                  }    
                MatcherAssert.assertThat(response.jsonPath().getList("file_ids"), instanceOf(List.class));
  
          }
      
              if (response.jsonPath().get("metadata") != null) {  
          }
				}
  
            }  
    }
}
