// ********RoostGPT********
/*
Test generated by RoostGPT for test postman-test using AI Type Open AI and AI Model gpt-4

Test generated for /checkout-cart-anonymous/{id}_post for http method type POST in rest-assured framework

RoostTestHash=899cf28e2c


*/

// ********RoostGPT********
package com.bootexample4.RoostTest;
import io.restassured.RestAssured;
import io.restassured.http.ContentType;
import io.restassured.response.Response;
import org.junit.Before;
import org.junit.jupiter.api.Test;
import static io.restassured.RestAssured.given;
import static org.junit.Assert.*;
import java.io.BufferedReader;
import java.io.File;
import java.io.IOException;
import java.util.HashMap;
import java.util.Map;
import java.util.ArrayList;
import java.util.List;
import org.hamcrest.MatcherAssert;
import static org.hamcrest.Matchers.*;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

public class checkoutcartanonymousIdPostTest {

    List<Map<String, String>> envList = new ArrayList<>();


    @Before
    public void setUp() {
      TestdataLoader dataloader = new TestdataLoader();
      envList = dataloader.loadData("src/test/java/com/bootexample4/RoostTest/checkout-cart-anonymous_idPostTest.csv");
    }

  
    @Test  
    public void checkoutcartanonymousIdPost_Test() {
        this.setUp();
        for (Map<String, String> testData : envList) {
          RestAssured.baseURI = testData.get("BASE_URL");  
  
                Response response = given()
				.pathParam("id", testData.get("id") != null ? testData.get("id") : "")
				.header("Authorization", testData.get("API_KEY"))
                .when()
                .post("/checkout-cart-anonymous/{id}")  
                .then() 
                .extract().response();    
         
                if (response.statusCode() == 200) {
					System.out.println("Description: Success");
      
              if (response.jsonPath().get("id") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("id"), instanceOf(String.class));  
          }
      
              if (response.jsonPath().get("language") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("language"), instanceOf(String.class));  
          }
      
              if (response.jsonPath().get("currency") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("currency"), instanceOf(String.class));  
                MatcherAssert.assertThat(response.jsonPath().getString("currency"), anyOf(equalTo("NOK"), equalTo("DKK"), equalTo("EUR")));
  
          }
      
              if (response.jsonPath().get("price") != null) {      
              if (response.jsonPath().get("price.currency") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("price.currency"), instanceOf(String.class));  
                MatcherAssert.assertThat(response.jsonPath().getString("price.currency"), anyOf(equalTo("NOK"), equalTo("DKK"), equalTo("EUR")));
  
          }
      
              if (response.jsonPath().get("price.value") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("price.value"), instanceOf(Integer.class));  
          }
      
              if (response.jsonPath().get("price.available") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("price.available"), instanceOf(Boolean.class));  
          }
  
          }
      
              if (response.jsonPath().get("journeyType") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("journeyType"), instanceOf(String.class));  
                MatcherAssert.assertThat(response.jsonPath().getString("journeyType"), anyOf(equalTo("ONEWAY"), equalTo("RETURN"), equalTo("CRUISE"), equalTo("PACKAGE")));
  
          }
      
              if (response.jsonPath().get("passengers") != null) {      
                for (int i = 0; i < response.jsonPath().getList("passengers").size(); i++) {      
              if (response.jsonPath().get("passengers["+ i +"].code") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("passengers["+ i +"].code"), instanceOf(String.class));  
                MatcherAssert.assertThat(response.jsonPath().getString("passengers["+ i +"].code"), anyOf(equalTo("ADULT"), equalTo("CHILD"), equalTo("INFANT"), equalTo("BABY")));
  
          }
      
              if (response.jsonPath().get("passengers["+ i +"].quantity") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("passengers["+ i +"].quantity"), instanceOf(Integer.class));  
          }
      
                  }    
                MatcherAssert.assertThat(response.jsonPath().getList("passengers"), instanceOf(List.class));
  
          }
      
              if (response.jsonPath().get("contactPerson") != null) {      
              if (response.jsonPath().get("contactPerson.contactInfo") != null) {      
              if (response.jsonPath().get("contactPerson.contactInfo.address") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("contactPerson.contactInfo.address"), instanceOf(String.class));  
          }
      
              if (response.jsonPath().get("contactPerson.contactInfo.city") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("contactPerson.contactInfo.city"), instanceOf(String.class));  
          }
      
              if (response.jsonPath().get("contactPerson.contactInfo.country") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("contactPerson.contactInfo.country"), instanceOf(String.class));  
                MatcherAssert.assertThat(response.jsonPath().getString("contactPerson.contactInfo.country"), anyOf(equalTo("AD"), equalTo("AE"), equalTo("AF"), equalTo("AG"), equalTo("AL"), equalTo("AM"), equalTo("AO"), equalTo("AR"), equalTo("AT"), equalTo("AU"), equalTo("AZ"), equalTo("BA"), equalTo("BB"), equalTo("BD"), equalTo("BE"), equalTo("BF"), equalTo("BG"), equalTo("BH"), equalTo("BI"), equalTo("BJ"), equalTo("BN"), equalTo("BO"), equalTo("BR"), equalTo("BS"), equalTo("BT"), equalTo("BW"), equalTo("BY"), equalTo("BZ"), equalTo("CA"), equalTo("CD"), equalTo("CF"), equalTo("CG"), equalTo("CH"), equalTo("CI"), equalTo("CL"), equalTo("CM"), equalTo("CN"), equalTo("CO"), equalTo("CR"), equalTo("CU"), equalTo("CV"), equalTo("CY"), equalTo("CZ"), equalTo("DE"), equalTo("DJ"), equalTo("DK"), equalTo("DM"), equalTo("DO"), equalTo("DZ"), equalTo("EC"), equalTo("EE"), equalTo("EG"), equalTo("EH"), equalTo("ER"), equalTo("ES"), equalTo("ET"), equalTo("FI"), equalTo("FJ"), equalTo("FO"), equalTo("FR"), equalTo("GA"), equalTo("GB"), equalTo("GD"), equalTo("GE"), equalTo("GH"), equalTo("GI"), equalTo("GM"), equalTo("GN"), equalTo("GQ"), equalTo("GR"), equalTo("GT"), equalTo("GW"), equalTo("GY"), equalTo("HK"), equalTo("HN"), equalTo("HR"), equalTo("HT"), equalTo("HU"), equalTo("ID"), equalTo("IE"), equalTo("IL"), equalTo("IN"), equalTo("IQ"), equalTo("IR"), equalTo("IS"), equalTo("IT"), equalTo("JM"), equalTo("JO"), equalTo("JP"), equalTo("KE"), equalTo("KG"), equalTo("KH"), equalTo("KI"), equalTo("KM"), equalTo("KP"), equalTo("KR"), equalTo("KW"), equalTo("KZ"), equalTo("LA"), equalTo("LB"), equalTo("LI"), equalTo("LK"), equalTo("LR"), equalTo("LS"), equalTo("LT"), equalTo("LU"), equalTo("LV"), equalTo("LY"), equalTo("MA"), equalTo("MC"), equalTo("MD"), equalTo("ME"), equalTo("MG"), equalTo("MH"), equalTo("MK"), equalTo("ML"), equalTo("MM"), equalTo("MN"), equalTo("MO"), equalTo("MQ"), equalTo("MR"), equalTo("MT"), equalTo("MU"), equalTo("MV"), equalTo("MW"), equalTo("MX"), equalTo("MY"), equalTo("MZ"), equalTo("NA"), equalTo("NE"), equalTo("NG"), equalTo("NI"), equalTo("NL"), equalTo("NO"), equalTo("NP"), equalTo("NR"), equalTo("NU"), equalTo("NZ"), equalTo("OM"), equalTo("PA"), equalTo("PE"), equalTo("PG"), equalTo("PH"), equalTo("PK"), equalTo("PL"), equalTo("PT"), equalTo("PY"), equalTo("QA"), equalTo("RO"), equalTo("RS"), equalTo("RU"), equalTo("RW"), equalTo("SA"), equalTo("SC"), equalTo("SD"), equalTo("SE"), equalTo("SG"), equalTo("SI"), equalTo("SK"), equalTo("SL"), equalTo("SM"), equalTo("SN"), equalTo("SO"), equalTo("SR"), equalTo("SS"), equalTo("ST"), equalTo("SV"), equalTo("SY"), equalTo("TD"), equalTo("TG"), equalTo("TH"), equalTo("TJ"), equalTo("TK"), equalTo("TL"), equalTo("TM"), equalTo("TN"), equalTo("TO"), equalTo("TR"), equalTo("TT"), equalTo("TV"), equalTo("TW"), equalTo("TZ"), equalTo("UA"), equalTo("UG"), equalTo("US"), equalTo("UY"), equalTo("UZ"), equalTo("VE"), equalTo("VN"), equalTo("VU"), equalTo("WS"), equalTo("YE"), equalTo("ZA"), equalTo("ZM"), equalTo("ZW")));
  
          }
      
              if (response.jsonPath().get("contactPerson.contactInfo.email") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("contactPerson.contactInfo.email"), instanceOf(String.class));  
          }
      
              if (response.jsonPath().get("contactPerson.contactInfo.mobile") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("contactPerson.contactInfo.mobile"), instanceOf(String.class));  
          }
      
              if (response.jsonPath().get("contactPerson.contactInfo.zip") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("contactPerson.contactInfo.zip"), instanceOf(String.class));  
          }
  
          }
      
              if (response.jsonPath().get("contactPerson.birthYear") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("contactPerson.birthYear"), instanceOf(Integer.class));  
          }
      
              if (response.jsonPath().get("contactPerson.birthMonth") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("contactPerson.birthMonth"), instanceOf(Integer.class));  
          }
      
              if (response.jsonPath().get("contactPerson.birthDay") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("contactPerson.birthDay"), instanceOf(Integer.class));  
          }
      
              if (response.jsonPath().get("contactPerson.firstName") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("contactPerson.firstName"), instanceOf(String.class));  
          }
      
              if (response.jsonPath().get("contactPerson.lastName") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("contactPerson.lastName"), instanceOf(String.class));  
          }
      
              if (response.jsonPath().get("contactPerson.memberNumber") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("contactPerson.memberNumber"), instanceOf(String.class));  
          }
      
              if (response.jsonPath().get("contactPerson.redeemableClubPoints") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("contactPerson.redeemableClubPoints"), instanceOf(Integer.class));  
          }
      
              if (response.jsonPath().get("contactPerson.customerCode") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("contactPerson.customerCode"), instanceOf(String.class));  
          }
      
              if (response.jsonPath().get("contactPerson.gender") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("contactPerson.gender"), instanceOf(String.class));  
                MatcherAssert.assertThat(response.jsonPath().getString("contactPerson.gender"), anyOf(equalTo("UNSPECIFIED"), equalTo("MALE"), equalTo("FEMALE"), equalTo("ORGANIZATION"), equalTo("UNKNOWN")));
  
          }
      
              if (response.jsonPath().get("contactPerson.nationality") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("contactPerson.nationality"), instanceOf(String.class));  
                MatcherAssert.assertThat(response.jsonPath().getString("contactPerson.nationality"), anyOf(equalTo("AD"), equalTo("AE"), equalTo("AF"), equalTo("AG"), equalTo("AL"), equalTo("AM"), equalTo("AO"), equalTo("AR"), equalTo("AT"), equalTo("AU"), equalTo("AZ"), equalTo("BA"), equalTo("BB"), equalTo("BD"), equalTo("BE"), equalTo("BF"), equalTo("BG"), equalTo("BH"), equalTo("BI"), equalTo("BJ"), equalTo("BN"), equalTo("BO"), equalTo("BR"), equalTo("BS"), equalTo("BT"), equalTo("BW"), equalTo("BY"), equalTo("BZ"), equalTo("CA"), equalTo("CD"), equalTo("CF"), equalTo("CG"), equalTo("CH"), equalTo("CI"), equalTo("CL"), equalTo("CM"), equalTo("CN"), equalTo("CO"), equalTo("CR"), equalTo("CU"), equalTo("CV"), equalTo("CY"), equalTo("CZ"), equalTo("DE"), equalTo("DJ"), equalTo("DK"), equalTo("DM"), equalTo("DO"), equalTo("DZ"), equalTo("EC"), equalTo("EE"), equalTo("EG"), equalTo("EH"), equalTo("ER"), equalTo("ES"), equalTo("ET"), equalTo("FI"), equalTo("FJ"), equalTo("FO"), equalTo("FR"), equalTo("GA"), equalTo("GB"), equalTo("GD"), equalTo("GE"), equalTo("GH"), equalTo("GI"), equalTo("GM"), equalTo("GN"), equalTo("GQ"), equalTo("GR"), equalTo("GT"), equalTo("GW"), equalTo("GY"), equalTo("HK"), equalTo("HN"), equalTo("HR"), equalTo("HT"), equalTo("HU"), equalTo("ID"), equalTo("IE"), equalTo("IL"), equalTo("IN"), equalTo("IQ"), equalTo("IR"), equalTo("IS"), equalTo("IT"), equalTo("JM"), equalTo("JO"), equalTo("JP"), equalTo("KE"), equalTo("KG"), equalTo("KH"), equalTo("KI"), equalTo("KM"), equalTo("KP"), equalTo("KR"), equalTo("KW"), equalTo("KZ"), equalTo("LA"), equalTo("LB"), equalTo("LI"), equalTo("LK"), equalTo("LR"), equalTo("LS"), equalTo("LT"), equalTo("LU"), equalTo("LV"), equalTo("LY"), equalTo("MA"), equalTo("MC"), equalTo("MD"), equalTo("ME"), equalTo("MG"), equalTo("MH"), equalTo("MK"), equalTo("ML"), equalTo("MM"), equalTo("MN"), equalTo("MO"), equalTo("MQ"), equalTo("MR"), equalTo("MT"), equalTo("MU"), equalTo("MV"), equalTo("MW"), equalTo("MX"), equalTo("MY"), equalTo("MZ"), equalTo("NA"), equalTo("NE"), equalTo("NG"), equalTo("NI"), equalTo("NL"), equalTo("NO"), equalTo("NP"), equalTo("NR"), equalTo("NU"), equalTo("NZ"), equalTo("OM"), equalTo("PA"), equalTo("PE"), equalTo("PG"), equalTo("PH"), equalTo("PK"), equalTo("PL"), equalTo("PT"), equalTo("PY"), equalTo("QA"), equalTo("RO"), equalTo("RS"), equalTo("RU"), equalTo("RW"), equalTo("SA"), equalTo("SC"), equalTo("SD"), equalTo("SE"), equalTo("SG"), equalTo("SI"), equalTo("SK"), equalTo("SL"), equalTo("SM"), equalTo("SN"), equalTo("SO"), equalTo("SR"), equalTo("SS"), equalTo("ST"), equalTo("SV"), equalTo("SY"), equalTo("TD"), equalTo("TG"), equalTo("TH"), equalTo("TJ"), equalTo("TK"), equalTo("TL"), equalTo("TM"), equalTo("TN"), equalTo("TO"), equalTo("TR"), equalTo("TT"), equalTo("TV"), equalTo("TW"), equalTo("TZ"), equalTo("UA"), equalTo("UG"), equalTo("US"), equalTo("UY"), equalTo("UZ"), equalTo("VE"), equalTo("VN"), equalTo("VU"), equalTo("WS"), equalTo("YE"), equalTo("ZA"), equalTo("ZM"), equalTo("ZW")));
  
          }
  
          }
      
              if (response.jsonPath().get("passengerDetails") != null) {      
                for (int i = 0; i < response.jsonPath().getList("passengerDetails").size(); i++) {      
              if (response.jsonPath().get("passengerDetails["+ i +"].contactInfo") != null) {      
              if (response.jsonPath().get("passengerDetails["+ i +"].contactInfo.address") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("passengerDetails["+ i +"].contactInfo.address"), instanceOf(String.class));  
          }
      
              if (response.jsonPath().get("passengerDetails["+ i +"].contactInfo.city") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("passengerDetails["+ i +"].contactInfo.city"), instanceOf(String.class));  
          }
      
              if (response.jsonPath().get("passengerDetails["+ i +"].contactInfo.country") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("passengerDetails["+ i +"].contactInfo.country"), instanceOf(String.class));  
                MatcherAssert.assertThat(response.jsonPath().getString("passengerDetails["+ i +"].contactInfo.country"), anyOf(equalTo("AD"), equalTo("AE"), equalTo("AF"), equalTo("AG"), equalTo("AL"), equalTo("AM"), equalTo("AO"), equalTo("AR"), equalTo("AT"), equalTo("AU"), equalTo("AZ"), equalTo("BA"), equalTo("BB"), equalTo("BD"), equalTo("BE"), equalTo("BF"), equalTo("BG"), equalTo("BH"), equalTo("BI"), equalTo("BJ"), equalTo("BN"), equalTo("BO"), equalTo("BR"), equalTo("BS"), equalTo("BT"), equalTo("BW"), equalTo("BY"), equalTo("BZ"), equalTo("CA"), equalTo("CD"), equalTo("CF"), equalTo("CG"), equalTo("CH"), equalTo("CI"), equalTo("CL"), equalTo("CM"), equalTo("CN"), equalTo("CO"), equalTo("CR"), equalTo("CU"), equalTo("CV"), equalTo("CY"), equalTo("CZ"), equalTo("DE"), equalTo("DJ"), equalTo("DK"), equalTo("DM"), equalTo("DO"), equalTo("DZ"), equalTo("EC"), equalTo("EE"), equalTo("EG"), equalTo("EH"), equalTo("ER"), equalTo("ES"), equalTo("ET"), equalTo("FI"), equalTo("FJ"), equalTo("FO"), equalTo("FR"), equalTo("GA"), equalTo("GB"), equalTo("GD"), equalTo("GE"), equalTo("GH"), equalTo("GI"), equalTo("GM"), equalTo("GN"), equalTo("GQ"), equalTo("GR"), equalTo("GT"), equalTo("GW"), equalTo("GY"), equalTo("HK"), equalTo("HN"), equalTo("HR"), equalTo("HT"), equalTo("HU"), equalTo("ID"), equalTo("IE"), equalTo("IL"), equalTo("IN"), equalTo("IQ"), equalTo("IR"), equalTo("IS"), equalTo("IT"), equalTo("JM"), equalTo("JO"), equalTo("JP"), equalTo("KE"), equalTo("KG"), equalTo("KH"), equalTo("KI"), equalTo("KM"), equalTo("KP"), equalTo("KR"), equalTo("KW"), equalTo("KZ"), equalTo("LA"), equalTo("LB"), equalTo("LI"), equalTo("LK"), equalTo("LR"), equalTo("LS"), equalTo("LT"), equalTo("LU"), equalTo("LV"), equalTo("LY"), equalTo("MA"), equalTo("MC"), equalTo("MD"), equalTo("ME"), equalTo("MG"), equalTo("MH"), equalTo("MK"), equalTo("ML"), equalTo("MM"), equalTo("MN"), equalTo("MO"), equalTo("MQ"), equalTo("MR"), equalTo("MT"), equalTo("MU"), equalTo("MV"), equalTo("MW"), equalTo("MX"), equalTo("MY"), equalTo("MZ"), equalTo("NA"), equalTo("NE"), equalTo("NG"), equalTo("NI"), equalTo("NL"), equalTo("NO"), equalTo("NP"), equalTo("NR"), equalTo("NU"), equalTo("NZ"), equalTo("OM"), equalTo("PA"), equalTo("PE"), equalTo("PG"), equalTo("PH"), equalTo("PK"), equalTo("PL"), equalTo("PT"), equalTo("PY"), equalTo("QA"), equalTo("RO"), equalTo("RS"), equalTo("RU"), equalTo("RW"), equalTo("SA"), equalTo("SC"), equalTo("SD"), equalTo("SE"), equalTo("SG"), equalTo("SI"), equalTo("SK"), equalTo("SL"), equalTo("SM"), equalTo("SN"), equalTo("SO"), equalTo("SR"), equalTo("SS"), equalTo("ST"), equalTo("SV"), equalTo("SY"), equalTo("TD"), equalTo("TG"), equalTo("TH"), equalTo("TJ"), equalTo("TK"), equalTo("TL"), equalTo("TM"), equalTo("TN"), equalTo("TO"), equalTo("TR"), equalTo("TT"), equalTo("TV"), equalTo("TW"), equalTo("TZ"), equalTo("UA"), equalTo("UG"), equalTo("US"), equalTo("UY"), equalTo("UZ"), equalTo("VE"), equalTo("VN"), equalTo("VU"), equalTo("WS"), equalTo("YE"), equalTo("ZA"), equalTo("ZM"), equalTo("ZW")));
  
          }
      
              if (response.jsonPath().get("passengerDetails["+ i +"].contactInfo.email") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("passengerDetails["+ i +"].contactInfo.email"), instanceOf(String.class));  
          }
      
              if (response.jsonPath().get("passengerDetails["+ i +"].contactInfo.mobile") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("passengerDetails["+ i +"].contactInfo.mobile"), instanceOf(String.class));  
          }
      
              if (response.jsonPath().get("passengerDetails["+ i +"].contactInfo.zip") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("passengerDetails["+ i +"].contactInfo.zip"), instanceOf(String.class));  
          }
  
          }
      
              if (response.jsonPath().get("passengerDetails["+ i +"].birthYear") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("passengerDetails["+ i +"].birthYear"), instanceOf(Integer.class));  
          }
      
              if (response.jsonPath().get("passengerDetails["+ i +"].birthMonth") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("passengerDetails["+ i +"].birthMonth"), instanceOf(Integer.class));  
          }
      
              if (response.jsonPath().get("passengerDetails["+ i +"].birthDay") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("passengerDetails["+ i +"].birthDay"), instanceOf(Integer.class));  
          }
      
              if (response.jsonPath().get("passengerDetails["+ i +"].firstName") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("passengerDetails["+ i +"].firstName"), instanceOf(String.class));  
          }
      
              if (response.jsonPath().get("passengerDetails["+ i +"].lastName") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("passengerDetails["+ i +"].lastName"), instanceOf(String.class));  
          }
      
              if (response.jsonPath().get("passengerDetails["+ i +"].memberNumber") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("passengerDetails["+ i +"].memberNumber"), instanceOf(String.class));  
          }
      
              if (response.jsonPath().get("passengerDetails["+ i +"].redeemableClubPoints") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("passengerDetails["+ i +"].redeemableClubPoints"), instanceOf(Integer.class));  
          }
      
              if (response.jsonPath().get("passengerDetails["+ i +"].customerCode") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("passengerDetails["+ i +"].customerCode"), instanceOf(String.class));  
          }
      
              if (response.jsonPath().get("passengerDetails["+ i +"].gender") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("passengerDetails["+ i +"].gender"), instanceOf(String.class));  
                MatcherAssert.assertThat(response.jsonPath().getString("passengerDetails["+ i +"].gender"), anyOf(equalTo("UNSPECIFIED"), equalTo("MALE"), equalTo("FEMALE"), equalTo("ORGANIZATION"), equalTo("UNKNOWN")));
  
          }
      
              if (response.jsonPath().get("passengerDetails["+ i +"].nationality") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("passengerDetails["+ i +"].nationality"), instanceOf(String.class));  
                MatcherAssert.assertThat(response.jsonPath().getString("passengerDetails["+ i +"].nationality"), anyOf(equalTo("AD"), equalTo("AE"), equalTo("AF"), equalTo("AG"), equalTo("AL"), equalTo("AM"), equalTo("AO"), equalTo("AR"), equalTo("AT"), equalTo("AU"), equalTo("AZ"), equalTo("BA"), equalTo("BB"), equalTo("BD"), equalTo("BE"), equalTo("BF"), equalTo("BG"), equalTo("BH"), equalTo("BI"), equalTo("BJ"), equalTo("BN"), equalTo("BO"), equalTo("BR"), equalTo("BS"), equalTo("BT"), equalTo("BW"), equalTo("BY"), equalTo("BZ"), equalTo("CA"), equalTo("CD"), equalTo("CF"), equalTo("CG"), equalTo("CH"), equalTo("CI"), equalTo("CL"), equalTo("CM"), equalTo("CN"), equalTo("CO"), equalTo("CR"), equalTo("CU"), equalTo("CV"), equalTo("CY"), equalTo("CZ"), equalTo("DE"), equalTo("DJ"), equalTo("DK"), equalTo("DM"), equalTo("DO"), equalTo("DZ"), equalTo("EC"), equalTo("EE"), equalTo("EG"), equalTo("EH"), equalTo("ER"), equalTo("ES"), equalTo("ET"), equalTo("FI"), equalTo("FJ"), equalTo("FO"), equalTo("FR"), equalTo("GA"), equalTo("GB"), equalTo("GD"), equalTo("GE"), equalTo("GH"), equalTo("GI"), equalTo("GM"), equalTo("GN"), equalTo("GQ"), equalTo("GR"), equalTo("GT"), equalTo("GW"), equalTo("GY"), equalTo("HK"), equalTo("HN"), equalTo("HR"), equalTo("HT"), equalTo("HU"), equalTo("ID"), equalTo("IE"), equalTo("IL"), equalTo("IN"), equalTo("IQ"), equalTo("IR"), equalTo("IS"), equalTo("IT"), equalTo("JM"), equalTo("JO"), equalTo("JP"), equalTo("KE"), equalTo("KG"), equalTo("KH"), equalTo("KI"), equalTo("KM"), equalTo("KP"), equalTo("KR"), equalTo("KW"), equalTo("KZ"), equalTo("LA"), equalTo("LB"), equalTo("LI"), equalTo("LK"), equalTo("LR"), equalTo("LS"), equalTo("LT"), equalTo("LU"), equalTo("LV"), equalTo("LY"), equalTo("MA"), equalTo("MC"), equalTo("MD"), equalTo("ME"), equalTo("MG"), equalTo("MH"), equalTo("MK"), equalTo("ML"), equalTo("MM"), equalTo("MN"), equalTo("MO"), equalTo("MQ"), equalTo("MR"), equalTo("MT"), equalTo("MU"), equalTo("MV"), equalTo("MW"), equalTo("MX"), equalTo("MY"), equalTo("MZ"), equalTo("NA"), equalTo("NE"), equalTo("NG"), equalTo("NI"), equalTo("NL"), equalTo("NO"), equalTo("NP"), equalTo("NR"), equalTo("NU"), equalTo("NZ"), equalTo("OM"), equalTo("PA"), equalTo("PE"), equalTo("PG"), equalTo("PH"), equalTo("PK"), equalTo("PL"), equalTo("PT"), equalTo("PY"), equalTo("QA"), equalTo("RO"), equalTo("RS"), equalTo("RU"), equalTo("RW"), equalTo("SA"), equalTo("SC"), equalTo("SD"), equalTo("SE"), equalTo("SG"), equalTo("SI"), equalTo("SK"), equalTo("SL"), equalTo("SM"), equalTo("SN"), equalTo("SO"), equalTo("SR"), equalTo("SS"), equalTo("ST"), equalTo("SV"), equalTo("SY"), equalTo("TD"), equalTo("TG"), equalTo("TH"), equalTo("TJ"), equalTo("TK"), equalTo("TL"), equalTo("TM"), equalTo("TN"), equalTo("TO"), equalTo("TR"), equalTo("TT"), equalTo("TV"), equalTo("TW"), equalTo("TZ"), equalTo("UA"), equalTo("UG"), equalTo("US"), equalTo("UY"), equalTo("UZ"), equalTo("VE"), equalTo("VN"), equalTo("VU"), equalTo("WS"), equalTo("YE"), equalTo("ZA"), equalTo("ZM"), equalTo("ZW")));
  
          }
      
              if (response.jsonPath().get("passengerDetails["+ i +"].disabledPerson") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("passengerDetails["+ i +"].disabledPerson"), instanceOf(Boolean.class));  
          }
      
              if (response.jsonPath().get("passengerDetails["+ i +"].id") != null) {      
              if (response.jsonPath().get("passengerDetails["+ i +"].id.idType") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("passengerDetails["+ i +"].id.idType"), instanceOf(String.class));  
                MatcherAssert.assertThat(response.jsonPath().getString("passengerDetails["+ i +"].id.idType"), anyOf(equalTo("NATIONAL_ID"), equalTo("PASSPORT")));
  
          }
      
              if (response.jsonPath().get("passengerDetails["+ i +"].id.idNumber") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("passengerDetails["+ i +"].id.idNumber"), instanceOf(String.class));  
          }
  
          }
      
              if (response.jsonPath().get("passengerDetails["+ i +"].code") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("passengerDetails["+ i +"].code"), instanceOf(String.class));  
                MatcherAssert.assertThat(response.jsonPath().getString("passengerDetails["+ i +"].code"), anyOf(equalTo("ADULT"), equalTo("CHILD"), equalTo("INFANT"), equalTo("BABY")));
  
          }
      
              if (response.jsonPath().get("passengerDetails["+ i +"].uuid") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("passengerDetails["+ i +"].uuid"), instanceOf(String.class));  
          }
      
              if (response.jsonPath().get("passengerDetails["+ i +"].bookedItemReference") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("passengerDetails["+ i +"].bookedItemReference"), instanceOf(String.class));  
          }
      
                  }    
                MatcherAssert.assertThat(response.jsonPath().getList("passengerDetails"), instanceOf(List.class));
  
          }
      
              if (response.jsonPath().get("outbound") != null) {      
              if (response.jsonPath().get("outbound.journeyCode") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("outbound.journeyCode"), instanceOf(String.class));  
          }
      
              if (response.jsonPath().get("outbound.arrivalPort") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("outbound.arrivalPort"), instanceOf(String.class));  
                MatcherAssert.assertThat(response.jsonPath().getString("outbound.arrivalPort"), anyOf(equalTo("NOLAD"), equalTo("NOBGO"), equalTo("DKHIR"), equalTo("NOSVG"), equalTo("SESMD"), equalTo("NOKRS"), equalTo("NOTRF"), equalTo("DKCPH")));
  
          }
      
              if (response.jsonPath().get("outbound.secondArrivalPort") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("outbound.secondArrivalPort"), instanceOf(String.class));  
                MatcherAssert.assertThat(response.jsonPath().getString("outbound.secondArrivalPort"), anyOf(equalTo("NOLAD"), equalTo("NOBGO"), equalTo("DKHIR"), equalTo("NOSVG"), equalTo("SESMD"), equalTo("NOKRS"), equalTo("NOTRF"), equalTo("DKCPH")));
  
          }
      
              if (response.jsonPath().get("outbound.departureCode") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("outbound.departureCode"), instanceOf(String.class));  
          }
      
              if (response.jsonPath().get("outbound.departurePort") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("outbound.departurePort"), instanceOf(String.class));  
                MatcherAssert.assertThat(response.jsonPath().getString("outbound.departurePort"), anyOf(equalTo("NOLAD"), equalTo("NOBGO"), equalTo("DKHIR"), equalTo("NOSVG"), equalTo("SESMD"), equalTo("NOKRS"), equalTo("NOTRF"), equalTo("DKCPH")));
  
          }
      
              if (response.jsonPath().get("outbound.secondDeparturePort") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("outbound.secondDeparturePort"), instanceOf(String.class));  
                MatcherAssert.assertThat(response.jsonPath().getString("outbound.secondDeparturePort"), anyOf(equalTo("NOLAD"), equalTo("NOBGO"), equalTo("DKHIR"), equalTo("NOSVG"), equalTo("SESMD"), equalTo("NOKRS"), equalTo("NOTRF"), equalTo("DKCPH")));
  
          }
      
              if (response.jsonPath().get("outbound.departureDate") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("outbound.departureDate"), instanceOf(String.class));  
          }
      
              if (response.jsonPath().get("outbound.arrivalDate") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("outbound.arrivalDate"), instanceOf(String.class));  
          }
      
              if (response.jsonPath().get("outbound.ticket") != null) {      
              if (response.jsonPath().get("outbound.ticket.fareType") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("outbound.ticket.fareType"), instanceOf(String.class));  
                MatcherAssert.assertThat(response.jsonPath().getString("outbound.ticket.fareType"), anyOf(equalTo("ECONOMY"), equalTo("FJORDCLUB"), equalTo("FLEX"), equalTo("CRUISE_ONBOARD"), equalTo("CRUISE_ASHORE"), equalTo("CUSTOM")));
  
          }
      
              if (response.jsonPath().get("outbound.ticket.ticketCode") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("outbound.ticket.ticketCode"), instanceOf(String.class));  
          }
  
          }
      
              if (response.jsonPath().get("outbound.passengerPrices") != null) {      
                for (int i = 0; i < response.jsonPath().getList("outbound.passengerPrices").size(); i++) {      
              if (response.jsonPath().get("outbound.passengerPrices["+ i +"].code") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("outbound.passengerPrices["+ i +"].code"), instanceOf(String.class));  
                MatcherAssert.assertThat(response.jsonPath().getString("outbound.passengerPrices["+ i +"].code"), anyOf(equalTo("ADULT"), equalTo("CHILD"), equalTo("INFANT"), equalTo("BABY")));
  
          }
      
              if (response.jsonPath().get("outbound.passengerPrices["+ i +"].price") != null) {      
              if (response.jsonPath().get("outbound.passengerPrices["+ i +"].price.currency") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("outbound.passengerPrices["+ i +"].price.currency"), instanceOf(String.class));  
                MatcherAssert.assertThat(response.jsonPath().getString("outbound.passengerPrices["+ i +"].price.currency"), anyOf(equalTo("NOK"), equalTo("DKK"), equalTo("EUR")));
  
          }
      
              if (response.jsonPath().get("outbound.passengerPrices["+ i +"].price.value") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("outbound.passengerPrices["+ i +"].price.value"), instanceOf(Integer.class));  
          }
      
              if (response.jsonPath().get("outbound.passengerPrices["+ i +"].price.available") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("outbound.passengerPrices["+ i +"].price.available"), instanceOf(Boolean.class));  
          }
  
          }
      
                  }    
                MatcherAssert.assertThat(response.jsonPath().getList("outbound.passengerPrices"), instanceOf(List.class));
  
          }
      
              if (response.jsonPath().get("outbound.cabins") != null) {      
                for (int i = 0; i < response.jsonPath().getList("outbound.cabins").size(); i++) {      
              if (response.jsonPath().get("outbound.cabins["+ i +"].code") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("outbound.cabins["+ i +"].code"), instanceOf(String.class));  
          }
      
              if (response.jsonPath().get("outbound.cabins["+ i +"].edit") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("outbound.cabins["+ i +"].edit"), instanceOf(String.class));  
          }
      
              if (response.jsonPath().get("outbound.cabins["+ i +"].id") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("outbound.cabins["+ i +"].id"), instanceOf(String.class));  
          }
      
              if (response.jsonPath().get("outbound.cabins["+ i +"].price") != null) {      
              if (response.jsonPath().get("outbound.cabins["+ i +"].price.currency") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("outbound.cabins["+ i +"].price.currency"), instanceOf(String.class));  
                MatcherAssert.assertThat(response.jsonPath().getString("outbound.cabins["+ i +"].price.currency"), anyOf(equalTo("NOK"), equalTo("DKK"), equalTo("EUR")));
  
          }
      
              if (response.jsonPath().get("outbound.cabins["+ i +"].price.value") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("outbound.cabins["+ i +"].price.value"), instanceOf(Integer.class));  
          }
      
              if (response.jsonPath().get("outbound.cabins["+ i +"].price.available") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("outbound.cabins["+ i +"].price.available"), instanceOf(Boolean.class));  
          }
  
          }
      
              if (response.jsonPath().get("outbound.cabins["+ i +"].quantityInCabin") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("outbound.cabins["+ i +"].quantityInCabin"), instanceOf(Integer.class));  
          }
      
              if (response.jsonPath().get("outbound.cabins["+ i +"].subCode") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("outbound.cabins["+ i +"].subCode"), instanceOf(String.class));  
          }
      
              if (response.jsonPath().get("outbound.cabins["+ i +"].bookedItemReference") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("outbound.cabins["+ i +"].bookedItemReference"), instanceOf(String.class));  
          }
      
              if (response.jsonPath().get("outbound.cabins["+ i +"].isAttachment") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("outbound.cabins["+ i +"].isAttachment"), instanceOf(Boolean.class));  
          }
      
                  }    
                MatcherAssert.assertThat(response.jsonPath().getList("outbound.cabins"), instanceOf(List.class));
  
          }
      
              if (response.jsonPath().get("outbound.extrasAshore") != null) {      
                for (int i = 0; i < response.jsonPath().getList("outbound.extrasAshore").size(); i++) {      
              if (response.jsonPath().get("outbound.extrasAshore["+ i +"].code") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("outbound.extrasAshore["+ i +"].code"), instanceOf(String.class));  
          }
      
              if (response.jsonPath().get("outbound.extrasAshore["+ i +"].quantity") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("outbound.extrasAshore["+ i +"].quantity"), instanceOf(Integer.class));  
          }
      
              if (response.jsonPath().get("outbound.extrasAshore["+ i +"].price") != null) {      
              if (response.jsonPath().get("outbound.extrasAshore["+ i +"].price.currency") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("outbound.extrasAshore["+ i +"].price.currency"), instanceOf(String.class));  
                MatcherAssert.assertThat(response.jsonPath().getString("outbound.extrasAshore["+ i +"].price.currency"), anyOf(equalTo("NOK"), equalTo("DKK"), equalTo("EUR")));
  
          }
      
              if (response.jsonPath().get("outbound.extrasAshore["+ i +"].price.value") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("outbound.extrasAshore["+ i +"].price.value"), instanceOf(Integer.class));  
          }
      
              if (response.jsonPath().get("outbound.extrasAshore["+ i +"].price.available") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("outbound.extrasAshore["+ i +"].price.available"), instanceOf(Boolean.class));  
          }
  
          }
      
              if (response.jsonPath().get("outbound.extrasAshore["+ i +"].bookedItemReference") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("outbound.extrasAshore["+ i +"].bookedItemReference"), instanceOf(String.class));  
          }
      
              if (response.jsonPath().get("outbound.extrasAshore["+ i +"].isAttachment") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("outbound.extrasAshore["+ i +"].isAttachment"), instanceOf(Boolean.class));  
          }
      
              if (response.jsonPath().get("outbound.extrasAshore["+ i +"].attachmentIsPerPassenger") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("outbound.extrasAshore["+ i +"].attachmentIsPerPassenger"), instanceOf(Boolean.class));  
          }
      
              if (response.jsonPath().get("outbound.extrasAshore["+ i +"].subCode") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("outbound.extrasAshore["+ i +"].subCode"), instanceOf(String.class));  
          }
      
              if (response.jsonPath().get("outbound.extrasAshore["+ i +"].startTime") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("outbound.extrasAshore["+ i +"].startTime"), instanceOf(String.class));  
          }
      
                  }    
                MatcherAssert.assertThat(response.jsonPath().getList("outbound.extrasAshore"), instanceOf(List.class));
  
          }
      
              if (response.jsonPath().get("outbound.extrasAshoreWithOptions") != null) {      
                for (int i = 0; i < response.jsonPath().getList("outbound.extrasAshoreWithOptions").size(); i++) {      
              if (response.jsonPath().get("outbound.extrasAshoreWithOptions["+ i +"].code") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("outbound.extrasAshoreWithOptions["+ i +"].code"), instanceOf(String.class));  
          }
      
              if (response.jsonPath().get("outbound.extrasAshoreWithOptions["+ i +"].quantity") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("outbound.extrasAshoreWithOptions["+ i +"].quantity"), instanceOf(Integer.class));  
          }
      
              if (response.jsonPath().get("outbound.extrasAshoreWithOptions["+ i +"].price") != null) {      
              if (response.jsonPath().get("outbound.extrasAshoreWithOptions["+ i +"].price.currency") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("outbound.extrasAshoreWithOptions["+ i +"].price.currency"), instanceOf(String.class));  
                MatcherAssert.assertThat(response.jsonPath().getString("outbound.extrasAshoreWithOptions["+ i +"].price.currency"), anyOf(equalTo("NOK"), equalTo("DKK"), equalTo("EUR")));
  
          }
      
              if (response.jsonPath().get("outbound.extrasAshoreWithOptions["+ i +"].price.value") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("outbound.extrasAshoreWithOptions["+ i +"].price.value"), instanceOf(Integer.class));  
          }
      
              if (response.jsonPath().get("outbound.extrasAshoreWithOptions["+ i +"].price.available") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("outbound.extrasAshoreWithOptions["+ i +"].price.available"), instanceOf(Boolean.class));  
          }
  
          }
      
              if (response.jsonPath().get("outbound.extrasAshoreWithOptions["+ i +"].bookedItemReference") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("outbound.extrasAshoreWithOptions["+ i +"].bookedItemReference"), instanceOf(String.class));  
          }
      
              if (response.jsonPath().get("outbound.extrasAshoreWithOptions["+ i +"].isAttachment") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("outbound.extrasAshoreWithOptions["+ i +"].isAttachment"), instanceOf(Boolean.class));  
          }
      
              if (response.jsonPath().get("outbound.extrasAshoreWithOptions["+ i +"].attachmentIsPerPassenger") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("outbound.extrasAshoreWithOptions["+ i +"].attachmentIsPerPassenger"), instanceOf(Boolean.class));  
          }
      
              if (response.jsonPath().get("outbound.extrasAshoreWithOptions["+ i +"].subCode") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("outbound.extrasAshoreWithOptions["+ i +"].subCode"), instanceOf(String.class));  
          }
      
              if (response.jsonPath().get("outbound.extrasAshoreWithOptions["+ i +"].startTime") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("outbound.extrasAshoreWithOptions["+ i +"].startTime"), instanceOf(String.class));  
          }
      
                  }    
                MatcherAssert.assertThat(response.jsonPath().getList("outbound.extrasAshoreWithOptions"), instanceOf(List.class));
  
          }
      
              if (response.jsonPath().get("outbound.extrasOnboard") != null) {      
                for (int i = 0; i < response.jsonPath().getList("outbound.extrasOnboard").size(); i++) {      
              if (response.jsonPath().get("outbound.extrasOnboard["+ i +"].code") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("outbound.extrasOnboard["+ i +"].code"), instanceOf(String.class));  
          }
      
              if (response.jsonPath().get("outbound.extrasOnboard["+ i +"].quantity") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("outbound.extrasOnboard["+ i +"].quantity"), instanceOf(Integer.class));  
          }
      
              if (response.jsonPath().get("outbound.extrasOnboard["+ i +"].price") != null) {      
              if (response.jsonPath().get("outbound.extrasOnboard["+ i +"].price.currency") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("outbound.extrasOnboard["+ i +"].price.currency"), instanceOf(String.class));  
                MatcherAssert.assertThat(response.jsonPath().getString("outbound.extrasOnboard["+ i +"].price.currency"), anyOf(equalTo("NOK"), equalTo("DKK"), equalTo("EUR")));
  
          }
      
              if (response.jsonPath().get("outbound.extrasOnboard["+ i +"].price.value") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("outbound.extrasOnboard["+ i +"].price.value"), instanceOf(Integer.class));  
          }
      
              if (response.jsonPath().get("outbound.extrasOnboard["+ i +"].price.available") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("outbound.extrasOnboard["+ i +"].price.available"), instanceOf(Boolean.class));  
          }
  
          }
      
              if (response.jsonPath().get("outbound.extrasOnboard["+ i +"].bookedItemReference") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("outbound.extrasOnboard["+ i +"].bookedItemReference"), instanceOf(String.class));  
          }
      
              if (response.jsonPath().get("outbound.extrasOnboard["+ i +"].isAttachment") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("outbound.extrasOnboard["+ i +"].isAttachment"), instanceOf(Boolean.class));  
          }
      
              if (response.jsonPath().get("outbound.extrasOnboard["+ i +"].attachmentIsPerPassenger") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("outbound.extrasOnboard["+ i +"].attachmentIsPerPassenger"), instanceOf(Boolean.class));  
          }
      
              if (response.jsonPath().get("outbound.extrasOnboard["+ i +"].subCode") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("outbound.extrasOnboard["+ i +"].subCode"), instanceOf(String.class));  
          }
      
              if (response.jsonPath().get("outbound.extrasOnboard["+ i +"].startTime") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("outbound.extrasOnboard["+ i +"].startTime"), instanceOf(String.class));  
          }
      
                  }    
                MatcherAssert.assertThat(response.jsonPath().getList("outbound.extrasOnboard"), instanceOf(List.class));
  
          }
      
              if (response.jsonPath().get("outbound.meals") != null) {      
                for (int i = 0; i < response.jsonPath().getList("outbound.meals").size(); i++) {      
              if (response.jsonPath().get("outbound.meals["+ i +"].code") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("outbound.meals["+ i +"].code"), instanceOf(String.class));  
          }
      
              if (response.jsonPath().get("outbound.meals["+ i +"].quantity") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("outbound.meals["+ i +"].quantity"), instanceOf(Integer.class));  
          }
      
              if (response.jsonPath().get("outbound.meals["+ i +"].price") != null) {      
              if (response.jsonPath().get("outbound.meals["+ i +"].price.currency") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("outbound.meals["+ i +"].price.currency"), instanceOf(String.class));  
                MatcherAssert.assertThat(response.jsonPath().getString("outbound.meals["+ i +"].price.currency"), anyOf(equalTo("NOK"), equalTo("DKK"), equalTo("EUR")));
  
          }
      
              if (response.jsonPath().get("outbound.meals["+ i +"].price.value") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("outbound.meals["+ i +"].price.value"), instanceOf(Integer.class));  
          }
      
              if (response.jsonPath().get("outbound.meals["+ i +"].price.available") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("outbound.meals["+ i +"].price.available"), instanceOf(Boolean.class));  
          }
  
          }
      
              if (response.jsonPath().get("outbound.meals["+ i +"].bookedItemReference") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("outbound.meals["+ i +"].bookedItemReference"), instanceOf(String.class));  
          }
      
              if (response.jsonPath().get("outbound.meals["+ i +"].isAttachment") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("outbound.meals["+ i +"].isAttachment"), instanceOf(Boolean.class));  
          }
      
              if (response.jsonPath().get("outbound.meals["+ i +"].attachmentIsPerPassenger") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("outbound.meals["+ i +"].attachmentIsPerPassenger"), instanceOf(Boolean.class));  
          }
      
              if (response.jsonPath().get("outbound.meals["+ i +"].subCode") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("outbound.meals["+ i +"].subCode"), instanceOf(String.class));  
          }
      
              if (response.jsonPath().get("outbound.meals["+ i +"].startTime") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("outbound.meals["+ i +"].startTime"), instanceOf(String.class));  
          }
      
              if (response.jsonPath().get("outbound.meals["+ i +"].isOutbound") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("outbound.meals["+ i +"].isOutbound"), instanceOf(Boolean.class));  
          }
      
              if (response.jsonPath().get("outbound.meals["+ i +"].legCode") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("outbound.meals["+ i +"].legCode"), instanceOf(String.class));  
          }
      
                  }    
                MatcherAssert.assertThat(response.jsonPath().getList("outbound.meals"), instanceOf(List.class));
  
          }
      
              if (response.jsonPath().get("outbound.vehicles") != null) {      
                for (int i = 0; i < response.jsonPath().getList("outbound.vehicles").size(); i++) {      
              if (response.jsonPath().get("outbound.vehicles["+ i +"].code") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("outbound.vehicles["+ i +"].code"), instanceOf(String.class));  
          }
      
              if (response.jsonPath().get("outbound.vehicles["+ i +"].quantity") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("outbound.vehicles["+ i +"].quantity"), instanceOf(Integer.class));  
          }
      
              if (response.jsonPath().get("outbound.vehicles["+ i +"].price") != null) {      
              if (response.jsonPath().get("outbound.vehicles["+ i +"].price.currency") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("outbound.vehicles["+ i +"].price.currency"), instanceOf(String.class));  
                MatcherAssert.assertThat(response.jsonPath().getString("outbound.vehicles["+ i +"].price.currency"), anyOf(equalTo("NOK"), equalTo("DKK"), equalTo("EUR")));
  
          }
      
              if (response.jsonPath().get("outbound.vehicles["+ i +"].price.value") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("outbound.vehicles["+ i +"].price.value"), instanceOf(Integer.class));  
          }
      
              if (response.jsonPath().get("outbound.vehicles["+ i +"].price.available") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("outbound.vehicles["+ i +"].price.available"), instanceOf(Boolean.class));  
          }
  
          }
      
              if (response.jsonPath().get("outbound.vehicles["+ i +"].bookedItemReference") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("outbound.vehicles["+ i +"].bookedItemReference"), instanceOf(String.class));  
          }
      
              if (response.jsonPath().get("outbound.vehicles["+ i +"].isAttachment") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("outbound.vehicles["+ i +"].isAttachment"), instanceOf(Boolean.class));  
          }
      
              if (response.jsonPath().get("outbound.vehicles["+ i +"].attachmentIsPerPassenger") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("outbound.vehicles["+ i +"].attachmentIsPerPassenger"), instanceOf(Boolean.class));  
          }
      
              if (response.jsonPath().get("outbound.vehicles["+ i +"].regNum") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("outbound.vehicles["+ i +"].regNum"), instanceOf(String.class));  
          }
      
              if (response.jsonPath().get("outbound.vehicles["+ i +"].length") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("outbound.vehicles["+ i +"].length"), instanceOf(Integer.class));  
          }
      
              if (response.jsonPath().get("outbound.vehicles["+ i +"].hasTrailer") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("outbound.vehicles["+ i +"].hasTrailer"), instanceOf(Boolean.class));  
          }
      
              if (response.jsonPath().get("outbound.vehicles["+ i +"].id") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("outbound.vehicles["+ i +"].id"), instanceOf(String.class));  
          }
      
                  }    
                MatcherAssert.assertThat(response.jsonPath().getList("outbound.vehicles"), instanceOf(List.class));
  
          }
      
              if (response.jsonPath().get("outbound.vesselCode") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("outbound.vesselCode"), instanceOf(String.class));  
          }
  
          }
      
              if (response.jsonPath().get("inbound") != null) {      
              if (response.jsonPath().get("inbound.journeyCode") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("inbound.journeyCode"), instanceOf(String.class));  
          }
      
              if (response.jsonPath().get("inbound.arrivalPort") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("inbound.arrivalPort"), instanceOf(String.class));  
                MatcherAssert.assertThat(response.jsonPath().getString("inbound.arrivalPort"), anyOf(equalTo("NOLAD"), equalTo("NOBGO"), equalTo("DKHIR"), equalTo("NOSVG"), equalTo("SESMD"), equalTo("NOKRS"), equalTo("NOTRF"), equalTo("DKCPH")));
  
          }
      
              if (response.jsonPath().get("inbound.secondArrivalPort") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("inbound.secondArrivalPort"), instanceOf(String.class));  
                MatcherAssert.assertThat(response.jsonPath().getString("inbound.secondArrivalPort"), anyOf(equalTo("NOLAD"), equalTo("NOBGO"), equalTo("DKHIR"), equalTo("NOSVG"), equalTo("SESMD"), equalTo("NOKRS"), equalTo("NOTRF"), equalTo("DKCPH")));
  
          }
      
              if (response.jsonPath().get("inbound.departureCode") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("inbound.departureCode"), instanceOf(String.class));  
          }
      
              if (response.jsonPath().get("inbound.departurePort") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("inbound.departurePort"), instanceOf(String.class));  
                MatcherAssert.assertThat(response.jsonPath().getString("inbound.departurePort"), anyOf(equalTo("NOLAD"), equalTo("NOBGO"), equalTo("DKHIR"), equalTo("NOSVG"), equalTo("SESMD"), equalTo("NOKRS"), equalTo("NOTRF"), equalTo("DKCPH")));
  
          }
      
              if (response.jsonPath().get("inbound.secondDeparturePort") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("inbound.secondDeparturePort"), instanceOf(String.class));  
                MatcherAssert.assertThat(response.jsonPath().getString("inbound.secondDeparturePort"), anyOf(equalTo("NOLAD"), equalTo("NOBGO"), equalTo("DKHIR"), equalTo("NOSVG"), equalTo("SESMD"), equalTo("NOKRS"), equalTo("NOTRF"), equalTo("DKCPH")));
  
          }
      
              if (response.jsonPath().get("inbound.departureDate") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("inbound.departureDate"), instanceOf(String.class));  
          }
      
              if (response.jsonPath().get("inbound.arrivalDate") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("inbound.arrivalDate"), instanceOf(String.class));  
          }
      
              if (response.jsonPath().get("inbound.ticket") != null) {      
              if (response.jsonPath().get("inbound.ticket.fareType") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("inbound.ticket.fareType"), instanceOf(String.class));  
                MatcherAssert.assertThat(response.jsonPath().getString("inbound.ticket.fareType"), anyOf(equalTo("ECONOMY"), equalTo("FJORDCLUB"), equalTo("FLEX"), equalTo("CRUISE_ONBOARD"), equalTo("CRUISE_ASHORE"), equalTo("CUSTOM")));
  
          }
      
              if (response.jsonPath().get("inbound.ticket.ticketCode") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("inbound.ticket.ticketCode"), instanceOf(String.class));  
          }
  
          }
      
              if (response.jsonPath().get("inbound.passengerPrices") != null) {      
                for (int i = 0; i < response.jsonPath().getList("inbound.passengerPrices").size(); i++) {      
              if (response.jsonPath().get("inbound.passengerPrices["+ i +"].code") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("inbound.passengerPrices["+ i +"].code"), instanceOf(String.class));  
                MatcherAssert.assertThat(response.jsonPath().getString("inbound.passengerPrices["+ i +"].code"), anyOf(equalTo("ADULT"), equalTo("CHILD"), equalTo("INFANT"), equalTo("BABY")));
  
          }
      
              if (response.jsonPath().get("inbound.passengerPrices["+ i +"].price") != null) {      
              if (response.jsonPath().get("inbound.passengerPrices["+ i +"].price.currency") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("inbound.passengerPrices["+ i +"].price.currency"), instanceOf(String.class));  
                MatcherAssert.assertThat(response.jsonPath().getString("inbound.passengerPrices["+ i +"].price.currency"), anyOf(equalTo("NOK"), equalTo("DKK"), equalTo("EUR")));
  
          }
      
              if (response.jsonPath().get("inbound.passengerPrices["+ i +"].price.value") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("inbound.passengerPrices["+ i +"].price.value"), instanceOf(Integer.class));  
          }
      
              if (response.jsonPath().get("inbound.passengerPrices["+ i +"].price.available") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("inbound.passengerPrices["+ i +"].price.available"), instanceOf(Boolean.class));  
          }
  
          }
      
                  }    
                MatcherAssert.assertThat(response.jsonPath().getList("inbound.passengerPrices"), instanceOf(List.class));
  
          }
      
              if (response.jsonPath().get("inbound.cabins") != null) {      
                for (int i = 0; i < response.jsonPath().getList("inbound.cabins").size(); i++) {      
              if (response.jsonPath().get("inbound.cabins["+ i +"].code") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("inbound.cabins["+ i +"].code"), instanceOf(String.class));  
          }
      
              if (response.jsonPath().get("inbound.cabins["+ i +"].edit") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("inbound.cabins["+ i +"].edit"), instanceOf(String.class));  
          }
      
              if (response.jsonPath().get("inbound.cabins["+ i +"].id") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("inbound.cabins["+ i +"].id"), instanceOf(String.class));  
          }
      
              if (response.jsonPath().get("inbound.cabins["+ i +"].price") != null) {      
              if (response.jsonPath().get("inbound.cabins["+ i +"].price.currency") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("inbound.cabins["+ i +"].price.currency"), instanceOf(String.class));  
                MatcherAssert.assertThat(response.jsonPath().getString("inbound.cabins["+ i +"].price.currency"), anyOf(equalTo("NOK"), equalTo("DKK"), equalTo("EUR")));
  
          }
      
              if (response.jsonPath().get("inbound.cabins["+ i +"].price.value") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("inbound.cabins["+ i +"].price.value"), instanceOf(Integer.class));  
          }
      
              if (response.jsonPath().get("inbound.cabins["+ i +"].price.available") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("inbound.cabins["+ i +"].price.available"), instanceOf(Boolean.class));  
          }
  
          }
      
              if (response.jsonPath().get("inbound.cabins["+ i +"].quantityInCabin") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("inbound.cabins["+ i +"].quantityInCabin"), instanceOf(Integer.class));  
          }
      
              if (response.jsonPath().get("inbound.cabins["+ i +"].subCode") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("inbound.cabins["+ i +"].subCode"), instanceOf(String.class));  
          }
      
              if (response.jsonPath().get("inbound.cabins["+ i +"].bookedItemReference") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("inbound.cabins["+ i +"].bookedItemReference"), instanceOf(String.class));  
          }
      
              if (response.jsonPath().get("inbound.cabins["+ i +"].isAttachment") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("inbound.cabins["+ i +"].isAttachment"), instanceOf(Boolean.class));  
          }
      
                  }    
                MatcherAssert.assertThat(response.jsonPath().getList("inbound.cabins"), instanceOf(List.class));
  
          }
      
              if (response.jsonPath().get("inbound.extrasAshore") != null) {      
                for (int i = 0; i < response.jsonPath().getList("inbound.extrasAshore").size(); i++) {      
              if (response.jsonPath().get("inbound.extrasAshore["+ i +"].code") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("inbound.extrasAshore["+ i +"].code"), instanceOf(String.class));  
          }
      
              if (response.jsonPath().get("inbound.extrasAshore["+ i +"].quantity") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("inbound.extrasAshore["+ i +"].quantity"), instanceOf(Integer.class));  
          }
      
              if (response.jsonPath().get("inbound.extrasAshore["+ i +"].price") != null) {      
              if (response.jsonPath().get("inbound.extrasAshore["+ i +"].price.currency") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("inbound.extrasAshore["+ i +"].price.currency"), instanceOf(String.class));  
                MatcherAssert.assertThat(response.jsonPath().getString("inbound.extrasAshore["+ i +"].price.currency"), anyOf(equalTo("NOK"), equalTo("DKK"), equalTo("EUR")));
  
          }
      
              if (response.jsonPath().get("inbound.extrasAshore["+ i +"].price.value") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("inbound.extrasAshore["+ i +"].price.value"), instanceOf(Integer.class));  
          }
      
              if (response.jsonPath().get("inbound.extrasAshore["+ i +"].price.available") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("inbound.extrasAshore["+ i +"].price.available"), instanceOf(Boolean.class));  
          }
  
          }
      
              if (response.jsonPath().get("inbound.extrasAshore["+ i +"].bookedItemReference") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("inbound.extrasAshore["+ i +"].bookedItemReference"), instanceOf(String.class));  
          }
      
              if (response.jsonPath().get("inbound.extrasAshore["+ i +"].isAttachment") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("inbound.extrasAshore["+ i +"].isAttachment"), instanceOf(Boolean.class));  
          }
      
              if (response.jsonPath().get("inbound.extrasAshore["+ i +"].attachmentIsPerPassenger") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("inbound.extrasAshore["+ i +"].attachmentIsPerPassenger"), instanceOf(Boolean.class));  
          }
      
              if (response.jsonPath().get("inbound.extrasAshore["+ i +"].subCode") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("inbound.extrasAshore["+ i +"].subCode"), instanceOf(String.class));  
          }
      
              if (response.jsonPath().get("inbound.extrasAshore["+ i +"].startTime") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("inbound.extrasAshore["+ i +"].startTime"), instanceOf(String.class));  
          }
      
                  }    
                MatcherAssert.assertThat(response.jsonPath().getList("inbound.extrasAshore"), instanceOf(List.class));
  
          }
      
              if (response.jsonPath().get("inbound.extrasAshoreWithOptions") != null) {      
                for (int i = 0; i < response.jsonPath().getList("inbound.extrasAshoreWithOptions").size(); i++) {      
              if (response.jsonPath().get("inbound.extrasAshoreWithOptions["+ i +"].code") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("inbound.extrasAshoreWithOptions["+ i +"].code"), instanceOf(String.class));  
          }
      
              if (response.jsonPath().get("inbound.extrasAshoreWithOptions["+ i +"].quantity") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("inbound.extrasAshoreWithOptions["+ i +"].quantity"), instanceOf(Integer.class));  
          }
      
              if (response.jsonPath().get("inbound.extrasAshoreWithOptions["+ i +"].price") != null) {      
              if (response.jsonPath().get("inbound.extrasAshoreWithOptions["+ i +"].price.currency") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("inbound.extrasAshoreWithOptions["+ i +"].price.currency"), instanceOf(String.class));  
                MatcherAssert.assertThat(response.jsonPath().getString("inbound.extrasAshoreWithOptions["+ i +"].price.currency"), anyOf(equalTo("NOK"), equalTo("DKK"), equalTo("EUR")));
  
          }
      
              if (response.jsonPath().get("inbound.extrasAshoreWithOptions["+ i +"].price.value") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("inbound.extrasAshoreWithOptions["+ i +"].price.value"), instanceOf(Integer.class));  
          }
      
              if (response.jsonPath().get("inbound.extrasAshoreWithOptions["+ i +"].price.available") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("inbound.extrasAshoreWithOptions["+ i +"].price.available"), instanceOf(Boolean.class));  
          }
  
          }
      
              if (response.jsonPath().get("inbound.extrasAshoreWithOptions["+ i +"].bookedItemReference") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("inbound.extrasAshoreWithOptions["+ i +"].bookedItemReference"), instanceOf(String.class));  
          }
      
              if (response.jsonPath().get("inbound.extrasAshoreWithOptions["+ i +"].isAttachment") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("inbound.extrasAshoreWithOptions["+ i +"].isAttachment"), instanceOf(Boolean.class));  
          }
      
              if (response.jsonPath().get("inbound.extrasAshoreWithOptions["+ i +"].attachmentIsPerPassenger") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("inbound.extrasAshoreWithOptions["+ i +"].attachmentIsPerPassenger"), instanceOf(Boolean.class));  
          }
      
              if (response.jsonPath().get("inbound.extrasAshoreWithOptions["+ i +"].subCode") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("inbound.extrasAshoreWithOptions["+ i +"].subCode"), instanceOf(String.class));  
          }
      
              if (response.jsonPath().get("inbound.extrasAshoreWithOptions["+ i +"].startTime") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("inbound.extrasAshoreWithOptions["+ i +"].startTime"), instanceOf(String.class));  
          }
      
                  }    
                MatcherAssert.assertThat(response.jsonPath().getList("inbound.extrasAshoreWithOptions"), instanceOf(List.class));
  
          }
      
              if (response.jsonPath().get("inbound.extrasOnboard") != null) {      
                for (int i = 0; i < response.jsonPath().getList("inbound.extrasOnboard").size(); i++) {      
              if (response.jsonPath().get("inbound.extrasOnboard["+ i +"].code") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("inbound.extrasOnboard["+ i +"].code"), instanceOf(String.class));  
          }
      
              if (response.jsonPath().get("inbound.extrasOnboard["+ i +"].quantity") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("inbound.extrasOnboard["+ i +"].quantity"), instanceOf(Integer.class));  
          }
      
              if (response.jsonPath().get("inbound.extrasOnboard["+ i +"].price") != null) {      
              if (response.jsonPath().get("inbound.extrasOnboard["+ i +"].price.currency") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("inbound.extrasOnboard["+ i +"].price.currency"), instanceOf(String.class));  
                MatcherAssert.assertThat(response.jsonPath().getString("inbound.extrasOnboard["+ i +"].price.currency"), anyOf(equalTo("NOK"), equalTo("DKK"), equalTo("EUR")));
  
          }
      
              if (response.jsonPath().get("inbound.extrasOnboard["+ i +"].price.value") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("inbound.extrasOnboard["+ i +"].price.value"), instanceOf(Integer.class));  
          }
      
              if (response.jsonPath().get("inbound.extrasOnboard["+ i +"].price.available") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("inbound.extrasOnboard["+ i +"].price.available"), instanceOf(Boolean.class));  
          }
  
          }
      
              if (response.jsonPath().get("inbound.extrasOnboard["+ i +"].bookedItemReference") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("inbound.extrasOnboard["+ i +"].bookedItemReference"), instanceOf(String.class));  
          }
      
              if (response.jsonPath().get("inbound.extrasOnboard["+ i +"].isAttachment") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("inbound.extrasOnboard["+ i +"].isAttachment"), instanceOf(Boolean.class));  
          }
      
              if (response.jsonPath().get("inbound.extrasOnboard["+ i +"].attachmentIsPerPassenger") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("inbound.extrasOnboard["+ i +"].attachmentIsPerPassenger"), instanceOf(Boolean.class));  
          }
      
              if (response.jsonPath().get("inbound.extrasOnboard["+ i +"].subCode") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("inbound.extrasOnboard["+ i +"].subCode"), instanceOf(String.class));  
          }
      
              if (response.jsonPath().get("inbound.extrasOnboard["+ i +"].startTime") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("inbound.extrasOnboard["+ i +"].startTime"), instanceOf(String.class));  
          }
      
                  }    
                MatcherAssert.assertThat(response.jsonPath().getList("inbound.extrasOnboard"), instanceOf(List.class));
  
          }
      
              if (response.jsonPath().get("inbound.meals") != null) {      
                for (int i = 0; i < response.jsonPath().getList("inbound.meals").size(); i++) {      
              if (response.jsonPath().get("inbound.meals["+ i +"].code") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("inbound.meals["+ i +"].code"), instanceOf(String.class));  
          }
      
              if (response.jsonPath().get("inbound.meals["+ i +"].quantity") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("inbound.meals["+ i +"].quantity"), instanceOf(Integer.class));  
          }
      
              if (response.jsonPath().get("inbound.meals["+ i +"].price") != null) {      
              if (response.jsonPath().get("inbound.meals["+ i +"].price.currency") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("inbound.meals["+ i +"].price.currency"), instanceOf(String.class));  
                MatcherAssert.assertThat(response.jsonPath().getString("inbound.meals["+ i +"].price.currency"), anyOf(equalTo("NOK"), equalTo("DKK"), equalTo("EUR")));
  
          }
      
              if (response.jsonPath().get("inbound.meals["+ i +"].price.value") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("inbound.meals["+ i +"].price.value"), instanceOf(Integer.class));  
          }
      
              if (response.jsonPath().get("inbound.meals["+ i +"].price.available") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("inbound.meals["+ i +"].price.available"), instanceOf(Boolean.class));  
          }
  
          }
      
              if (response.jsonPath().get("inbound.meals["+ i +"].bookedItemReference") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("inbound.meals["+ i +"].bookedItemReference"), instanceOf(String.class));  
          }
      
              if (response.jsonPath().get("inbound.meals["+ i +"].isAttachment") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("inbound.meals["+ i +"].isAttachment"), instanceOf(Boolean.class));  
          }
      
              if (response.jsonPath().get("inbound.meals["+ i +"].attachmentIsPerPassenger") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("inbound.meals["+ i +"].attachmentIsPerPassenger"), instanceOf(Boolean.class));  
          }
      
              if (response.jsonPath().get("inbound.meals["+ i +"].subCode") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("inbound.meals["+ i +"].subCode"), instanceOf(String.class));  
          }
      
              if (response.jsonPath().get("inbound.meals["+ i +"].startTime") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("inbound.meals["+ i +"].startTime"), instanceOf(String.class));  
          }
      
              if (response.jsonPath().get("inbound.meals["+ i +"].isOutbound") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("inbound.meals["+ i +"].isOutbound"), instanceOf(Boolean.class));  
          }
      
              if (response.jsonPath().get("inbound.meals["+ i +"].legCode") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("inbound.meals["+ i +"].legCode"), instanceOf(String.class));  
          }
      
                  }    
                MatcherAssert.assertThat(response.jsonPath().getList("inbound.meals"), instanceOf(List.class));
  
          }
      
              if (response.jsonPath().get("inbound.vehicles") != null) {      
                for (int i = 0; i < response.jsonPath().getList("inbound.vehicles").size(); i++) {      
              if (response.jsonPath().get("inbound.vehicles["+ i +"].code") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("inbound.vehicles["+ i +"].code"), instanceOf(String.class));  
          }
      
              if (response.jsonPath().get("inbound.vehicles["+ i +"].quantity") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("inbound.vehicles["+ i +"].quantity"), instanceOf(Integer.class));  
          }
      
              if (response.jsonPath().get("inbound.vehicles["+ i +"].price") != null) {      
              if (response.jsonPath().get("inbound.vehicles["+ i +"].price.currency") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("inbound.vehicles["+ i +"].price.currency"), instanceOf(String.class));  
                MatcherAssert.assertThat(response.jsonPath().getString("inbound.vehicles["+ i +"].price.currency"), anyOf(equalTo("NOK"), equalTo("DKK"), equalTo("EUR")));
  
          }
      
              if (response.jsonPath().get("inbound.vehicles["+ i +"].price.value") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("inbound.vehicles["+ i +"].price.value"), instanceOf(Integer.class));  
          }
      
              if (response.jsonPath().get("inbound.vehicles["+ i +"].price.available") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("inbound.vehicles["+ i +"].price.available"), instanceOf(Boolean.class));  
          }
  
          }
      
              if (response.jsonPath().get("inbound.vehicles["+ i +"].bookedItemReference") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("inbound.vehicles["+ i +"].bookedItemReference"), instanceOf(String.class));  
          }
      
              if (response.jsonPath().get("inbound.vehicles["+ i +"].isAttachment") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("inbound.vehicles["+ i +"].isAttachment"), instanceOf(Boolean.class));  
          }
      
              if (response.jsonPath().get("inbound.vehicles["+ i +"].attachmentIsPerPassenger") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("inbound.vehicles["+ i +"].attachmentIsPerPassenger"), instanceOf(Boolean.class));  
          }
      
              if (response.jsonPath().get("inbound.vehicles["+ i +"].regNum") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("inbound.vehicles["+ i +"].regNum"), instanceOf(String.class));  
          }
      
              if (response.jsonPath().get("inbound.vehicles["+ i +"].length") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("inbound.vehicles["+ i +"].length"), instanceOf(Integer.class));  
          }
      
              if (response.jsonPath().get("inbound.vehicles["+ i +"].hasTrailer") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("inbound.vehicles["+ i +"].hasTrailer"), instanceOf(Boolean.class));  
          }
      
              if (response.jsonPath().get("inbound.vehicles["+ i +"].id") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("inbound.vehicles["+ i +"].id"), instanceOf(String.class));  
          }
      
                  }    
                MatcherAssert.assertThat(response.jsonPath().getList("inbound.vehicles"), instanceOf(List.class));
  
          }
      
              if (response.jsonPath().get("inbound.vesselCode") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("inbound.vesselCode"), instanceOf(String.class));  
          }
  
          }
      
              if (response.jsonPath().get("hasVehicle") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("hasVehicle"), instanceOf(Boolean.class));  
          }
      
              if (response.jsonPath().get("hasPet") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("hasPet"), instanceOf(Boolean.class));  
          }
      
              if (response.jsonPath().get("agencyId") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("agencyId"), instanceOf(String.class));  
          }
      
              if (response.jsonPath().get("userId") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("userId"), instanceOf(String.class));  
          }
      
              if (response.jsonPath().get("connectionId") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("connectionId"), instanceOf(String.class));  
          }
      
              if (response.jsonPath().get("status") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("status"), instanceOf(String.class));  
                MatcherAssert.assertThat(response.jsonPath().getString("status"), anyOf(equalTo("ACTIVE"), equalTo("BOOKED"), equalTo("DELETED"), equalTo("EXPIRED"), equalTo("BOOKING_IN_PROGRESS")));
  
          }
      
              if (response.jsonPath().get("bookingResult") != null) {      
              if (response.jsonPath().get("bookingResult.created") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("bookingResult.created"), instanceOf(String.class));  
          }
      
              if (response.jsonPath().get("bookingResult.bookingCode") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("bookingResult.bookingCode"), instanceOf(String.class));  
          }
      
              if (response.jsonPath().get("bookingResult.bookingState") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("bookingResult.bookingState"), instanceOf(String.class));  
          }
      
              if (response.jsonPath().get("bookingResult.bookingBalance") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("bookingResult.bookingBalance"), instanceOf(String.class));  
          }
      
              if (response.jsonPath().get("bookingResult.bookingTotal") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("bookingResult.bookingTotal"), instanceOf(String.class));  
          }
      
              if (response.jsonPath().get("bookingResult.paidState") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("bookingResult.paidState"), instanceOf(String.class));  
          }
      
              if (response.jsonPath().get("bookingResult.currency") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("bookingResult.currency"), instanceOf(String.class));  
          }
      
              if (response.jsonPath().get("bookingResult.paymentUrl") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("bookingResult.paymentUrl"), instanceOf(String.class));  
          }
      
              if (response.jsonPath().get("bookingResult.paymentSessionId") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("bookingResult.paymentSessionId"), instanceOf(String.class));  
          }
      
              if (response.jsonPath().get("bookingResult.bookedItems") != null) {      
              if (response.jsonPath().get("bookingResult.bookedItems.groupPrices") != null) {      
                for (int i = 0; i < response.jsonPath().getList("bookingResult.bookedItems.groupPrices").size(); i++) {      
              if (response.jsonPath().get("bookingResult.bookedItems.groupPrices["+ i +"].name") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("bookingResult.bookedItems.groupPrices["+ i +"].name"), instanceOf(String.class));  
          }
      
              if (response.jsonPath().get("bookingResult.bookedItems.groupPrices["+ i +"].price") != null) {      
              if (response.jsonPath().get("bookingResult.bookedItems.groupPrices["+ i +"].price.currency") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("bookingResult.bookedItems.groupPrices["+ i +"].price.currency"), instanceOf(String.class));  
                MatcherAssert.assertThat(response.jsonPath().getString("bookingResult.bookedItems.groupPrices["+ i +"].price.currency"), anyOf(equalTo("NOK"), equalTo("DKK"), equalTo("EUR")));
  
          }
      
              if (response.jsonPath().get("bookingResult.bookedItems.groupPrices["+ i +"].price.value") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("bookingResult.bookedItems.groupPrices["+ i +"].price.value"), instanceOf(Integer.class));  
          }
      
              if (response.jsonPath().get("bookingResult.bookedItems.groupPrices["+ i +"].price.available") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("bookingResult.bookedItems.groupPrices["+ i +"].price.available"), instanceOf(Boolean.class));  
          }
  
          }
      
                  }    
                MatcherAssert.assertThat(response.jsonPath().getList("bookingResult.bookedItems.groupPrices"), instanceOf(List.class));
  
          }
      
              if (response.jsonPath().get("bookingResult.bookedItems.outboundPassengerPrices") != null) {      
                for (int i = 0; i < response.jsonPath().getList("bookingResult.bookedItems.outboundPassengerPrices").size(); i++) {      
              if (response.jsonPath().get("bookingResult.bookedItems.outboundPassengerPrices["+ i +"].code") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("bookingResult.bookedItems.outboundPassengerPrices["+ i +"].code"), instanceOf(String.class));  
                MatcherAssert.assertThat(response.jsonPath().getString("bookingResult.bookedItems.outboundPassengerPrices["+ i +"].code"), anyOf(equalTo("ADULT"), equalTo("CHILD"), equalTo("INFANT"), equalTo("BABY")));
  
          }
      
              if (response.jsonPath().get("bookingResult.bookedItems.outboundPassengerPrices["+ i +"].price") != null) {      
              if (response.jsonPath().get("bookingResult.bookedItems.outboundPassengerPrices["+ i +"].price.currency") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("bookingResult.bookedItems.outboundPassengerPrices["+ i +"].price.currency"), instanceOf(String.class));  
                MatcherAssert.assertThat(response.jsonPath().getString("bookingResult.bookedItems.outboundPassengerPrices["+ i +"].price.currency"), anyOf(equalTo("NOK"), equalTo("DKK"), equalTo("EUR")));
  
          }
      
              if (response.jsonPath().get("bookingResult.bookedItems.outboundPassengerPrices["+ i +"].price.value") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("bookingResult.bookedItems.outboundPassengerPrices["+ i +"].price.value"), instanceOf(Integer.class));  
          }
      
              if (response.jsonPath().get("bookingResult.bookedItems.outboundPassengerPrices["+ i +"].price.available") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("bookingResult.bookedItems.outboundPassengerPrices["+ i +"].price.available"), instanceOf(Boolean.class));  
          }
  
          }
      
                  }    
                MatcherAssert.assertThat(response.jsonPath().getList("bookingResult.bookedItems.outboundPassengerPrices"), instanceOf(List.class));
  
          }
      
              if (response.jsonPath().get("bookingResult.bookedItems.inboundPassengerPrices") != null) {      
                for (int i = 0; i < response.jsonPath().getList("bookingResult.bookedItems.inboundPassengerPrices").size(); i++) {      
              if (response.jsonPath().get("bookingResult.bookedItems.inboundPassengerPrices["+ i +"].code") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("bookingResult.bookedItems.inboundPassengerPrices["+ i +"].code"), instanceOf(String.class));  
                MatcherAssert.assertThat(response.jsonPath().getString("bookingResult.bookedItems.inboundPassengerPrices["+ i +"].code"), anyOf(equalTo("ADULT"), equalTo("CHILD"), equalTo("INFANT"), equalTo("BABY")));
  
          }
      
              if (response.jsonPath().get("bookingResult.bookedItems.inboundPassengerPrices["+ i +"].price") != null) {      
              if (response.jsonPath().get("bookingResult.bookedItems.inboundPassengerPrices["+ i +"].price.currency") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("bookingResult.bookedItems.inboundPassengerPrices["+ i +"].price.currency"), instanceOf(String.class));  
                MatcherAssert.assertThat(response.jsonPath().getString("bookingResult.bookedItems.inboundPassengerPrices["+ i +"].price.currency"), anyOf(equalTo("NOK"), equalTo("DKK"), equalTo("EUR")));
  
          }
      
              if (response.jsonPath().get("bookingResult.bookedItems.inboundPassengerPrices["+ i +"].price.value") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("bookingResult.bookedItems.inboundPassengerPrices["+ i +"].price.value"), instanceOf(Integer.class));  
          }
      
              if (response.jsonPath().get("bookingResult.bookedItems.inboundPassengerPrices["+ i +"].price.available") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("bookingResult.bookedItems.inboundPassengerPrices["+ i +"].price.available"), instanceOf(Boolean.class));  
          }
  
          }
      
                  }    
                MatcherAssert.assertThat(response.jsonPath().getList("bookingResult.bookedItems.inboundPassengerPrices"), instanceOf(List.class));
  
          }
      
              if (response.jsonPath().get("bookingResult.bookedItems.outboundVehicles") != null) {      
                for (int i = 0; i < response.jsonPath().getList("bookingResult.bookedItems.outboundVehicles").size(); i++) {      
              if (response.jsonPath().get("bookingResult.bookedItems.outboundVehicles["+ i +"].code") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("bookingResult.bookedItems.outboundVehicles["+ i +"].code"), instanceOf(String.class));  
          }
      
              if (response.jsonPath().get("bookingResult.bookedItems.outboundVehicles["+ i +"].quantity") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("bookingResult.bookedItems.outboundVehicles["+ i +"].quantity"), instanceOf(Integer.class));  
          }
      
              if (response.jsonPath().get("bookingResult.bookedItems.outboundVehicles["+ i +"].price") != null) {      
              if (response.jsonPath().get("bookingResult.bookedItems.outboundVehicles["+ i +"].price.currency") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("bookingResult.bookedItems.outboundVehicles["+ i +"].price.currency"), instanceOf(String.class));  
                MatcherAssert.assertThat(response.jsonPath().getString("bookingResult.bookedItems.outboundVehicles["+ i +"].price.currency"), anyOf(equalTo("NOK"), equalTo("DKK"), equalTo("EUR")));
  
          }
      
              if (response.jsonPath().get("bookingResult.bookedItems.outboundVehicles["+ i +"].price.value") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("bookingResult.bookedItems.outboundVehicles["+ i +"].price.value"), instanceOf(Integer.class));  
          }
      
              if (response.jsonPath().get("bookingResult.bookedItems.outboundVehicles["+ i +"].price.available") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("bookingResult.bookedItems.outboundVehicles["+ i +"].price.available"), instanceOf(Boolean.class));  
          }
  
          }
      
              if (response.jsonPath().get("bookingResult.bookedItems.outboundVehicles["+ i +"].bookedItemReference") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("bookingResult.bookedItems.outboundVehicles["+ i +"].bookedItemReference"), instanceOf(String.class));  
          }
      
              if (response.jsonPath().get("bookingResult.bookedItems.outboundVehicles["+ i +"].isAttachment") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("bookingResult.bookedItems.outboundVehicles["+ i +"].isAttachment"), instanceOf(Boolean.class));  
          }
      
              if (response.jsonPath().get("bookingResult.bookedItems.outboundVehicles["+ i +"].attachmentIsPerPassenger") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("bookingResult.bookedItems.outboundVehicles["+ i +"].attachmentIsPerPassenger"), instanceOf(Boolean.class));  
          }
      
              if (response.jsonPath().get("bookingResult.bookedItems.outboundVehicles["+ i +"].regNum") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("bookingResult.bookedItems.outboundVehicles["+ i +"].regNum"), instanceOf(String.class));  
          }
      
              if (response.jsonPath().get("bookingResult.bookedItems.outboundVehicles["+ i +"].length") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("bookingResult.bookedItems.outboundVehicles["+ i +"].length"), instanceOf(Integer.class));  
          }
      
              if (response.jsonPath().get("bookingResult.bookedItems.outboundVehicles["+ i +"].hasTrailer") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("bookingResult.bookedItems.outboundVehicles["+ i +"].hasTrailer"), instanceOf(Boolean.class));  
          }
      
              if (response.jsonPath().get("bookingResult.bookedItems.outboundVehicles["+ i +"].id") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("bookingResult.bookedItems.outboundVehicles["+ i +"].id"), instanceOf(String.class));  
          }
      
                  }    
                MatcherAssert.assertThat(response.jsonPath().getList("bookingResult.bookedItems.outboundVehicles"), instanceOf(List.class));
  
          }
      
              if (response.jsonPath().get("bookingResult.bookedItems.inboundVehicles") != null) {      
                for (int i = 0; i < response.jsonPath().getList("bookingResult.bookedItems.inboundVehicles").size(); i++) {      
              if (response.jsonPath().get("bookingResult.bookedItems.inboundVehicles["+ i +"].code") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("bookingResult.bookedItems.inboundVehicles["+ i +"].code"), instanceOf(String.class));  
          }
      
              if (response.jsonPath().get("bookingResult.bookedItems.inboundVehicles["+ i +"].quantity") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("bookingResult.bookedItems.inboundVehicles["+ i +"].quantity"), instanceOf(Integer.class));  
          }
      
              if (response.jsonPath().get("bookingResult.bookedItems.inboundVehicles["+ i +"].price") != null) {      
              if (response.jsonPath().get("bookingResult.bookedItems.inboundVehicles["+ i +"].price.currency") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("bookingResult.bookedItems.inboundVehicles["+ i +"].price.currency"), instanceOf(String.class));  
                MatcherAssert.assertThat(response.jsonPath().getString("bookingResult.bookedItems.inboundVehicles["+ i +"].price.currency"), anyOf(equalTo("NOK"), equalTo("DKK"), equalTo("EUR")));
  
          }
      
              if (response.jsonPath().get("bookingResult.bookedItems.inboundVehicles["+ i +"].price.value") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("bookingResult.bookedItems.inboundVehicles["+ i +"].price.value"), instanceOf(Integer.class));  
          }
      
              if (response.jsonPath().get("bookingResult.bookedItems.inboundVehicles["+ i +"].price.available") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("bookingResult.bookedItems.inboundVehicles["+ i +"].price.available"), instanceOf(Boolean.class));  
          }
  
          }
      
              if (response.jsonPath().get("bookingResult.bookedItems.inboundVehicles["+ i +"].bookedItemReference") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("bookingResult.bookedItems.inboundVehicles["+ i +"].bookedItemReference"), instanceOf(String.class));  
          }
      
              if (response.jsonPath().get("bookingResult.bookedItems.inboundVehicles["+ i +"].isAttachment") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("bookingResult.bookedItems.inboundVehicles["+ i +"].isAttachment"), instanceOf(Boolean.class));  
          }
      
              if (response.jsonPath().get("bookingResult.bookedItems.inboundVehicles["+ i +"].attachmentIsPerPassenger") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("bookingResult.bookedItems.inboundVehicles["+ i +"].attachmentIsPerPassenger"), instanceOf(Boolean.class));  
          }
      
              if (response.jsonPath().get("bookingResult.bookedItems.inboundVehicles["+ i +"].regNum") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("bookingResult.bookedItems.inboundVehicles["+ i +"].regNum"), instanceOf(String.class));  
          }
      
              if (response.jsonPath().get("bookingResult.bookedItems.inboundVehicles["+ i +"].length") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("bookingResult.bookedItems.inboundVehicles["+ i +"].length"), instanceOf(Integer.class));  
          }
      
              if (response.jsonPath().get("bookingResult.bookedItems.inboundVehicles["+ i +"].hasTrailer") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("bookingResult.bookedItems.inboundVehicles["+ i +"].hasTrailer"), instanceOf(Boolean.class));  
          }
      
              if (response.jsonPath().get("bookingResult.bookedItems.inboundVehicles["+ i +"].id") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("bookingResult.bookedItems.inboundVehicles["+ i +"].id"), instanceOf(String.class));  
          }
      
                  }    
                MatcherAssert.assertThat(response.jsonPath().getList("bookingResult.bookedItems.inboundVehicles"), instanceOf(List.class));
  
          }
      
              if (response.jsonPath().get("bookingResult.bookedItems.outboundMeals") != null) {      
                for (int i = 0; i < response.jsonPath().getList("bookingResult.bookedItems.outboundMeals").size(); i++) {      
              if (response.jsonPath().get("bookingResult.bookedItems.outboundMeals["+ i +"].code") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("bookingResult.bookedItems.outboundMeals["+ i +"].code"), instanceOf(String.class));  
          }
      
              if (response.jsonPath().get("bookingResult.bookedItems.outboundMeals["+ i +"].quantity") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("bookingResult.bookedItems.outboundMeals["+ i +"].quantity"), instanceOf(Integer.class));  
          }
      
              if (response.jsonPath().get("bookingResult.bookedItems.outboundMeals["+ i +"].price") != null) {      
              if (response.jsonPath().get("bookingResult.bookedItems.outboundMeals["+ i +"].price.currency") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("bookingResult.bookedItems.outboundMeals["+ i +"].price.currency"), instanceOf(String.class));  
                MatcherAssert.assertThat(response.jsonPath().getString("bookingResult.bookedItems.outboundMeals["+ i +"].price.currency"), anyOf(equalTo("NOK"), equalTo("DKK"), equalTo("EUR")));
  
          }
      
              if (response.jsonPath().get("bookingResult.bookedItems.outboundMeals["+ i +"].price.value") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("bookingResult.bookedItems.outboundMeals["+ i +"].price.value"), instanceOf(Integer.class));  
          }
      
              if (response.jsonPath().get("bookingResult.bookedItems.outboundMeals["+ i +"].price.available") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("bookingResult.bookedItems.outboundMeals["+ i +"].price.available"), instanceOf(Boolean.class));  
          }
  
          }
      
              if (response.jsonPath().get("bookingResult.bookedItems.outboundMeals["+ i +"].bookedItemReference") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("bookingResult.bookedItems.outboundMeals["+ i +"].bookedItemReference"), instanceOf(String.class));  
          }
      
              if (response.jsonPath().get("bookingResult.bookedItems.outboundMeals["+ i +"].isAttachment") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("bookingResult.bookedItems.outboundMeals["+ i +"].isAttachment"), instanceOf(Boolean.class));  
          }
      
              if (response.jsonPath().get("bookingResult.bookedItems.outboundMeals["+ i +"].attachmentIsPerPassenger") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("bookingResult.bookedItems.outboundMeals["+ i +"].attachmentIsPerPassenger"), instanceOf(Boolean.class));  
          }
      
              if (response.jsonPath().get("bookingResult.bookedItems.outboundMeals["+ i +"].subCode") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("bookingResult.bookedItems.outboundMeals["+ i +"].subCode"), instanceOf(String.class));  
          }
      
              if (response.jsonPath().get("bookingResult.bookedItems.outboundMeals["+ i +"].startTime") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("bookingResult.bookedItems.outboundMeals["+ i +"].startTime"), instanceOf(String.class));  
          }
      
              if (response.jsonPath().get("bookingResult.bookedItems.outboundMeals["+ i +"].isOutbound") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("bookingResult.bookedItems.outboundMeals["+ i +"].isOutbound"), instanceOf(Boolean.class));  
          }
      
              if (response.jsonPath().get("bookingResult.bookedItems.outboundMeals["+ i +"].legCode") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("bookingResult.bookedItems.outboundMeals["+ i +"].legCode"), instanceOf(String.class));  
          }
      
                  }    
                MatcherAssert.assertThat(response.jsonPath().getList("bookingResult.bookedItems.outboundMeals"), instanceOf(List.class));
  
          }
      
              if (response.jsonPath().get("bookingResult.bookedItems.inboundMeals") != null) {      
                for (int i = 0; i < response.jsonPath().getList("bookingResult.bookedItems.inboundMeals").size(); i++) {      
              if (response.jsonPath().get("bookingResult.bookedItems.inboundMeals["+ i +"].code") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("bookingResult.bookedItems.inboundMeals["+ i +"].code"), instanceOf(String.class));  
          }
      
              if (response.jsonPath().get("bookingResult.bookedItems.inboundMeals["+ i +"].quantity") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("bookingResult.bookedItems.inboundMeals["+ i +"].quantity"), instanceOf(Integer.class));  
          }
      
              if (response.jsonPath().get("bookingResult.bookedItems.inboundMeals["+ i +"].price") != null) {      
              if (response.jsonPath().get("bookingResult.bookedItems.inboundMeals["+ i +"].price.currency") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("bookingResult.bookedItems.inboundMeals["+ i +"].price.currency"), instanceOf(String.class));  
                MatcherAssert.assertThat(response.jsonPath().getString("bookingResult.bookedItems.inboundMeals["+ i +"].price.currency"), anyOf(equalTo("NOK"), equalTo("DKK"), equalTo("EUR")));
  
          }
      
              if (response.jsonPath().get("bookingResult.bookedItems.inboundMeals["+ i +"].price.value") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("bookingResult.bookedItems.inboundMeals["+ i +"].price.value"), instanceOf(Integer.class));  
          }
      
              if (response.jsonPath().get("bookingResult.bookedItems.inboundMeals["+ i +"].price.available") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("bookingResult.bookedItems.inboundMeals["+ i +"].price.available"), instanceOf(Boolean.class));  
          }
  
          }
      
              if (response.jsonPath().get("bookingResult.bookedItems.inboundMeals["+ i +"].bookedItemReference") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("bookingResult.bookedItems.inboundMeals["+ i +"].bookedItemReference"), instanceOf(String.class));  
          }
      
              if (response.jsonPath().get("bookingResult.bookedItems.inboundMeals["+ i +"].isAttachment") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("bookingResult.bookedItems.inboundMeals["+ i +"].isAttachment"), instanceOf(Boolean.class));  
          }
      
              if (response.jsonPath().get("bookingResult.bookedItems.inboundMeals["+ i +"].attachmentIsPerPassenger") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("bookingResult.bookedItems.inboundMeals["+ i +"].attachmentIsPerPassenger"), instanceOf(Boolean.class));  
          }
      
              if (response.jsonPath().get("bookingResult.bookedItems.inboundMeals["+ i +"].subCode") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("bookingResult.bookedItems.inboundMeals["+ i +"].subCode"), instanceOf(String.class));  
          }
      
              if (response.jsonPath().get("bookingResult.bookedItems.inboundMeals["+ i +"].startTime") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("bookingResult.bookedItems.inboundMeals["+ i +"].startTime"), instanceOf(String.class));  
          }
      
              if (response.jsonPath().get("bookingResult.bookedItems.inboundMeals["+ i +"].isOutbound") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("bookingResult.bookedItems.inboundMeals["+ i +"].isOutbound"), instanceOf(Boolean.class));  
          }
      
              if (response.jsonPath().get("bookingResult.bookedItems.inboundMeals["+ i +"].legCode") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("bookingResult.bookedItems.inboundMeals["+ i +"].legCode"), instanceOf(String.class));  
          }
      
                  }    
                MatcherAssert.assertThat(response.jsonPath().getList("bookingResult.bookedItems.inboundMeals"), instanceOf(List.class));
  
          }
      
              if (response.jsonPath().get("bookingResult.bookedItems.outboundCabins") != null) {      
                for (int i = 0; i < response.jsonPath().getList("bookingResult.bookedItems.outboundCabins").size(); i++) {      
              if (response.jsonPath().get("bookingResult.bookedItems.outboundCabins["+ i +"].code") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("bookingResult.bookedItems.outboundCabins["+ i +"].code"), instanceOf(String.class));  
          }
      
              if (response.jsonPath().get("bookingResult.bookedItems.outboundCabins["+ i +"].edit") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("bookingResult.bookedItems.outboundCabins["+ i +"].edit"), instanceOf(String.class));  
          }
      
              if (response.jsonPath().get("bookingResult.bookedItems.outboundCabins["+ i +"].id") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("bookingResult.bookedItems.outboundCabins["+ i +"].id"), instanceOf(String.class));  
          }
      
              if (response.jsonPath().get("bookingResult.bookedItems.outboundCabins["+ i +"].price") != null) {      
              if (response.jsonPath().get("bookingResult.bookedItems.outboundCabins["+ i +"].price.currency") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("bookingResult.bookedItems.outboundCabins["+ i +"].price.currency"), instanceOf(String.class));  
                MatcherAssert.assertThat(response.jsonPath().getString("bookingResult.bookedItems.outboundCabins["+ i +"].price.currency"), anyOf(equalTo("NOK"), equalTo("DKK"), equalTo("EUR")));
  
          }
      
              if (response.jsonPath().get("bookingResult.bookedItems.outboundCabins["+ i +"].price.value") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("bookingResult.bookedItems.outboundCabins["+ i +"].price.value"), instanceOf(Integer.class));  
          }
      
              if (response.jsonPath().get("bookingResult.bookedItems.outboundCabins["+ i +"].price.available") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("bookingResult.bookedItems.outboundCabins["+ i +"].price.available"), instanceOf(Boolean.class));  
          }
  
          }
      
              if (response.jsonPath().get("bookingResult.bookedItems.outboundCabins["+ i +"].quantityInCabin") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("bookingResult.bookedItems.outboundCabins["+ i +"].quantityInCabin"), instanceOf(Integer.class));  
          }
      
              if (response.jsonPath().get("bookingResult.bookedItems.outboundCabins["+ i +"].subCode") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("bookingResult.bookedItems.outboundCabins["+ i +"].subCode"), instanceOf(String.class));  
          }
      
              if (response.jsonPath().get("bookingResult.bookedItems.outboundCabins["+ i +"].bookedItemReference") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("bookingResult.bookedItems.outboundCabins["+ i +"].bookedItemReference"), instanceOf(String.class));  
          }
      
              if (response.jsonPath().get("bookingResult.bookedItems.outboundCabins["+ i +"].isAttachment") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("bookingResult.bookedItems.outboundCabins["+ i +"].isAttachment"), instanceOf(Boolean.class));  
          }
      
                  }    
                MatcherAssert.assertThat(response.jsonPath().getList("bookingResult.bookedItems.outboundCabins"), instanceOf(List.class));
  
          }
      
              if (response.jsonPath().get("bookingResult.bookedItems.inboundCabins") != null) {      
                for (int i = 0; i < response.jsonPath().getList("bookingResult.bookedItems.inboundCabins").size(); i++) {      
              if (response.jsonPath().get("bookingResult.bookedItems.inboundCabins["+ i +"].code") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("bookingResult.bookedItems.inboundCabins["+ i +"].code"), instanceOf(String.class));  
          }
      
              if (response.jsonPath().get("bookingResult.bookedItems.inboundCabins["+ i +"].edit") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("bookingResult.bookedItems.inboundCabins["+ i +"].edit"), instanceOf(String.class));  
          }
      
              if (response.jsonPath().get("bookingResult.bookedItems.inboundCabins["+ i +"].id") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("bookingResult.bookedItems.inboundCabins["+ i +"].id"), instanceOf(String.class));  
          }
      
              if (response.jsonPath().get("bookingResult.bookedItems.inboundCabins["+ i +"].price") != null) {      
              if (response.jsonPath().get("bookingResult.bookedItems.inboundCabins["+ i +"].price.currency") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("bookingResult.bookedItems.inboundCabins["+ i +"].price.currency"), instanceOf(String.class));  
                MatcherAssert.assertThat(response.jsonPath().getString("bookingResult.bookedItems.inboundCabins["+ i +"].price.currency"), anyOf(equalTo("NOK"), equalTo("DKK"), equalTo("EUR")));
  
          }
      
              if (response.jsonPath().get("bookingResult.bookedItems.inboundCabins["+ i +"].price.value") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("bookingResult.bookedItems.inboundCabins["+ i +"].price.value"), instanceOf(Integer.class));  
          }
      
              if (response.jsonPath().get("bookingResult.bookedItems.inboundCabins["+ i +"].price.available") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("bookingResult.bookedItems.inboundCabins["+ i +"].price.available"), instanceOf(Boolean.class));  
          }
  
          }
      
              if (response.jsonPath().get("bookingResult.bookedItems.inboundCabins["+ i +"].quantityInCabin") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("bookingResult.bookedItems.inboundCabins["+ i +"].quantityInCabin"), instanceOf(Integer.class));  
          }
      
              if (response.jsonPath().get("bookingResult.bookedItems.inboundCabins["+ i +"].subCode") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("bookingResult.bookedItems.inboundCabins["+ i +"].subCode"), instanceOf(String.class));  
          }
      
              if (response.jsonPath().get("bookingResult.bookedItems.inboundCabins["+ i +"].bookedItemReference") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("bookingResult.bookedItems.inboundCabins["+ i +"].bookedItemReference"), instanceOf(String.class));  
          }
      
              if (response.jsonPath().get("bookingResult.bookedItems.inboundCabins["+ i +"].isAttachment") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("bookingResult.bookedItems.inboundCabins["+ i +"].isAttachment"), instanceOf(Boolean.class));  
          }
      
                  }    
                MatcherAssert.assertThat(response.jsonPath().getList("bookingResult.bookedItems.inboundCabins"), instanceOf(List.class));
  
          }
      
              if (response.jsonPath().get("bookingResult.bookedItems.outboundExtras") != null) {      
                for (int i = 0; i < response.jsonPath().getList("bookingResult.bookedItems.outboundExtras").size(); i++) {      
              if (response.jsonPath().get("bookingResult.bookedItems.outboundExtras["+ i +"].code") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("bookingResult.bookedItems.outboundExtras["+ i +"].code"), instanceOf(String.class));  
          }
      
              if (response.jsonPath().get("bookingResult.bookedItems.outboundExtras["+ i +"].quantity") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("bookingResult.bookedItems.outboundExtras["+ i +"].quantity"), instanceOf(Integer.class));  
          }
      
              if (response.jsonPath().get("bookingResult.bookedItems.outboundExtras["+ i +"].price") != null) {      
              if (response.jsonPath().get("bookingResult.bookedItems.outboundExtras["+ i +"].price.currency") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("bookingResult.bookedItems.outboundExtras["+ i +"].price.currency"), instanceOf(String.class));  
                MatcherAssert.assertThat(response.jsonPath().getString("bookingResult.bookedItems.outboundExtras["+ i +"].price.currency"), anyOf(equalTo("NOK"), equalTo("DKK"), equalTo("EUR")));
  
          }
      
              if (response.jsonPath().get("bookingResult.bookedItems.outboundExtras["+ i +"].price.value") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("bookingResult.bookedItems.outboundExtras["+ i +"].price.value"), instanceOf(Integer.class));  
          }
      
              if (response.jsonPath().get("bookingResult.bookedItems.outboundExtras["+ i +"].price.available") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("bookingResult.bookedItems.outboundExtras["+ i +"].price.available"), instanceOf(Boolean.class));  
          }
  
          }
      
              if (response.jsonPath().get("bookingResult.bookedItems.outboundExtras["+ i +"].bookedItemReference") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("bookingResult.bookedItems.outboundExtras["+ i +"].bookedItemReference"), instanceOf(String.class));  
          }
      
              if (response.jsonPath().get("bookingResult.bookedItems.outboundExtras["+ i +"].isAttachment") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("bookingResult.bookedItems.outboundExtras["+ i +"].isAttachment"), instanceOf(Boolean.class));  
          }
      
              if (response.jsonPath().get("bookingResult.bookedItems.outboundExtras["+ i +"].attachmentIsPerPassenger") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("bookingResult.bookedItems.outboundExtras["+ i +"].attachmentIsPerPassenger"), instanceOf(Boolean.class));  
          }
      
              if (response.jsonPath().get("bookingResult.bookedItems.outboundExtras["+ i +"].subCode") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("bookingResult.bookedItems.outboundExtras["+ i +"].subCode"), instanceOf(String.class));  
          }
      
              if (response.jsonPath().get("bookingResult.bookedItems.outboundExtras["+ i +"].startTime") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("bookingResult.bookedItems.outboundExtras["+ i +"].startTime"), instanceOf(String.class));  
          }
      
                  }    
                MatcherAssert.assertThat(response.jsonPath().getList("bookingResult.bookedItems.outboundExtras"), instanceOf(List.class));
  
          }
      
              if (response.jsonPath().get("bookingResult.bookedItems.inboundExtras") != null) {      
                for (int i = 0; i < response.jsonPath().getList("bookingResult.bookedItems.inboundExtras").size(); i++) {      
              if (response.jsonPath().get("bookingResult.bookedItems.inboundExtras["+ i +"].code") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("bookingResult.bookedItems.inboundExtras["+ i +"].code"), instanceOf(String.class));  
          }
      
              if (response.jsonPath().get("bookingResult.bookedItems.inboundExtras["+ i +"].quantity") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("bookingResult.bookedItems.inboundExtras["+ i +"].quantity"), instanceOf(Integer.class));  
          }
      
              if (response.jsonPath().get("bookingResult.bookedItems.inboundExtras["+ i +"].price") != null) {      
              if (response.jsonPath().get("bookingResult.bookedItems.inboundExtras["+ i +"].price.currency") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("bookingResult.bookedItems.inboundExtras["+ i +"].price.currency"), instanceOf(String.class));  
                MatcherAssert.assertThat(response.jsonPath().getString("bookingResult.bookedItems.inboundExtras["+ i +"].price.currency"), anyOf(equalTo("NOK"), equalTo("DKK"), equalTo("EUR")));
  
          }
      
              if (response.jsonPath().get("bookingResult.bookedItems.inboundExtras["+ i +"].price.value") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("bookingResult.bookedItems.inboundExtras["+ i +"].price.value"), instanceOf(Integer.class));  
          }
      
              if (response.jsonPath().get("bookingResult.bookedItems.inboundExtras["+ i +"].price.available") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("bookingResult.bookedItems.inboundExtras["+ i +"].price.available"), instanceOf(Boolean.class));  
          }
  
          }
      
              if (response.jsonPath().get("bookingResult.bookedItems.inboundExtras["+ i +"].bookedItemReference") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("bookingResult.bookedItems.inboundExtras["+ i +"].bookedItemReference"), instanceOf(String.class));  
          }
      
              if (response.jsonPath().get("bookingResult.bookedItems.inboundExtras["+ i +"].isAttachment") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("bookingResult.bookedItems.inboundExtras["+ i +"].isAttachment"), instanceOf(Boolean.class));  
          }
      
              if (response.jsonPath().get("bookingResult.bookedItems.inboundExtras["+ i +"].attachmentIsPerPassenger") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("bookingResult.bookedItems.inboundExtras["+ i +"].attachmentIsPerPassenger"), instanceOf(Boolean.class));  
          }
      
              if (response.jsonPath().get("bookingResult.bookedItems.inboundExtras["+ i +"].subCode") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("bookingResult.bookedItems.inboundExtras["+ i +"].subCode"), instanceOf(String.class));  
          }
      
              if (response.jsonPath().get("bookingResult.bookedItems.inboundExtras["+ i +"].startTime") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("bookingResult.bookedItems.inboundExtras["+ i +"].startTime"), instanceOf(String.class));  
          }
      
                  }    
                MatcherAssert.assertThat(response.jsonPath().getList("bookingResult.bookedItems.inboundExtras"), instanceOf(List.class));
  
          }
      
              if (response.jsonPath().get("bookingResult.bookedItems.outboundDiscounts") != null) {      
                for (int i = 0; i < response.jsonPath().getList("bookingResult.bookedItems.outboundDiscounts").size(); i++) {      
              if (response.jsonPath().get("bookingResult.bookedItems.outboundDiscounts["+ i +"].code") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("bookingResult.bookedItems.outboundDiscounts["+ i +"].code"), instanceOf(String.class));  
          }
      
              if (response.jsonPath().get("bookingResult.bookedItems.outboundDiscounts["+ i +"].quantity") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("bookingResult.bookedItems.outboundDiscounts["+ i +"].quantity"), instanceOf(Integer.class));  
          }
      
              if (response.jsonPath().get("bookingResult.bookedItems.outboundDiscounts["+ i +"].price") != null) {      
              if (response.jsonPath().get("bookingResult.bookedItems.outboundDiscounts["+ i +"].price.currency") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("bookingResult.bookedItems.outboundDiscounts["+ i +"].price.currency"), instanceOf(String.class));  
                MatcherAssert.assertThat(response.jsonPath().getString("bookingResult.bookedItems.outboundDiscounts["+ i +"].price.currency"), anyOf(equalTo("NOK"), equalTo("DKK"), equalTo("EUR")));
  
          }
      
              if (response.jsonPath().get("bookingResult.bookedItems.outboundDiscounts["+ i +"].price.value") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("bookingResult.bookedItems.outboundDiscounts["+ i +"].price.value"), instanceOf(Integer.class));  
          }
      
              if (response.jsonPath().get("bookingResult.bookedItems.outboundDiscounts["+ i +"].price.available") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("bookingResult.bookedItems.outboundDiscounts["+ i +"].price.available"), instanceOf(Boolean.class));  
          }
  
          }
      
              if (response.jsonPath().get("bookingResult.bookedItems.outboundDiscounts["+ i +"].bookedItemReference") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("bookingResult.bookedItems.outboundDiscounts["+ i +"].bookedItemReference"), instanceOf(String.class));  
          }
      
              if (response.jsonPath().get("bookingResult.bookedItems.outboundDiscounts["+ i +"].isAttachment") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("bookingResult.bookedItems.outboundDiscounts["+ i +"].isAttachment"), instanceOf(Boolean.class));  
          }
      
              if (response.jsonPath().get("bookingResult.bookedItems.outboundDiscounts["+ i +"].attachmentIsPerPassenger") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("bookingResult.bookedItems.outboundDiscounts["+ i +"].attachmentIsPerPassenger"), instanceOf(Boolean.class));  
          }
      
                  }    
                MatcherAssert.assertThat(response.jsonPath().getList("bookingResult.bookedItems.outboundDiscounts"), instanceOf(List.class));
  
          }
      
              if (response.jsonPath().get("bookingResult.bookedItems.inboundDiscounts") != null) {      
                for (int i = 0; i < response.jsonPath().getList("bookingResult.bookedItems.inboundDiscounts").size(); i++) {      
              if (response.jsonPath().get("bookingResult.bookedItems.inboundDiscounts["+ i +"].code") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("bookingResult.bookedItems.inboundDiscounts["+ i +"].code"), instanceOf(String.class));  
          }
      
              if (response.jsonPath().get("bookingResult.bookedItems.inboundDiscounts["+ i +"].quantity") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("bookingResult.bookedItems.inboundDiscounts["+ i +"].quantity"), instanceOf(Integer.class));  
          }
      
              if (response.jsonPath().get("bookingResult.bookedItems.inboundDiscounts["+ i +"].price") != null) {      
              if (response.jsonPath().get("bookingResult.bookedItems.inboundDiscounts["+ i +"].price.currency") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("bookingResult.bookedItems.inboundDiscounts["+ i +"].price.currency"), instanceOf(String.class));  
                MatcherAssert.assertThat(response.jsonPath().getString("bookingResult.bookedItems.inboundDiscounts["+ i +"].price.currency"), anyOf(equalTo("NOK"), equalTo("DKK"), equalTo("EUR")));
  
          }
      
              if (response.jsonPath().get("bookingResult.bookedItems.inboundDiscounts["+ i +"].price.value") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("bookingResult.bookedItems.inboundDiscounts["+ i +"].price.value"), instanceOf(Integer.class));  
          }
      
              if (response.jsonPath().get("bookingResult.bookedItems.inboundDiscounts["+ i +"].price.available") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("bookingResult.bookedItems.inboundDiscounts["+ i +"].price.available"), instanceOf(Boolean.class));  
          }
  
          }
      
              if (response.jsonPath().get("bookingResult.bookedItems.inboundDiscounts["+ i +"].bookedItemReference") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("bookingResult.bookedItems.inboundDiscounts["+ i +"].bookedItemReference"), instanceOf(String.class));  
          }
      
              if (response.jsonPath().get("bookingResult.bookedItems.inboundDiscounts["+ i +"].isAttachment") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("bookingResult.bookedItems.inboundDiscounts["+ i +"].isAttachment"), instanceOf(Boolean.class));  
          }
      
              if (response.jsonPath().get("bookingResult.bookedItems.inboundDiscounts["+ i +"].attachmentIsPerPassenger") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("bookingResult.bookedItems.inboundDiscounts["+ i +"].attachmentIsPerPassenger"), instanceOf(Boolean.class));  
          }
      
                  }    
                MatcherAssert.assertThat(response.jsonPath().getList("bookingResult.bookedItems.inboundDiscounts"), instanceOf(List.class));
  
          }
  
          }
  
          }
      
              if (response.jsonPath().get("timestamp") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("timestamp"), instanceOf(Integer.class));  
          }
      
              if (response.jsonPath().get("packageCode") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("packageCode"), instanceOf(String.class));  
          }
      
              if (response.jsonPath().get("referralCode") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("referralCode"), instanceOf(String.class));  
          }
      
              if (response.jsonPath().get("voucherCode") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("voucherCode"), instanceOf(String.class));  
          }
      
              if (response.jsonPath().get("ticketBookCode") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("ticketBookCode"), instanceOf(String.class));  
          }
      
              if (response.jsonPath().get("ticketBookPassword") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("ticketBookPassword"), instanceOf(String.class));  
          }
      
              if (response.jsonPath().get("accommodations") != null) {      
                for (int i = 0; i < response.jsonPath().getList("accommodations").size(); i++) {      
              if (response.jsonPath().get("accommodations["+ i +"].code") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("accommodations["+ i +"].code"), instanceOf(String.class));  
          }
      
              if (response.jsonPath().get("accommodations["+ i +"].name") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("accommodations["+ i +"].name"), instanceOf(String.class));  
          }
      
              if (response.jsonPath().get("accommodations["+ i +"].checkinDate") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("accommodations["+ i +"].checkinDate"), instanceOf(String.class));  
          }
      
              if (response.jsonPath().get("accommodations["+ i +"].checkoutDate") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("accommodations["+ i +"].checkoutDate"), instanceOf(String.class));  
          }
      
              if (response.jsonPath().get("accommodations["+ i +"].rooms") != null) {      
                for (int i1 = 0; i1 < response.jsonPath().getList("accommodations["+ i +"].rooms").size(); i1++) {      
              if (response.jsonPath().get("accommodations["+ i +"].rooms["+ i1 +"].name") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("accommodations["+ i +"].rooms["+ i1 +"].name"), instanceOf(String.class));  
          }
      
              if (response.jsonPath().get("accommodations["+ i +"].rooms["+ i1 +"].code") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("accommodations["+ i +"].rooms["+ i1 +"].code"), instanceOf(String.class));  
          }
      
              if (response.jsonPath().get("accommodations["+ i +"].rooms["+ i1 +"].quantity") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("accommodations["+ i +"].rooms["+ i1 +"].quantity"), instanceOf(Integer.class));  
          }
      
              if (response.jsonPath().get("accommodations["+ i +"].rooms["+ i1 +"].price") != null) {      
              if (response.jsonPath().get("accommodations["+ i +"].rooms["+ i1 +"].price.currency") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("accommodations["+ i +"].rooms["+ i1 +"].price.currency"), instanceOf(String.class));  
                MatcherAssert.assertThat(response.jsonPath().getString("accommodations["+ i +"].rooms["+ i1 +"].price.currency"), anyOf(equalTo("NOK"), equalTo("DKK"), equalTo("EUR")));
  
          }
      
              if (response.jsonPath().get("accommodations["+ i +"].rooms["+ i1 +"].price.value") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("accommodations["+ i +"].rooms["+ i1 +"].price.value"), instanceOf(Integer.class));  
          }
      
              if (response.jsonPath().get("accommodations["+ i +"].rooms["+ i1 +"].price.available") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("accommodations["+ i +"].rooms["+ i1 +"].price.available"), instanceOf(Boolean.class));  
          }
  
          }
      
                  }    
                MatcherAssert.assertThat(response.jsonPath().getList("accommodations["+ i +"].rooms"), instanceOf(List.class));
  
          }
      
                  }    
                MatcherAssert.assertThat(response.jsonPath().getList("accommodations"), instanceOf(List.class));
  
          }
      
              if (response.jsonPath().get("showOnlyTotalPrice") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("showOnlyTotalPrice"), instanceOf(Boolean.class));  
          }
      
              if (response.jsonPath().get("paymentMethod") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("paymentMethod"), instanceOf(String.class));  
                MatcherAssert.assertThat(response.jsonPath().getString("paymentMethod"), anyOf(equalTo("CREDIT_CARD"), equalTo("VOUCHER"), equalTo("CLUB_POINTS"), equalTo("TICKET_BOOK")));
  
          }
				}
if (response.statusCode() == 400) {
					System.out.println("Description: Bad Request");
				}
if (response.statusCode() == 403) {
					System.out.println("Description: Forbidden");
				}
if (response.statusCode() == 404) {
					System.out.println("Description: Not Found");
				}
  
            }  
    }
}
