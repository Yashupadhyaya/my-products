// ********RoostGPT********
/*
Test generated by RoostGPT for test postman-test using AI Type Open AI and AI Model gpt-4

Test generated for /threads/{thread_id}_post for http method type POST in rest-assured framework

RoostTestHash=27cab446a4


*/

// ********RoostGPT********

public class threadsThreadIdPostTest {

    List<Map<String, String>> envList = new ArrayList<>();


    @Before // This should be @BeforeEach if using JUnit 5
    public void setUp() {
      TestdataLoader dataloader = new TestdataLoader(); // Make sure TestdataLoader class is properly defined
      envList = dataloader.loadData("src/test/java/com/bootexample4/RoostTest/threads_thread_idPostTest.csv"); // Make sure loadData() method is properly defined
    }

  
    @Test  
    public void threadsThreadIdPost_Test() {
        this.setUp();
        for (Map<String, String> testData : envList) {
          RestAssured.baseURI = "https://api.openai.com/v1";  
  
                Response response = given()
				.pathParam("thread_id", testData.get("thread_id") != null ? testData.get("thread_id") : "")
				.contentType(ContentType.JSON)
				.body("{\n"+
					"  \"metadata\": \"" + (testData.get("metadata") != null ? testData.get("metadata") : "") + "\n" +
 				"}")
				.header("api_key", testData.get("api_key"))
                .when()
                .post("/threads/{thread_id}")  
                .then() 
                .extract().response();    
         
                if (response.statusCode() == 200) {
					System.out.println("Description: OK");
      
              if (response.jsonPath().get("id") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("id"), instanceOf(String.class));  
          }
      
              if (response.jsonPath().get("object") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("object"), instanceOf(String.class));  
                MatcherAssert.assertThat(response.jsonPath().getString("object"), equalTo("thread")); // Corrected the MatcherAssert.assertThat() usage
  
          }
      
              if (response.jsonPath().get("created_at") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("created_at"), instanceOf(Integer.class));  
          }
      
              if (response.jsonPath().get("metadata") != null) {  
          }
				}
  
            }  
    }
}
