// Test generated by RoostGPT for test postman-test using AI Type Azure Open AI and AI Model roost-gpt4-32k

// RoostTestHash=3a8d014c99

package com.bootexample4.RoostTest;

import io.restassured.RestAssured;
import io.restassured.path.json.JsonPath;
import io.restassured.response.Response;
import org.junit.Test;

import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.util.HashMap;
import java.util.Map;

import static io.restassured.RestAssured.given;
import static org.hamcrest.CoreMatchers.instanceOf;

public class laureate_laureateIDGetTest {
  
    @Test  
    public void laureate_laureateID_get_Test() {  
        RestAssured.baseURI = System.getenv("BASE_URL");  
  
        // Read CSV file  
        try (
            BufferedReader reader = new BufferedReader(new FileReader("laureate_laureateID_get.csv"))
           )
        
        {  
            String headerLine = reader.readLine();  
            String[] headers = headerLine.split(",");  
  
            String line;  
            while ((line = reader.readLine()) != null) {  
                String[] data = line.split(",");  
  
                // Create a map of header to data  
                Map<String, String> map = new HashMap<>();  
                for (int i = 0; i < headers.length; i++) {  
                    map.put(headers[i], data[i]);  
                }  
  
                Response response = given() 
                .pathParam("laureateID", map.get("laureateID"))

                .when()
                .get("/laureate/{laureateID}")  
                .then() 
                .extract().response();    

                int statusCode = response.statusCode();

                // Check status code type
                if (200 <= statusCode && statusCode < 300) {
                   assertThat(response.getBody(), is(notEmptyString()));
                } else if (statusCode == 400 || 
                           statusCode == 404 || 
                           statusCode == 422) {
              
                   JsonPath jsonPathEvaluator = response.jsonPath();
  
                   if (jsonPathEvaluator.get("code") != null) {  
                      assertThat(jsonPathEvaluator.get("code"), instanceOf(String.class));  
                   }
  
                   if (jsonPathEvaluator.get("message") != null) {  
                      assertThat(jsonPathEvaluator.get("message"), instanceOf(String.class));  
                   }
                } else {
                   fail("Unexpected status code received");
                }
            }  
        } catch (IOException e) {  
            e.printStackTrace();  
        }  
    }
}
