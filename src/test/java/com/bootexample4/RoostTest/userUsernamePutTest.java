// ********RoostGPT********
/*
Test generated by RoostGPT for test postman-test using AI Type Open AI and AI Model gpt-4

Test generated for /user/{username}_put for http method type PUT in rest-assured framework

RoostTestHash=5143f7c0c5


*/

// ********RoostGPT********
package com.bootexample4.RoostTest;
import io.restassured.RestAssured;
import io.restassured.path.json.JsonPath;
import io.restassured.http.ContentType;
import io.restassured.response.Response;
import org.junit.Before;
import org.junit.jupiter.api.Test;
import static io.restassured.RestAssured.given;
import static org.junit.Assert.*;
import java.io.BufferedReader;
import java.io.File;
import java.io.IOException;
import java.util.HashMap;
import java.util.Map;
import java.util.ArrayList;
import java.util.List;
import org.hamcrest.MatcherAssert;
import static org.hamcrest.Matchers.*;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.json.JSONObject;
import org.json.XML;
import org.json.JSONException;

public class userUsernamePutTest {

    List<Map<String, String>> envList = new ArrayList<>();


    @Before
    public void setUp() {
      TestdataLoader dataloader = new TestdataLoader();
      envList = dataloader.loadData("src/test/java/com/bootexample4/RoostTest/user_usernamePutTest.csv");
    }

  
    @Test  
    public void userUsernamePut_Test() {
        this.setUp();
        for (Map<String, String> testData : envList) {
          RestAssured.baseURI = "/api/v3";  
  
                Response responseObj = given()
				.pathParam("username", testData.get("username") != null ? testData.get("username") : "")
				.contentType(ContentType.JSON)
				.body("{\n"+
					"  \"id\": \"" + (testData.get("id") != null ? testData.get("id") : "") + "\",\n" +
					"  \"username\": \"" + (testData.get("username") != null ? testData.get("username") : "") + "\",\n" +
					"  \"firstName\": \"" + (testData.get("firstName") != null ? testData.get("firstName") : "") + "\",\n" +
					"  \"lastName\": \"" + (testData.get("lastName") != null ? testData.get("lastName") : "") + "\",\n" +
					"  \"email\": \"" + (testData.get("email") != null ? testData.get("email") : "") + "\",\n" +
					"  \"password\": \"" + (testData.get("password") != null ? testData.get("password") : "") + "\",\n" +
					"  \"phone\": \"" + (testData.get("phone") != null ? testData.get("phone") : "") + "\",\n" +
					"  \"userStatus\": \"" + (testData.get("userStatus") != null ? testData.get("userStatus") : "") + "\n" +
 				"}")
                .when()
                .put("/user/{username}")  
                .then() 
                .extract().response(); 
              JsonPath response;
              String contentType = responseObj.getContentType();
              if (contentType.contains("application/xml") || contentType.contains("text/xml")) {
                String xmlResponse = responseObj.asString();
                JSONObject jsonResponse = XML.toJSONObject(xmlResponse);
                JSONObject jsonData = jsonResponse.getJSONObject("xml");
                String jsonString = jsonData.toString();
                response = new JsonPath(jsonString);
        
              } else {  
                response = responseObj.jsonPath(); 
              }  
         
                if (responseObj.statusCode() == default) {
					System.out.println("Description: successful operation");
				}
  
            }  
    }
}
