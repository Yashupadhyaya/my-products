// ********RoostGPT********
/*
Test generated by RoostGPT for test postman-test using AI Type Open AI and AI Model gpt-4

Test generated for /audio/speech_post for http method type POST in rest-assured framework

RoostTestHash=13ceb739c9


*/

// ********RoostGPT********
package com.bootexample4.RoostTest;
import io.restassured.RestAssured;
import io.restassured.http.ContentType;
import io.restassured.response.Response;
import org.junit.Before;
import org.junit.jupiter.api.Test;
import static io.restassured.RestAssured.given;
import static org.junit.Assert.*;
import java.io.BufferedReader;
import java.io.File;
import java.io.IOException;
import java.util.HashMap;
import java.util.Map;
import java.util.ArrayList;
import java.util.List;
import org.hamcrest.MatcherAssert;
import static org.hamcrest.Matchers.*;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

public class speechPostTest {

    List<Map<String, String>> envList = new ArrayList<>();


    @Before
    public void setUp() {
      TestdataLoader dataloader = new TestdataLoader();
      envList = dataloader.loadData("src/test/java/com/bootexample4/RoostTest/speechPostTest.csv");
    }

  
    @Test  
    public void speechPost_Test() {
        this.setUp();
        for (Map<String, String> testData : envList) {
          RestAssured.baseURI = "https://api.openai.com/v1";  
  
                Response response = given()
				.contentType(ContentType.JSON)
				.body("{\n"+
					"  \"model\": \"" + (testData.get("model") != null ? testData.get("model") : "") + "\",\n" +
					"  \"input\": \"" + (testData.get("input") != null ? testData.get("input") : "") + "\",\n" +
					"  \"voice\": \"" + (testData.get("voice") != null ? testData.get("voice") : "") + "\",\n" +
					"  \"response_format\": \"" + (testData.get("response_format") != null ? testData.get("response_format") : "") + "\",\n" +
					"  \"speed\": \"" + (testData.get("speed") != null ? testData.get("speed") : "") + "\n" +
 				"}")
				.header("api_key", testData.get("api_key"))
                .when()
                .post("/audio/speech")  
                .then() 
                .extract().response();    
         
                if (response.statusCode() == 200) {
					System.out.println("Description: OK");
				}
  
            }  
    }
}
