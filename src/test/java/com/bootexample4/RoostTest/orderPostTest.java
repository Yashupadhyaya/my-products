// ********RoostGPT********
/*
Test generated by RoostGPT for test postman-test using AI Type Open AI and AI Model gpt-4

Test generated for /store/order_post for http method type POST in rest-assured framework

RoostTestHash=e00caa0ca8


*/

// ********RoostGPT********
package com.bootexample4.RoostTest;
import io.restassured.RestAssured;
import io.restassured.path.json.JsonPath;
import io.restassured.http.ContentType;
import io.restassured.response.Response;
import org.junit.Before;
import org.junit.jupiter.api.Test;
import static io.restassured.RestAssured.given;
import static org.junit.Assert.*;
import java.io.BufferedReader;
import java.io.File;
import java.io.IOException;
import java.util.HashMap;
import java.util.Map;
import java.util.ArrayList;
import java.util.List;
import org.hamcrest.MatcherAssert;
import static org.hamcrest.Matchers.*;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.json.JSONObject;
import org.json.XML;
import org.json.JSONException;

public class orderPostTest {

    List<Map<String, String>> envList = new ArrayList<>();


    @Before
    public void setUp() {
      TestdataLoader dataloader = new TestdataLoader();
      envList = dataloader.loadData("src/test/java/com/bootexample4/RoostTest/orderPostTest.csv");
    }

  
    @Test  
    public void orderPost_Test() {
        this.setUp();
        for (Map<String, String> testData : envList) {
          RestAssured.baseURI = "/api/v3";  
  
                Response responseObj = given()
				.contentType(ContentType.JSON)
				.body("{\n"+
					"  \"id\": \"" + (testData.get("id") != null ? testData.get("id") : "") + "\",\n" +
					"  \"petId\": \"" + (testData.get("petId") != null ? testData.get("petId") : "") + "\",\n" +
					"  \"quantity\": \"" + (testData.get("quantity") != null ? testData.get("quantity") : "") + "\",\n" +
					"  \"shipDate\": \"" + (testData.get("shipDate") != null ? testData.get("shipDate") : "") + "\",\n" +
					"  \"status\": \"" + (testData.get("status") != null ? testData.get("status") : "") + "\",\n" +
					"  \"complete\": \"" + (testData.get("complete") != null ? testData.get("complete") : "") + "\n" +
 				"}")
                .when()
                .post("/store/order")  
                .then() 
                .extract().response(); 
              JsonPath response;
              String contentType = responseObj.getContentType();
              if (contentType.contains("application/xml") || contentType.contains("text/xml")) {
                String xmlResponse = responseObj.asString();
                JSONObject jsonResponse = XML.toJSONObject(xmlResponse);
                JSONObject jsonData = jsonResponse.getJSONObject("xml");
                String jsonString = jsonData.toString();
                response = new JsonPath(jsonString);
        
              } else {  
                response = responseObj.jsonPath(); 
              }  
         
                if (responseObj.statusCode() == 200) {
					System.out.println("Description: successful operation");
      
              if (response.get("id") != null) {      
              if (response.get("id.id") != null) {  
                MatcherAssert.assertThat(response.get("id.id"), instanceOf(Integer.class));  
          }
      
              if (response.get("id.petId") != null) {  
                MatcherAssert.assertThat(response.get("id.petId"), instanceOf(Integer.class));  
          }
      
              if (response.get("id.quantity") != null) {  
                MatcherAssert.assertThat(response.get("id.quantity"), instanceOf(Integer.class));  
          }
      
              if (response.get("id.shipDate") != null) {  
                MatcherAssert.assertThat(response.get("id.shipDate"), instanceOf(String.class));  
          }
      
              if (response.get("id.status") != null) {  
                MatcherAssert.assertThat(response.get("id.status"), instanceOf(String.class));  
                MatcherAssert.assertThat(response.getString("id.status"), anyOf(equalTo("placed"), equalTo("approved"), equalTo("delivered")));
  
          }
      
              if (response.get("id.complete") != null) {  
                MatcherAssert.assertThat(response.get("id.complete"), instanceOf(Boolean.class));  
          }
  
          }
      
              if (response.get("petId") != null) {      
              if (response.get("petId.id") != null) {  
                MatcherAssert.assertThat(response.get("petId.id"), instanceOf(Integer.class));  
          }
      
              if (response.get("petId.petId") != null) {  
                MatcherAssert.assertThat(response.get("petId.petId"), instanceOf(Integer.class));  
          }
      
              if (response.get("petId.quantity") != null) {  
                MatcherAssert.assertThat(response.get("petId.quantity"), instanceOf(Integer.class));  
          }
      
              if (response.get("petId.shipDate") != null) {  
                MatcherAssert.assertThat(response.get("petId.shipDate"), instanceOf(String.class));  
          }
      
              if (response.get("petId.status") != null) {  
                MatcherAssert.assertThat(response.get("petId.status"), instanceOf(String.class));  
                MatcherAssert.assertThat(response.getString("petId.status"), anyOf(equalTo("placed"), equalTo("approved"), equalTo("delivered")));
  
          }
      
              if (response.get("petId.complete") != null) {  
                MatcherAssert.assertThat(response.get("petId.complete"), instanceOf(Boolean.class));  
          }
  
          }
      
              if (response.get("quantity") != null) {      
              if (response.get("quantity.id") != null) {  
                MatcherAssert.assertThat(response.get("quantity.id"), instanceOf(Integer.class));  
          }
      
              if (response.get("quantity.petId") != null) {  
                MatcherAssert.assertThat(response.get("quantity.petId"), instanceOf(Integer.class));  
          }
      
              if (response.get("quantity.quantity") != null) {  
                MatcherAssert.assertThat(response.get("quantity.quantity"), instanceOf(Integer.class));  
          }
      
              if (response.get("quantity.shipDate") != null) {  
                MatcherAssert.assertThat(response.get("quantity.shipDate"), instanceOf(String.class));  
          }
      
              if (response.get("quantity.status") != null) {  
                MatcherAssert.assertThat(response.get("quantity.status"), instanceOf(String.class));  
                MatcherAssert.assertThat(response.getString("quantity.status"), anyOf(equalTo("placed"), equalTo("approved"), equalTo("delivered")));
  
          }
      
              if (response.get("quantity.complete") != null) {  
                MatcherAssert.assertThat(response.get("quantity.complete"), instanceOf(Boolean.class));  
          }
  
          }
      
              if (response.get("shipDate") != null) {      
              if (response.get("shipDate.id") != null) {  
                MatcherAssert.assertThat(response.get("shipDate.id"), instanceOf(Integer.class));  
          }
      
              if (response.get("shipDate.petId") != null) {  
                MatcherAssert.assertThat(response.get("shipDate.petId"), instanceOf(Integer.class));  
          }
      
              if (response.get("shipDate.quantity") != null) {  
                MatcherAssert.assertThat(response.get("shipDate.quantity"), instanceOf(Integer.class));  
          }
      
              if (response.get("shipDate.shipDate") != null) {  
                MatcherAssert.assertThat(response.get("shipDate.shipDate"), instanceOf(String.class));  
          }
      
              if (response.get("shipDate.status") != null) {  
                MatcherAssert.assertThat(response.get("shipDate.status"), instanceOf(String.class));  
                MatcherAssert.assertThat(response.getString("shipDate.status"), anyOf(equalTo("placed"), equalTo("approved"), equalTo("delivered")));
  
          }
      
              if (response.get("shipDate.complete") != null) {  
                MatcherAssert.assertThat(response.get("shipDate.complete"), instanceOf(Boolean.class));  
          }
  
          }
      
              if (response.get("status") != null) {      
              if (response.get("status.id") != null) {  
                MatcherAssert.assertThat(response.get("status.id"), instanceOf(Integer.class));  
          }
      
              if (response.get("status.petId") != null) {  
                MatcherAssert.assertThat(response.get("status.petId"), instanceOf(Integer.class));  
          }
      
              if (response.get("status.quantity") != null) {  
                MatcherAssert.assertThat(response.get("status.quantity"), instanceOf(Integer.class));  
          }
      
              if (response.get("status.shipDate") != null) {  
                MatcherAssert.assertThat(response.get("status.shipDate"), instanceOf(String.class));  
          }
      
              if (response.get("status.status") != null) {  
                MatcherAssert.assertThat(response.get("status.status"), instanceOf(String.class));  
                MatcherAssert.assertThat(response.getString("status.status"), anyOf(equalTo("placed"), equalTo("approved"), equalTo("delivered")));
  
          }
      
              if (response.get("status.complete") != null) {  
                MatcherAssert.assertThat(response.get("status.complete"), instanceOf(Boolean.class));  
          }
  
          }
      
              if (response.get("complete") != null) {      
              if (response.get("complete.id") != null) {  
                MatcherAssert.assertThat(response.get("complete.id"), instanceOf(Integer.class));  
          }
      
              if (response.get("complete.petId") != null) {  
                MatcherAssert.assertThat(response.get("complete.petId"), instanceOf(Integer.class));  
          }
      
              if (response.get("complete.quantity") != null) {  
                MatcherAssert.assertThat(response.get("complete.quantity"), instanceOf(Integer.class));  
          }
      
              if (response.get("complete.shipDate") != null) {  
                MatcherAssert.assertThat(response.get("complete.shipDate"), instanceOf(String.class));  
          }
      
              if (response.get("complete.status") != null) {  
                MatcherAssert.assertThat(response.get("complete.status"), instanceOf(String.class));  
                MatcherAssert.assertThat(response.getString("complete.status"), anyOf(equalTo("placed"), equalTo("approved"), equalTo("delivered")));
  
          }
      
              if (response.get("complete.complete") != null) {  
                MatcherAssert.assertThat(response.get("complete.complete"), instanceOf(Boolean.class));  
          }
  
          }
				}
if (responseObj.statusCode() == 405) {
					System.out.println("Description: Invalid input");
				}
  
            }  
    }
}
